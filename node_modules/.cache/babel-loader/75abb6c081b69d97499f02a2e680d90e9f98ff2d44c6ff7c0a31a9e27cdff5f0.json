{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THORSIGNIA\\\\Projects\\\\automation-dash\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiClient from '../services/apiClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          apiClient.setToken(token); // Ensure API client has the token\n          const userData = await apiClient.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        // Clear invalid token\n        localStorage.removeItem('authToken');\n        apiClient.setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await apiClient.login(email, password);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await apiClient.register(userData);\n      return response;\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n  const sendOTP = async email => {\n    try {\n      const response = await apiClient.sendOTP(email);\n      return response;\n    } catch (error) {\n      console.error('Send OTP failed:', error);\n      throw error;\n    }\n  };\n  const verifyOTP = async (email, otp) => {\n    try {\n      const response = await apiClient.verifyOTP(email, otp);\n      return response;\n    } catch (error) {\n      console.error('OTP verification failed:', error);\n      throw error;\n    }\n  };\n  const resendOTP = async email => {\n    try {\n      const response = await apiClient.resendOTP(email);\n      return response;\n    } catch (error) {\n      console.error('Resend OTP failed:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiClient.logout();\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  const loginWithGoogle = async () => {\n    try {\n      // Get Google OAuth URL from backend\n      const response = await apiClient.getGoogleOAuthUrl();\n      const {\n        auth_url\n      } = response;\n\n      // Open popup window for Google OAuth\n      const popup = window.open(auth_url, 'google-oauth', 'width=500,height=600,scrollbars=yes,resizable=yes');\n      if (!popup) {\n        throw new Error('Failed to open OAuth popup. Please allow popups for this site.');\n      }\n      return new Promise((resolve, reject) => {\n        let isResolved = false;\n        let checkClosedInterval;\n        let timeoutId;\n\n        // Cleanup function\n        const cleanup = () => {\n          window.removeEventListener('message', messageListener);\n          if (checkClosedInterval) {\n            clearInterval(checkClosedInterval);\n            checkClosedInterval = null;\n          }\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n            timeoutId = null;\n          }\n        };\n\n        // Listen for messages from the popup (sent by backend callback)\n        const messageListener = event => {\n          console.log('üîç Received message:', event.data, 'from origin:', event.origin);\n\n          // Accept messages from our backend origin (both HTTP and HTTPS), and wildcard '*' for dev\n          const allowedOrigins = ['http://localhost:8000', 'https://localhost:8000', window.location.origin, '*'];\n          if (!allowedOrigins.includes(event.origin)) {\n            console.log('üîç Ignoring message from unexpected origin:', event.origin);\n            return;\n          }\n          if (isResolved) {\n            console.log('üîç Message received but already resolved, ignoring');\n            return; // Prevent multiple resolutions\n          }\n          if (event.data.success && event.data.access_token) {\n            console.log('‚úÖ OAuth success received:', event.data);\n            // Backend successfully processed OAuth and sent us the token\n            isResolved = true;\n            apiClient.setToken(event.data.access_token);\n            setUser(event.data.user);\n            setIsAuthenticated(true);\n            cleanup();\n            try {\n              if (popup && !popup.closed) popup.close();\n            } catch (e) {\n              console.warn('Could not close popup:', e);\n            }\n            resolve(event.data);\n          } else if (event.data.error) {\n            console.log('‚ùå OAuth error received:', event.data.error);\n            isResolved = true;\n            cleanup();\n            try {\n              if (popup && !popup.closed) popup.close();\n            } catch (e) {\n              console.warn('Could not close popup:', e);\n            }\n            reject(new Error(event.data.error));\n          } else {\n            console.log('üîç Received message with unexpected format:', event.data);\n          }\n        };\n        window.addEventListener('message', messageListener);\n\n        // Handle popup closure detection with COOP compatibility\n        let popupCheckAttempts = 0;\n        const maxPopupCheckAttempts = 3; // Minimal attempts to avoid console spam\n\n        const checkClosed = () => {\n          popupCheckAttempts++;\n          try {\n            // Try to access popup.closed, but handle COOP gracefully\n            if (popup && popup.closed) {\n              if (!isResolved) {\n                console.log('üîç Popup was closed by user (attempt', popupCheckAttempts, ')');\n                // Wait 500ms before rejecting, to allow any pending message events\n                setTimeout(() => {\n                  if (!isResolved) {\n                    isResolved = true;\n                    cleanup();\n                    reject(new Error('OAuth popup was closed by user'));\n                  }\n                }, 500);\n              }\n              return;\n            } else {\n              console.log('üîç Popup still open (attempt', popupCheckAttempts, ')');\n            }\n          } catch (error) {\n            // COOP policy blocks access - this is expected in secure contexts\n            // Don't log this as an error since it's normal behavior\n            if (popupCheckAttempts === 1) {\n              console.log('üîç COOP policy active - relying on message listener for popup status');\n            }\n          }\n\n          // After a few failed attempts, stop trying to check popup.closed\n          if (popupCheckAttempts >= maxPopupCheckAttempts) {\n            if (checkClosedInterval) {\n              clearInterval(checkClosedInterval);\n              checkClosedInterval = null;\n            }\n            console.log('üîç Stopped checking popup.closed, relying on message listener');\n            // Continue relying on message listener and timeout\n          }\n        };\n\n        // Start checking popup status with longer intervals to reduce COOP errors\n        checkClosedInterval = setInterval(checkClosed, 3000); // Check every 3 seconds\n\n        // Set a reasonable timeout for OAuth process\n        timeoutId = setTimeout(() => {\n          if (!isResolved) {\n            console.log('üîç OAuth timeout reached');\n            isResolved = true;\n            cleanup();\n            try {\n              if (popup && !popup.closed) popup.close();\n            } catch (e) {\n              console.warn('Could not close popup on timeout:', e);\n            }\n            reject(new Error('OAuth timeout - please ensure you accept the SSL certificate and try again'));\n          }\n        }, 300000); // 5 minutes to allow for certificate acceptance and debugging\n      });\n    } catch (error) {\n      console.error('Google OAuth failed:', error);\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    sendOTP,\n    verifyOTP,\n    resendOTP\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiClient","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","token","localStorage","getItem","setToken","userData","getCurrentUser","error","console","removeItem","login","email","password","response","register","sendOTP","verifyOTP","otp","resendOTP","logout","loginWithGoogle","getGoogleOAuthUrl","auth_url","popup","window","open","Promise","resolve","reject","isResolved","checkClosedInterval","timeoutId","cleanup","removeEventListener","messageListener","clearInterval","clearTimeout","event","log","data","origin","allowedOrigins","location","includes","success","access_token","closed","close","e","warn","addEventListener","popupCheckAttempts","maxPopupCheckAttempts","checkClosed","setTimeout","setInterval","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/THORSIGNIA/Projects/automation-dash/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport apiClient from '../services/apiClient';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n          apiClient.setToken(token); // Ensure API client has the token\r\n          const userData = await apiClient.getCurrentUser();\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        // Clear invalid token\r\n        localStorage.removeItem('authToken');\r\n        apiClient.setToken(null);\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await apiClient.login(email, password);\r\n      setUser(response.user);\r\n      setIsAuthenticated(true);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await apiClient.register(userData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const sendOTP = async (email) => {\r\n    try {\r\n      const response = await apiClient.sendOTP(email);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Send OTP failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async (email, otp) => {\r\n    try {\r\n      const response = await apiClient.verifyOTP(email, otp);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('OTP verification failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const resendOTP = async (email) => {\r\n    try {\r\n      const response = await apiClient.resendOTP(email);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Resend OTP failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiClient.logout();\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  const loginWithGoogle = async () => {\r\n    try {\r\n      // Get Google OAuth URL from backend\r\n      const response = await apiClient.getGoogleOAuthUrl();\r\n      const { auth_url } = response;\r\n      \r\n      // Open popup window for Google OAuth\r\n      const popup = window.open(\r\n        auth_url,\r\n        'google-oauth',\r\n        'width=500,height=600,scrollbars=yes,resizable=yes'\r\n      );\r\n      \r\n      if (!popup) {\r\n        throw new Error('Failed to open OAuth popup. Please allow popups for this site.');\r\n      }\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        let isResolved = false;\r\n        let checkClosedInterval;\r\n        let timeoutId;\r\n\r\n        // Cleanup function\r\n        const cleanup = () => {\r\n          window.removeEventListener('message', messageListener);\r\n          if (checkClosedInterval) {\r\n            clearInterval(checkClosedInterval);\r\n            checkClosedInterval = null;\r\n          }\r\n          if (timeoutId) {\r\n            clearTimeout(timeoutId);\r\n            timeoutId = null;\r\n          }\r\n        };\r\n\r\n        // Listen for messages from the popup (sent by backend callback)\r\n        const messageListener = (event) => {\r\n          console.log('üîç Received message:', event.data, 'from origin:', event.origin);\r\n\r\n          // Accept messages from our backend origin (both HTTP and HTTPS), and wildcard '*' for dev\r\n          const allowedOrigins = ['http://localhost:8000', 'https://localhost:8000', window.location.origin, '*'];\r\n          if (!allowedOrigins.includes(event.origin)) {\r\n            console.log('üîç Ignoring message from unexpected origin:', event.origin);\r\n            return;\r\n          }\r\n\r\n          if (isResolved) {\r\n            console.log('üîç Message received but already resolved, ignoring');\r\n            return; // Prevent multiple resolutions\r\n          }\r\n\r\n          if (event.data.success && event.data.access_token) {\r\n            console.log('‚úÖ OAuth success received:', event.data);\r\n            // Backend successfully processed OAuth and sent us the token\r\n            isResolved = true;\r\n            apiClient.setToken(event.data.access_token);\r\n            setUser(event.data.user);\r\n            setIsAuthenticated(true);\r\n\r\n            cleanup();\r\n            try {\r\n              if (popup && !popup.closed) popup.close();\r\n            } catch (e) {\r\n              console.warn('Could not close popup:', e);\r\n            }\r\n            resolve(event.data);\r\n          } else if (event.data.error) {\r\n            console.log('‚ùå OAuth error received:', event.data.error);\r\n            isResolved = true;\r\n            cleanup();\r\n            try {\r\n              if (popup && !popup.closed) popup.close();\r\n            } catch (e) {\r\n              console.warn('Could not close popup:', e);\r\n            }\r\n            reject(new Error(event.data.error));\r\n          } else {\r\n            console.log('üîç Received message with unexpected format:', event.data);\r\n          }\r\n        };\r\n\r\n        window.addEventListener('message', messageListener);\r\n\r\n        // Handle popup closure detection with COOP compatibility\r\n        let popupCheckAttempts = 0;\r\n        const maxPopupCheckAttempts = 3; // Minimal attempts to avoid console spam\r\n\r\n        const checkClosed = () => {\r\n          popupCheckAttempts++;\r\n\r\n          try {\r\n            // Try to access popup.closed, but handle COOP gracefully\r\n            if (popup && popup.closed) {\r\n              if (!isResolved) {\r\n                console.log('üîç Popup was closed by user (attempt', popupCheckAttempts, ')');\r\n                // Wait 500ms before rejecting, to allow any pending message events\r\n                setTimeout(() => {\r\n                  if (!isResolved) {\r\n                    isResolved = true;\r\n                    cleanup();\r\n                    reject(new Error('OAuth popup was closed by user'));\r\n                  }\r\n                }, 500);\r\n              }\r\n              return;\r\n            } else {\r\n              console.log('üîç Popup still open (attempt', popupCheckAttempts, ')');\r\n            }\r\n          } catch (error) {\r\n            // COOP policy blocks access - this is expected in secure contexts\r\n            // Don't log this as an error since it's normal behavior\r\n            if (popupCheckAttempts === 1) {\r\n              console.log('üîç COOP policy active - relying on message listener for popup status');\r\n            }\r\n          }\r\n\r\n          // After a few failed attempts, stop trying to check popup.closed\r\n          if (popupCheckAttempts >= maxPopupCheckAttempts) {\r\n            if (checkClosedInterval) {\r\n              clearInterval(checkClosedInterval);\r\n              checkClosedInterval = null;\r\n            }\r\n            console.log('üîç Stopped checking popup.closed, relying on message listener');\r\n            // Continue relying on message listener and timeout\r\n          }\r\n        };\r\n\r\n        // Start checking popup status with longer intervals to reduce COOP errors\r\n        checkClosedInterval = setInterval(checkClosed, 3000); // Check every 3 seconds\r\n\r\n        // Set a reasonable timeout for OAuth process\r\n        timeoutId = setTimeout(() => {\r\n          if (!isResolved) {\r\n            console.log('üîç OAuth timeout reached');\r\n            isResolved = true;\r\n            cleanup();\r\n            try {\r\n              if (popup && !popup.closed) popup.close();\r\n            } catch (e) {\r\n              console.warn('Could not close popup on timeout:', e);\r\n            }\r\n            reject(new Error('OAuth timeout - please ensure you accept the SSL certificate and try again'));\r\n          }\r\n        }, 300000); // 5 minutes to allow for certificate acceptance and debugging\r\n      });\r\n    } catch (error) {\r\n      console.error('Google OAuth failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    loginWithGoogle,\r\n    sendOTP,\r\n    verifyOTP,\r\n    resendOTP,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}