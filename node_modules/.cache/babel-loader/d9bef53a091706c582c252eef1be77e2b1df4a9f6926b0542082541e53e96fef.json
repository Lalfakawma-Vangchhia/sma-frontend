{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THORSIGNIA\\\\Projects\\\\automation-dash\\\\frontend\\\\src\\\\components\\\\InstagramPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport apiClient from '../services/apiClient';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNotifications } from '../contexts/NotificationContext';\nimport IgBulkComposer from './igBulkComposer';\nimport './InstagramPage.css';\nimport ScheduledPostHistory from './ScheduledPostHistory';\nimport { loadFacebookSDK } from './FacebookUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACCEPTED_IMAGE_TYPES = ['image/png', 'image/jpeg', 'image/jpg'];\nconst ACCEPTED_VIDEO_TYPES = ['video/mp4', 'video/quicktime'];\nconst InstagramPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    isAuthenticated,\n    loading: authLoading,\n    user\n  } = useAuth();\n  const {\n    addNotification,\n    testNotification,\n    testWebSocketConnection,\n    testApiConnection,\n    testSimpleWebSocket,\n    refreshNotifications\n  } = useNotifications();\n\n  // UI State\n  const [isConnected, setIsConnected] = useState(false);\n  const [instagramAccounts, setInstagramAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState('');\n  const [activeTab, setActiveTab] = useState('connect');\n  const [sdkLoaded, setSdkLoaded] = useState(false);\n  const [fbAccessToken, setFbAccessToken] = useState(null);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Post State\n  const [postType, setPostType] = useState('photo'); // photo | carousel | reel\n  const [caption, setCaption] = useState('');\n  const [aiPrompt, setAiPrompt] = useState('');\n  const [aiGenerating, setAiGenerating] = useState(false);\n  const [aiImageUrl, setAiImageUrl] = useState('');\n  const [imageSource, setImageSource] = useState('ai'); // ai | upload | drive\n  const [uploadedImageUrl, setUploadedImageUrl] = useState('');\n  const [uploadingImage, setUploadingImage] = useState(false);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [autoGenerateCaption, setAutoGenerateCaption] = useState(false);\n  const [captionPrompt, setCaptionPrompt] = useState('');\n  const [generatingCaption, setGeneratingCaption] = useState(false);\n  const [rateLimitCooldown, setRateLimitCooldown] = useState(0);\n\n  // Strategy Template State\n  const [strategyData, setStrategyData] = useState({\n    promptTemplate: '',\n    brandName: '',\n    hookIdea: '',\n    features: '',\n    location: '',\n    phone: '',\n    website: '',\n    callToAction: '',\n    imagePrompt: '',\n    customStrategyTemplate: ''\n  });\n  const [showStrategyModal, setShowStrategyModal] = useState(false);\n  const [strategyTemplates, setStrategyTemplates] = useState([{\n    id: 'default',\n    name: 'Default Template',\n    prompt: 'Generate a catchy Instagram caption for this post.'\n  }, {\n    id: 'product',\n    name: 'Product Showcase',\n    prompt: 'Create an engaging caption highlighting the key features and benefits of this product.'\n  }, {\n    id: 'event',\n    name: 'Event Promotion',\n    prompt: 'Write an exciting caption to promote this event, including date, time, and location.'\n  }, {\n    id: 'custom',\n    name: 'Custom Template',\n    prompt: ''\n  }]);\n\n  // Carousel State\n  const [carouselImages, setCarouselImages] = useState([]); // URLs\n  const [carouselFiles, setCarouselFiles] = useState([]); // File objects\n  const [carouselCount, setCarouselCount] = useState(3);\n  const [carouselCaption, setCarouselCaption] = useState('');\n  const [carouselGenerating, setCarouselGenerating] = useState(false);\n  const [draggedIndex, setDraggedIndex] = useState(null);\n\n  // Reel State\n  const [reelFile, setReelFile] = useState(null);\n  const [reelUrl, setReelUrl] = useState('');\n  const [reelFilename, setReelFilename] = useState('');\n  const [reelCaption, setReelCaption] = useState('');\n  const [reelUploading, setReelUploading] = useState(false);\n  const [reelAutoGenerateCaption, setReelAutoGenerateCaption] = useState(false);\n  const [reelCaptionPrompt, setReelCaptionPrompt] = useState('');\n  const [generatingReelCaption, setGeneratingReelCaption] = useState(false);\n  // Thumbnail State for Reel\n  const [reelThumbnailFile, setReelThumbnailFile] = useState(null);\n  const [reelThumbnailUrl, setReelThumbnailUrl] = useState('');\n  const [reelThumbnailFilename, setReelThumbnailFilename] = useState('');\n\n  // Media Gallery\n  const [userMedia, setUserMedia] = useState([]);\n  const [loadingMedia, setLoadingMedia] = useState(false);\n\n  // Google Drive Integration\n  const [showDriveModal, setShowDriveModal] = useState(false);\n  const [driveFiles, setDriveFiles] = useState([]);\n  const [loadingDriveFiles, setLoadingDriveFiles] = useState(false);\n  const [driveAuthenticated, setDriveAuthenticated] = useState(false);\n  const [driveAuthLoading, setDriveAuthLoading] = useState(false);\n\n  // Auto-Reply State\n  const [autoReplyEnabled, setAutoReplyEnabled] = useState(false);\n  const [autoReplyTemplate, setAutoReplyTemplate] = useState('Thank you for your comment! We appreciate your engagement. 😊');\n  const [autoReplyPosts, setAutoReplyPosts] = useState([]);\n  const [selectedAutoReplyPosts, setSelectedAutoReplyPosts] = useState([]);\n  const [autoReplyLoading, setAutoReplyLoading] = useState(false);\n  const [loadingAutoReplyPosts, setLoadingAutoReplyPosts] = useState(false);\n  const [isSelectingPosts, setIsSelectingPosts] = useState(false);\n\n  // DM Auto-Reply State\n  const [dmAutoReplyEnabled, setDmAutoReplyEnabled] = useState(false);\n  const [dmAutoReplyTemplate, setDmAutoReplyTemplate] = useState('Thanks for your message! I\\'ll get back to you soon. 😊');\n  const [dmAutoReplyLoading, setDmAutoReplyLoading] = useState(false);\n\n  // File Picker Modal State\n  const [showFilePicker, setShowFilePicker] = useState(false);\n  const [filePickerType, setFilePickerType] = useState(''); // 'photo' or 'video'\n  const [filePickerFormType, setFilePickerFormType] = useState(''); // 'manual' or 'carousel'\n  const [isLoadingGoogleDrive, setIsLoadingGoogleDrive] = useState(false);\n  const [googleDriveAvailable, setGoogleDriveAvailable] = useState(false);\n\n  // Bulk Composer State\n  const [showBulkComposer, setShowBulkComposer] = useState(false);\n\n  // Facebook SDK\n  const INSTAGRAM_APP_ID = process.env.REACT_APP_INSTAGRAM_APP_ID || '24054495060908418';\n\n  // Mobile detection utility\n  const isMobile = () => window.innerWidth <= 768;\n\n  // --- New: Global Auto-Reply State ---\n  const [globalAutoReplyEnabled, setGlobalAutoReplyEnabled] = useState(false);\n  const [globalAutoReplyLoading, setGlobalAutoReplyLoading] = useState(false);\n  const [globalAutoReplyStatus, setGlobalAutoReplyStatus] = useState(''); // For toast/feedback\n\n  // --- New: Global Auto-Reply Progress State ---\n  const [globalAutoReplyProgress, setGlobalAutoReplyProgress] = useState(null);\n\n  // --- New: Global Auto-Reply Error and Retry State ---\n  const [apiError, setApiError] = useState(null);\n  const [retrying, setRetrying] = useState(false);\n\n  // --- New: Toast Notification ---\n  const [toast, setToast] = useState({\n    show: false,\n    message: '',\n    type: 'info'\n  });\n  const showToast = (message, type = 'info') => {\n    setToast({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => setToast({\n      show: false,\n      message: '',\n      type: 'info'\n    }), 3500);\n  };\n\n  // --- New: Global Auto-Reply API Logic ---\n  const handleGlobalAutoReplyToggle = async () => {\n    if (!selectedAccount) {\n      showToast('Please select an Instagram account first.', 'error');\n      return;\n    }\n    setGlobalAutoReplyLoading(true);\n    setApiError(null);\n    try {\n      if (!globalAutoReplyEnabled) {\n        const enableRes = await apiClient.enableGlobalInstagramAutoReply(selectedAccount.platform_user_id);\n        if (enableRes.success) {\n          setGlobalAutoReplyEnabled(true);\n          // eslint-disable-next-line no-undef\n          setGlobalAutoReplyStatus('enabled');\n          showToast('Auto-reply enabled for all posts and comments!', 'success');\n        } else {\n          setApiError(enableRes.error || 'Failed to enable auto-reply.');\n          showToast('Failed to enable auto-reply: ' + (enableRes.error || 'Unknown error'), 'error');\n        }\n      } else {\n        const disableRes = await apiClient.disableGlobalInstagramAutoReply(selectedAccount.platform_user_id);\n        if (disableRes.success) {\n          setGlobalAutoReplyEnabled(false);\n          // eslint-disable-next-line no-undef\n          setGlobalAutoReplyStatus('disabled');\n          showToast('Auto-reply disabled.', 'info');\n        } else {\n          setApiError(disableRes.error || 'Failed to disable auto-reply.');\n          showToast('Failed to disable auto-reply: ' + (disableRes.error || 'Unknown error'), 'error');\n        }\n      }\n    } catch (err) {\n      setApiError(err.message || JSON.stringify(err));\n      showToast('Error: ' + (err.message || err.toString()), 'error');\n    } finally {\n      setGlobalAutoReplyLoading(false);\n    }\n  };\n\n  // --- New: Fetch initial global auto-reply status on account select ---\n  useEffect(() => {\n    const fetchGlobalAutoReplyStatus = async () => {\n      if (!selectedAccount) return;\n      try {\n        const statusRes = await apiClient.getGlobalInstagramAutoReplyStatus(selectedAccount.platform_user_id);\n        setGlobalAutoReplyEnabled(!!statusRes.enabled);\n        // eslint-disable-next-line no-undef\n        setGlobalAutoReplyStatus(statusRes.enabled ? 'enabled' : 'disabled');\n      } catch (err) {\n        setGlobalAutoReplyEnabled(false);\n        // eslint-disable-next-line no-undef\n        setGlobalAutoReplyStatus('disabled');\n      }\n    };\n    fetchGlobalAutoReplyStatus();\n  }, [selectedAccount]);\n\n  // --- New: Poll for global auto-reply progress when enabled ---\n  useEffect(() => {\n    let intervalId;\n    const pollProgress = async () => {\n      if (!selectedAccount || !globalAutoReplyEnabled) return;\n      try {\n        const res = await apiClient.getGlobalInstagramAutoReplyProgress(selectedAccount.platform_user_id);\n        if (res.success) {\n          setGlobalAutoReplyProgress(res.progress);\n          setApiError(null);\n        }\n      } catch (err) {\n        setApiError(err.message || JSON.stringify(err));\n        // Optionally, showToast('Progress error: ' + (err.message || err.toString()), 'error');\n      }\n    };\n    if (globalAutoReplyEnabled && selectedAccount) {\n      pollProgress();\n      intervalId = setInterval(pollProgress, 3000);\n    } else {\n      setGlobalAutoReplyProgress(null);\n    }\n    return () => intervalId && clearInterval(intervalId);\n  }, [globalAutoReplyEnabled, selectedAccount]);\n\n  // --- Facebook SDK Helpers ---\n  const checkLoginStatus = () => {\n    if (!window.FB || !isAuthenticated) return;\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        setFbAccessToken(response.authResponse.accessToken);\n        setMessage('Instagram: Using existing Facebook login session');\n        handleConnectInstagram(response.authResponse.accessToken);\n      } else {\n        setMessage('Instagram: Please connect your Facebook account to continue');\n      }\n    });\n  };\n  const initializeFacebookSDK = () => {\n    if (window.FB) {\n      window.FB.init({\n        appId: INSTAGRAM_APP_ID,\n        cookie: true,\n        xfbml: true,\n        version: 'v18.0'\n      });\n      setSdkLoaded(true);\n      checkLoginStatus();\n      return;\n    }\n    window.fbAsyncInit = function () {\n      window.FB.init({\n        appId: INSTAGRAM_APP_ID,\n        cookie: true,\n        xfbml: true,\n        version: 'v18.0'\n      });\n      setSdkLoaded(true);\n      checkLoginStatus();\n    };\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n  };\n  useEffect(() => {\n    if (isAuthenticated && !authLoading) {\n      loadFacebookSDK(process.env.REACT_APP_FACEBOOK_APP_ID || '697225659875731').then(() => {\n        checkLoginStatus();\n        checkGoogleDriveAvailability();\n      });\n    }\n  }, [isAuthenticated, authLoading]);\n  useEffect(() => {\n    checkLoginStatus();\n    initializeFacebookSDK();\n    // eslint-disable-next-line\n  }, [INSTAGRAM_APP_ID, isAuthenticated]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      setInstagramAccounts([]); // Clear previous state\n      setSelectedAccount('');\n      setIsConnected(false);\n      setActiveTab('connect');\n      setMessage('');\n\n      // Ensure token is set before making request\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        apiClient.setToken(token);\n        console.log('🔍 DEBUG: Token set for Instagram accounts request');\n      } else {\n        console.error('🔍 DEBUG: No auth token found in localStorage');\n        setMessage('Authentication token not found. Please log in again.');\n        return;\n      }\n\n      // Fetch new user's Instagram accounts\n      apiClient.getInstagramAccounts().then(accounts => {\n        console.log('🔍 DEBUG: Successfully fetched Instagram accounts:', accounts);\n        setInstagramAccounts(accounts);\n      }).catch(error => {\n        console.error('🔍 DEBUG: Error fetching Instagram accounts:', error);\n        if (error.message.includes('Could not validate credentials')) {\n          setMessage('Your session has expired. Please log in again.');\n        } else if (error.message.includes('Failed to fetch')) {\n          setMessage('Unable to connect to server. Please check if the backend is running and try again.');\n        } else {\n          setMessage(`Error loading Instagram accounts: ${error.message}`);\n        }\n      });\n    }\n  }, [isAuthenticated]);\n\n  // --- Instagram Connect ---\n  const handleConnectInstagram = async (accessToken = fbAccessToken) => {\n    if (!isAuthenticated) {\n      setMessage('Please log in to your account first before connecting Instagram.');\n      setLoading(false);\n      return;\n    }\n    if (!accessToken) {\n      setMessage('No access token available. Please log in with Facebook first.');\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      setMessage('Fetching Instagram Business accounts...');\n      const response = await apiClient.connectInstagram(accessToken);\n\n      // Fetch the full list of social accounts from the backend\n      const allAccounts = await apiClient.getSocialAccounts();\n      // Filter for Instagram accounts\n      const instagramAccountsFromBackend = allAccounts.filter(acc => acc.platform === 'instagram');\n\n      // Map and merge info for display\n      const mappedAccounts = instagramAccountsFromBackend.map(account => ({\n        id: account.id,\n        // Internal DB ID\n        platform_user_id: account.platform_user_id,\n        // Instagram user ID\n        username: account.username,\n        name: account.display_name || account.page_name,\n        followers_count: account.follower_count || 0,\n        media_count: account.media_count || 0,\n        profile_picture_url: account.profile_picture_url\n      }));\n      setInstagramAccounts(mappedAccounts);\n      setIsConnected(true);\n      setMessage(`Found ${mappedAccounts.length} Instagram Business account(s)!`);\n      if (mappedAccounts.length === 1) {\n        setSelectedAccount(mappedAccounts[0]);\n        loadUserMedia(mappedAccounts[0].platform_user_id);\n      }\n    } catch (error) {\n      setMessage(error.message || 'Unknown error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFacebookLogin = () => {\n    if (!window.FB) {\n      setMessage('Facebook SDK not loaded');\n      return;\n    }\n    setLoading(true);\n    setMessage('Initiating Instagram OAuth via Facebook...');\n    window.FB.login(response => {\n      if (response.status === 'connected') {\n        const accessToken = response.authResponse.accessToken;\n        setFbAccessToken(accessToken);\n        setMessage('Facebook login successful! Connecting Instagram accounts...');\n        handleConnectInstagram(accessToken);\n      } else {\n        setMessage('Facebook login failed or was cancelled');\n        setLoading(false);\n      }\n    }, {\n      scope: 'pages_show_list,instagram_basic,instagram_content_publish,pages_read_engagement, business_management'\n    });\n  };\n\n  // --- Media Loading ---\n  const loadUserMedia = async instagramUserId => {\n    setLoadingMedia(true);\n    try {\n      var _media$data;\n      const media = await apiClient.getInstagramMedia(instagramUserId);\n      setUserMedia((media === null || media === void 0 ? void 0 : (_media$data = media.data) === null || _media$data === void 0 ? void 0 : _media$data.media) || []);\n    } catch (error) {\n      setMessage(`Error loading media: ${error.message}`);\n    } finally {\n      setLoadingMedia(false);\n    }\n  };\n\n  // --- Image Upload ---\n  const handleImageChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n      setMessage('Please select a PNG or JPG image');\n      return;\n    }\n\n    // Debug authentication status\n    console.log('🔍 DEBUG: Authentication check before upload');\n    console.log('🔍 DEBUG: isAuthenticated:', isAuthenticated);\n    console.log('🔍 DEBUG: user:', user);\n    console.log('🔍 DEBUG: apiClient token exists:', !!apiClient.token);\n    setUploadingImage(true);\n    setMessage('Uploading image...');\n    try {\n      const res = await apiClient.uploadImageToCloudinary(file);\n      if (res && res.success && res.data && res.data.url) {\n        setUploadedImageUrl(res.data.url);\n        setAiImageUrl(res.data.url);\n        setSelectedImageFile(file);\n        setMessage('Image uploaded successfully!');\n      } else {\n        throw new Error((res === null || res === void 0 ? void 0 : res.error) || 'Upload failed');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Upload error details:', err);\n      setMessage(`Image upload failed: ${err.message}`);\n    } finally {\n      setUploadingImage(false);\n    }\n  };\n\n  // --- AI Image Generation ---\n  const handleGenerateAIImage = async () => {\n    if (!aiPrompt.trim()) {\n      setMessage('Please enter a prompt for image generation.');\n      return;\n    }\n    setAiGenerating(true);\n    setMessage('Generating Instagram-optimized image with AI...');\n    try {\n      console.log('🔍 DEBUG: Generating Instagram image with prompt:', aiPrompt.trim());\n      const res = await apiClient.generateInstagramImage(aiPrompt.trim());\n      console.log('🔍 DEBUG: Image generation response:', res);\n      if (res && res.success && res.data && res.data.image_url) {\n        setAiImageUrl(res.data.image_url);\n        const dimensions = res.data.width && res.data.height ? `(${res.data.width}x${res.data.height})` : '';\n        setMessage(`AI image generated successfully! ${dimensions}`);\n        console.log('🔍 DEBUG: Generated image URL:', res.data.image_url);\n        console.log('🔍 DEBUG: Image dimensions:', res.data.width, 'x', res.data.height);\n        console.log('🔍 DEBUG: Enhanced prompt:', res.data.enhanced_prompt);\n      } else if (res && res.data && res.data.image_url) {\n        // Fallback for different response format\n        setAiImageUrl(res.data.image_url);\n        setMessage('AI image generated successfully!');\n        console.log('🔍 DEBUG: Generated image URL (fallback):', res.data.image_url);\n      } else {\n        console.error('🔍 DEBUG: Invalid response format:', res);\n        setMessage('Failed to generate image. Please try again.');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Image generation error:', err);\n\n      // Handle specific error types\n      let errorMessage = err.message || err.toString();\n      if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Invalid or expired Stability AI API key. Please check your API key in the backend configuration.';\n      } else if (errorMessage.includes('429') || errorMessage.includes('Too Many Requests')) {\n        errorMessage = 'Rate limit exceeded. Please wait a few minutes before trying again, or upgrade your Stability AI plan.';\n        // Set a 5-minute cooldown\n        setRateLimitCooldown(300);\n        const cooldownInterval = setInterval(() => {\n          setRateLimitCooldown(prev => {\n            if (prev <= 1) {\n              clearInterval(cooldownInterval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } else if (errorMessage.includes('500') || errorMessage.includes('Internal Server Error')) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (errorMessage.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      }\n      setMessage('Error generating image: ' + errorMessage);\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  // --- Auto Generate Caption ---\n  const handleAutoGenerateCaption = async () => {\n    if (!captionPrompt.trim()) {\n      setMessage('Please enter a prompt for caption generation.');\n      return;\n    }\n    setGeneratingCaption(true);\n    setMessage('Generating caption with AI...');\n    try {\n      console.log('🔍 DEBUG: Generating Instagram caption with prompt:', captionPrompt.trim());\n      const res = await apiClient.generateInstagramCaption(captionPrompt.trim());\n      console.log('🔍 DEBUG: Caption generation response:', res);\n      if (res && res.success && res.data && res.data.content) {\n        setCaption(res.data.content);\n        setMessage('Caption generated successfully!');\n        console.log('🔍 DEBUG: Generated caption:', res.data.content);\n      } else if (res && res.content) {\n        // Fallback for different response format\n        setCaption(res.content);\n        setMessage('Caption generated successfully!');\n        console.log('🔍 DEBUG: Generated caption (fallback):', res.content);\n      } else {\n        console.error('🔍 DEBUG: Invalid response format:', res);\n        setMessage('Failed to generate caption. Please try again.');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Caption generation error:', err);\n      setMessage('Error generating caption: ' + (err.message || err.toString()));\n    } finally {\n      setGeneratingCaption(false);\n    }\n  };\n\n  // --- Generate Image and Caption Together ---\n  const handleGenerateImageAndCaption = async () => {\n    if (!aiPrompt.trim()) {\n      setMessage('Please enter a prompt for generation.');\n      return;\n    }\n    setAiGenerating(true);\n    setGeneratingCaption(true);\n    setMessage('Generating Instagram-optimized image and caption with AI...');\n    try {\n      console.log('🔍 DEBUG: Generating image and caption with prompt:', aiPrompt.trim());\n\n      // Generate image first\n      const imageRes = await apiClient.generateInstagramImage(aiPrompt.trim());\n      console.log('🔍 DEBUG: Image generation response:', imageRes);\n      if (!imageRes || !imageRes.success || !imageRes.data || !imageRes.data.image_url) {\n        throw new Error('Failed to generate image');\n      }\n      setAiImageUrl(imageRes.data.image_url);\n      console.log('🔍 DEBUG: Generated image URL:', imageRes.data.image_url);\n      console.log('🔍 DEBUG: Image dimensions:', imageRes.data.width, 'x', imageRes.data.height);\n\n      // Generate caption using the same prompt\n      const captionRes = await apiClient.generateInstagramCaption(aiPrompt.trim());\n      console.log('🔍 DEBUG: Caption generation response:', captionRes);\n      if (captionRes && captionRes.success && captionRes.data && captionRes.data.content) {\n        setCaption(captionRes.data.content);\n        console.log('🔍 DEBUG: Generated caption:', captionRes.data.content);\n      } else if (captionRes && captionRes.content) {\n        // Fallback for different response format\n        setCaption(captionRes.content);\n        console.log('🔍 DEBUG: Generated caption (fallback):', captionRes.content);\n      } else {\n        console.warn('🔍 DEBUG: Caption generation failed, using fallback');\n        setCaption(`Check out this amazing image! ${aiPrompt.trim()}`);\n      }\n      const dimensions = imageRes.data.width && imageRes.data.height ? `(${imageRes.data.width}x${imageRes.data.height})` : '';\n      setMessage(`Image and caption generated successfully! ${dimensions}`);\n    } catch (err) {\n      console.error('🔍 DEBUG: Image and caption generation error:', err);\n\n      // Handle specific error types\n      let errorMessage = err.message || err.toString();\n      if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Invalid or expired Stability AI API key. Please check your API key in the backend configuration.';\n      } else if (errorMessage.includes('429') || errorMessage.includes('Too Many Requests')) {\n        errorMessage = 'Rate limit exceeded. Please wait a few minutes before trying again, or upgrade your Stability AI plan.';\n        // Set a 5-minute cooldown\n        setRateLimitCooldown(300);\n        const cooldownInterval = setInterval(() => {\n          setRateLimitCooldown(prev => {\n            if (prev <= 1) {\n              clearInterval(cooldownInterval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } else if (errorMessage.includes('500') || errorMessage.includes('Internal Server Error')) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (errorMessage.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      }\n      setMessage('Error generating image and caption: ' + errorMessage);\n\n      // Clear any partial results on error\n      setAiImageUrl('');\n      setCaption('');\n    } finally {\n      setAiGenerating(false);\n      setGeneratingCaption(false);\n    }\n  };\n\n  // --- Retry Image Generation ---\n  const handleRetryImageGeneration = async () => {\n    if (!aiPrompt.trim()) {\n      setMessage('Please enter a prompt for image generation.');\n      return;\n    }\n    setAiGenerating(true);\n    setMessage('Retrying image generation...');\n    try {\n      console.log('🔍 DEBUG: Retrying image generation with prompt:', aiPrompt.trim());\n      const res = await apiClient.generateInstagramImage(aiPrompt.trim());\n      console.log('🔍 DEBUG: Retry image generation response:', res);\n      if (res && res.success && res.data && res.data.image_url) {\n        setAiImageUrl(res.data.image_url);\n        setMessage('Image generated successfully on retry!');\n        console.log('🔍 DEBUG: Generated image URL (retry):', res.data.image_url);\n      } else if (res && res.data && res.data.image_url) {\n        // Fallback for different response format\n        setAiImageUrl(res.data.image_url);\n        setMessage('Image generated successfully on retry!');\n        console.log('🔍 DEBUG: Generated image URL (retry fallback):', res.data.image_url);\n      } else {\n        console.error('🔍 DEBUG: Invalid response format on retry:', res);\n        setMessage('Failed to generate image on retry. Please try again.');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Retry image generation error:', err);\n\n      // Handle specific error types\n      let errorMessage = err.message || err.toString();\n      if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Invalid or expired Stability AI API key. Please check your API key in the backend configuration.';\n      } else if (errorMessage.includes('429') || errorMessage.includes('Too Many Requests')) {\n        errorMessage = 'Rate limit exceeded. Please wait a few minutes before trying again, or upgrade your Stability AI plan.';\n        // Set a 5-minute cooldown\n        setRateLimitCooldown(300);\n        const cooldownInterval = setInterval(() => {\n          setRateLimitCooldown(prev => {\n            if (prev <= 1) {\n              clearInterval(cooldownInterval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } else if (errorMessage.includes('500') || errorMessage.includes('Internal Server Error')) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (errorMessage.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      }\n      setMessage('Error retrying image generation: ' + errorMessage);\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  // --- Carousel Upload ---\n  const handleCarouselFilesChange = async e => {\n    const files = Array.from(e.target.files);\n    if (files.length < 3 || files.length > 7) {\n      setMessage('Please select 3 to 7 images.');\n      return;\n    }\n    setCarouselGenerating(true);\n    setMessage('Uploading carousel images...');\n    try {\n      const urls = [];\n      for (const file of files) {\n        if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n          setMessage('All images must be PNG or JPG.');\n          setCarouselGenerating(false);\n          return;\n        }\n        const res = await apiClient.uploadImageToCloudinary(file);\n        if (res && res.success && res.data && res.data.url) {\n          urls.push(res.data.url);\n        } else {\n          throw new Error((res === null || res === void 0 ? void 0 : res.error) || 'Upload failed');\n        }\n      }\n      setCarouselImages(urls);\n      setMessage(`Uploaded ${urls.length} images for carousel.`);\n    } catch (err) {\n      setMessage('Error uploading carousel images: ' + err.message);\n    } finally {\n      setCarouselGenerating(false);\n    }\n  };\n\n  // --- Carousel Drag and Drop Handlers ---\n  const handleDragStart = (e, index) => {\n    setDraggedIndex(index);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, dropIndex) => {\n    e.preventDefault();\n    if (draggedIndex === null || draggedIndex === dropIndex) {\n      setDraggedIndex(null);\n      return;\n    }\n    const newImages = [...carouselImages];\n    const draggedImage = newImages[draggedIndex];\n\n    // Remove the dragged item\n    newImages.splice(draggedIndex, 1);\n\n    // Insert at new position\n    newImages.splice(dropIndex, 0, draggedImage);\n    setCarouselImages(newImages);\n    setDraggedIndex(null);\n  };\n  const handleDragEnd = () => {\n    setDraggedIndex(null);\n  };\n\n  // --- Carousel Auto Generate Caption ---\n  const handleCarouselAutoGenerateCaption = async () => {\n    if (!captionPrompt.trim()) {\n      setMessage('Please provide a prompt for caption generation.');\n      return;\n    }\n    setGeneratingCaption(true);\n    setMessage('Generating carousel caption...');\n    try {\n      const result = await apiClient.generateInstagramCaption(captionPrompt.trim());\n      if (result.success && result.content) {\n        setCarouselCaption(result.content);\n        setMessage('Caption generated successfully!');\n      } else {\n        setMessage('Failed to generate caption: ' + (result.error || 'Unknown error'));\n      }\n    } catch (err) {\n      setMessage('Error generating caption: ' + err.message);\n    } finally {\n      setGeneratingCaption(false);\n    }\n  };\n\n  // --- Reel Upload ---\n  const handleReelFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!ACCEPTED_VIDEO_TYPES.includes(file.type)) {\n      setMessage('Only .mp4 or .mov files are allowed.');\n      return;\n    }\n    setReelUploading(true);\n    setMessage('Uploading video...');\n    try {\n      var _res$data;\n      const res = await apiClient.uploadVideoToCloudinary(file);\n      console.log('Video upload response:', res);\n\n      // Check for different response structures\n      if (res && res.success && (res.url || (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.url)) {\n        var _res$data2, _res$data3;\n        const videoUrl = res.url || ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.url);\n        const filename = res.filename || ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.filename);\n        setReelUrl(videoUrl);\n        setReelFilename(filename || '');\n        // eslint-disable-next-line no-undef\n        setReelFile(file);\n        console.log('🔍 DEBUG: Video uploaded successfully:', {\n          videoUrl,\n          filename,\n          res\n        });\n        setMessage('Video uploaded successfully!');\n      } else if (res && res.data && res.data.url) {\n        // Alternative response structure\n        setReelUrl(res.data.url);\n        setReelFilename(res.data.filename || '');\n        // eslint-disable-next-line no-undef\n        setReelFile(file);\n        setMessage('Video uploaded successfully!');\n      } else {\n        throw new Error((res === null || res === void 0 ? void 0 : res.error) || (res === null || res === void 0 ? void 0 : res.message) || 'Upload failed');\n      }\n    } catch (err) {\n      console.error('Video upload error:', err);\n      setMessage('Error: ' + (err.message || err.toString()));\n    } finally {\n      setReelUploading(false);\n    }\n  };\n\n  // --- Reel Auto Generate Caption ---\n  const handleReelAutoGenerateCaption = async () => {\n    if (!reelCaptionPrompt.trim()) {\n      setMessage('Please provide a prompt for caption generation.');\n      return;\n    }\n    setGeneratingReelCaption(true);\n    setMessage('Generating reel caption...');\n    try {\n      const result = await apiClient.generateInstagramCaption(reelCaptionPrompt.trim());\n      if (result.success && result.content) {\n        setReelCaption(result.content);\n        setMessage('Reel caption generated successfully!');\n      } else {\n        setMessage('Failed to generate caption: ' + (result.error || 'Unknown error'));\n      }\n    } catch (err) {\n      setMessage('Error generating caption: ' + err.message);\n    } finally {\n      setGeneratingReelCaption(false);\n    }\n  };\n\n  // --- Reel Thumbnail Upload ---\n  const handleReelThumbnailChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n      setMessage('Only .jpg, .jpeg, .png files are allowed for thumbnail.');\n      return;\n    }\n    setMessage('Uploading thumbnail image...');\n    try {\n      var _res$data4;\n      const res = await apiClient.uploadThumbnailToCloudinary(file);\n      if (res && res.success && (res.url || (_res$data4 = res.data) !== null && _res$data4 !== void 0 && _res$data4.url)) {\n        var _res$data5, _res$data6;\n        const imageUrl = res.url || ((_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : _res$data5.url);\n        const filename = res.filename || ((_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.filename);\n        setReelThumbnailUrl(imageUrl);\n        setReelThumbnailFilename(filename || '');\n        // eslint-disable-next-line no-undef\n        setReelThumbnailFile(file);\n        console.log('🔍 DEBUG: Thumbnail uploaded successfully:', {\n          imageUrl,\n          filename,\n          res\n        });\n        setMessage('Thumbnail uploaded successfully!');\n      } else {\n        throw new Error((res === null || res === void 0 ? void 0 : res.error) || (res === null || res === void 0 ? void 0 : res.message) || 'Thumbnail upload failed');\n      }\n    } catch (err) {\n      setMessage('Error: ' + (err.message || err.toString()));\n    }\n  };\n\n  // --- Google Drive Integration ---\n  const checkGoogleDriveAuth = async () => {\n    try {\n      const response = await apiClient.getGoogleDriveStatus();\n      setDriveAuthenticated(response.authenticated);\n      return response.authenticated;\n    } catch (error) {\n      console.error('Error checking Google Drive auth:', error);\n      setDriveAuthenticated(false);\n      return false;\n    }\n  };\n  const authenticateGoogleDrive = async () => {\n    setDriveAuthLoading(true);\n    try {\n      const response = await apiClient.getGoogleDriveAuthorizeUrl();\n      if (response.consent_url) {\n        // Open popup for OAuth\n        const popup = window.open(response.consent_url, 'google-drive-auth', 'width=500,height=600,scrollbars=yes,resizable=yes');\n\n        // Listen for OAuth completion\n        const handleMessage = event => {\n          if (event.data.success) {\n            setDriveAuthenticated(true);\n            setMessage('Google Drive connected successfully!');\n            loadDriveFiles();\n          } else if (event.data.error) {\n            setMessage(`Google Drive authentication failed: ${event.data.error}`);\n          }\n          window.removeEventListener('message', handleMessage);\n          if (popup) popup.close();\n        };\n        window.addEventListener('message', handleMessage);\n      } else if (response.already_authenticated) {\n        setDriveAuthenticated(true);\n        setMessage('Google Drive already authenticated!');\n        loadDriveFiles();\n      }\n    } catch (error) {\n      setMessage(`Google Drive authentication error: ${error.message}`);\n    } finally {\n      setDriveAuthLoading(false);\n    }\n  };\n  const loadDriveFiles = async () => {\n    if (!driveAuthenticated) return;\n    setLoadingDriveFiles(true);\n    try {\n      const response = await apiClient.getGoogleDriveFiles('image/');\n      if (response.success && response.files) {\n        setDriveFiles(response.files);\n      } else {\n        setMessage('Failed to load Google Drive files');\n      }\n    } catch (error) {\n      setMessage(`Error loading Google Drive files: ${error.message}`);\n    } finally {\n      setLoadingDriveFiles(false);\n    }\n  };\n  const handleDriveFileSelect = async (fileId, fileName) => {\n    setUploadingImage(true);\n    setMessage('Downloading file from Google Drive...');\n    try {\n      const response = await apiClient.downloadGoogleDriveFile(fileId);\n      if (response.success && response.fileContent) {\n        // Convert base64 to blob and upload to Cloudinary\n        const byteCharacters = atob(response.fileContent);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        const blob = new Blob([byteArray], {\n          type: response.mimeType\n        });\n\n        // Create a File object from the blob\n        const file = new File([blob], fileName, {\n          type: response.mimeType\n        });\n\n        // Upload to Cloudinary\n        const uploadResponse = await apiClient.uploadImageToCloudinary(file);\n        if (uploadResponse.success && uploadResponse.data && uploadResponse.data.url) {\n          setUploadedImageUrl(uploadResponse.data.url);\n          setAiImageUrl(uploadResponse.data.url);\n          setMessage('File uploaded from Google Drive successfully!');\n          setShowDriveModal(false);\n        } else {\n          throw new Error(uploadResponse.error || 'Upload failed');\n        }\n      } else {\n        throw new Error(response.error || 'Download failed');\n      }\n    } catch (error) {\n      setMessage(`Error processing Google Drive file: ${error.message}`);\n    } finally {\n      setUploadingImage(false);\n    }\n  };\n  const openDriveModal = async () => {\n    const isAuth = await checkGoogleDriveAuth();\n    if (!isAuth) {\n      await authenticateGoogleDrive();\n    } else {\n      await loadDriveFiles();\n    }\n    setShowDriveModal(true);\n  };\n\n  // File Picker Functions\n  const openFilePicker = (type, formType) => {\n    setFilePickerType(type);\n    setFilePickerFormType(formType);\n    setShowFilePicker(true);\n  };\n  const closeFilePicker = () => {\n    setShowFilePicker(false);\n    setFilePickerType('');\n    setFilePickerFormType('');\n    setIsLoadingGoogleDrive(false);\n  };\n  const handleLocalFileSelect = event => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    if (filePickerFormType === 'carousel') {\n      // Handle carousel upload\n      handleCarouselFilesChange({\n        target: {\n          files\n        }\n      });\n    } else {\n      // Handle single file upload\n      const file = files[0];\n      if (filePickerType === 'photo') {\n        handleImageChange({\n          target: {\n            files: [file]\n          }\n        });\n      } else if (filePickerType === 'video') {\n        handleReelFileChange({\n          target: {\n            files: [file]\n          }\n        });\n      }\n    }\n    closeFilePicker();\n  };\n  const handleGoogleDriveSelect = async () => {\n    setIsLoadingGoogleDrive(true);\n    try {\n      // Check if already authenticated\n      const status = await apiClient.getGoogleDriveStatus();\n      if (!status.authenticated) {\n        // Get consent URL for popup\n        const authResponse = await apiClient.getGoogleDriveAuthorizeUrl();\n        if (authResponse.consent_url) {\n          // Open popup and wait for completion\n          await openDriveAuthPopup(authResponse.consent_url);\n        }\n      }\n\n      // After popup closes, re-check authentication status\n      const finalStatus = await apiClient.getGoogleDriveStatus();\n      if (!finalStatus.authenticated) {\n        throw new Error('Authentication was not completed successfully');\n      }\n\n      // Update state and proceed with Google Drive picker\n      setGoogleDriveAvailable(true);\n\n      // Initialize Google Drive API\n      await loadGoogleDriveAPI();\n\n      // Check if google object is available\n      if (typeof window.google === 'undefined' || !window.google.picker) {\n        throw new Error('Google Picker API failed to load');\n      }\n\n      // Get fresh token for picker\n      const authResult = await apiClient.getGoogleDriveAuth();\n\n      // Open Google Drive picker\n      const picker = new window.google.picker.PickerBuilder().addView(new window.google.picker.DocsView().setIncludeFolders(true).setSelectFolderEnabled(false).setMimeTypes(filePickerType === 'photo' ? 'image/*' : 'video/*')).setOAuthToken(authResult.access_token).setDeveloperKey(process.env.REACT_APP_GOOGLE_DEVELOPER_KEY || '').setCallback(handleGoogleDriveCallback).enableFeature(window.google.picker.Feature.NAV_HIDDEN).enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED, filePickerFormType === 'carousel').setTitle(filePickerFormType === 'carousel' ? 'Select multiple files from Google Drive' : 'Select a file from Google Drive').setSelectableMimeTypes(filePickerType === 'photo' ? 'image/*' : 'video/*').build();\n      picker.setVisible(true);\n    } catch (error) {\n      console.error('Error with Google Drive selection:', error);\n      setMessage(`Google Drive error: ${error.message}`);\n    } finally {\n      setIsLoadingGoogleDrive(false);\n    }\n  };\n  const loadGoogleDriveAPI = () => {\n    return new Promise((resolve, reject) => {\n      if (window.google && window.google.picker) {\n        resolve();\n        return;\n      }\n      const script = document.createElement('script');\n      script.src = 'https://apis.google.com/js/api.js';\n      script.onload = () => {\n        if (window.gapi) {\n          window.gapi.load('picker', () => {\n            resolve();\n          });\n        } else {\n          reject(new Error('Google API failed to load'));\n        }\n      };\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  };\n  const openDriveAuthPopup = authUrl => {\n    return new Promise((resolve, reject) => {\n      const popup = window.open(authUrl, 'google-drive-auth', 'width=500,height=600,scrollbars=yes,resizable=yes');\n      const messageHandler = event => {\n        if (event.data.success) {\n          setGoogleDriveAvailable(true);\n          setMessage('Google Drive connected successfully!');\n          resolve();\n        } else if (event.data.error) {\n          setMessage(`Google Drive authentication failed: ${event.data.error}`);\n          reject(new Error(event.data.error));\n        }\n        window.removeEventListener('message', messageHandler);\n        if (popup) popup.close();\n      };\n      window.addEventListener('message', messageHandler);\n\n      // Timeout after 5 minutes\n      setTimeout(() => {\n        window.removeEventListener('message', messageHandler);\n        if (popup) popup.close();\n        reject(new Error('Authentication timeout'));\n      }, 300000);\n    });\n  };\n  const handleGoogleDriveCallback = async data => {\n    if (data.action === window.google.picker.Action.PICKED) {\n      const files = data.docs;\n      try {\n        if (filePickerFormType === 'carousel') {\n          // Handle multiple files for carousel\n          const fileObjects = [];\n          for (const file of files) {\n            const fileContent = await downloadGoogleDriveFile(file.id);\n            const blob = new Blob([fileContent], {\n              type: file.mimeType\n            });\n            const fileObj = new File([blob], file.name, {\n              type: file.mimeType\n            });\n            fileObjects.push(fileObj);\n          }\n          handleCarouselFilesChange({\n            target: {\n              files: fileObjects\n            }\n          });\n        } else {\n          // Handle single file\n          const file = files[0];\n          const fileContent = await downloadGoogleDriveFile(file.id);\n          const blob = new Blob([fileContent], {\n            type: file.mimeType\n          });\n          const fileObj = new File([blob], file.name, {\n            type: file.mimeType\n          });\n          if (filePickerType === 'photo') {\n            handleImageChange({\n              target: {\n                files: [fileObj]\n              }\n            });\n          } else if (filePickerType === 'video') {\n            handleReelFileChange({\n              target: {\n                files: [fileObj]\n              }\n            });\n          }\n        }\n        closeFilePicker();\n        setMessage('File(s) selected from Google Drive successfully!');\n      } catch (error) {\n        console.error('Error downloading file from Google Drive:', error);\n        setMessage('Failed to download file from Google Drive: ' + error.message);\n      }\n    }\n  };\n  const downloadGoogleDriveFile = async fileId => {\n    try {\n      const response = await apiClient.downloadGoogleDriveFile(fileId);\n      if (response.success && response.fileContent) {\n        // Convert base64 to blob\n        const byteCharacters = atob(response.fileContent);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        return byteArray;\n      } else {\n        throw new Error(response.error || 'Download failed');\n      }\n    } catch (error) {\n      throw new Error(`Failed to download file: ${error.message}`);\n    }\n  };\n\n  // --- Post Submission ---\n  const handlePublish = async () => {\n    if (!selectedAccount) {\n      setMessage('Please select an Instagram account first');\n      return;\n    }\n    if (postType === 'photo' && (!aiImageUrl || !aiImageUrl.trim()) && (!uploadedImageUrl || !uploadedImageUrl.trim())) {\n      setMessage('Please select or generate an image');\n      return;\n    }\n    if (postType === 'carousel' && carouselImages.length === 0) {\n      setMessage('Please generate or upload carousel images');\n      return;\n    }\n    if (postType === 'reel' && !reelUrl) {\n      setMessage('Please upload a video for the reel');\n      return;\n    }\n    setLoading(true);\n    setMessage('Creating Instagram post...');\n\n    // Create pre-posting notification\n    addNotification({\n      type: 'pre_posting',\n      platform: 'instagram',\n      strategyName: postType === 'photo' ? 'Photo Post' : postType === 'reel' ? 'Reel Post' : 'Carousel Post',\n      message: `Preparing to publish your Instagram ${postType} post...`,\n      timestamp: new Date().toISOString()\n    });\n    try {\n      // Use the unified Instagram post endpoint for all post types\n      const options = {\n        instagram_user_id: selectedAccount.platform_user_id,\n        post_type: postType === 'photo' ? 'feed' : postType === 'reel' ? 'reel' : postType,\n        media_type: postType === 'reel' ? 'video' : 'image' // <-- robust: send 'video' for reels\n      };\n\n      // Handle different post types\n      if (postType === 'photo') {\n        options.caption = caption;\n        const imageUrl = imageSource === 'ai' ? aiImageUrl : uploadedImageUrl;\n        if (imageUrl && imageUrl.trim()) {\n          options.image_url = imageUrl;\n        } else {\n          // If no image is available, we can't create a photo post\n          setMessage('Please select or generate an image before creating a photo post');\n          setLoading(false);\n          return;\n        }\n        console.log('🔍 DEBUG: Photo post options:', {\n          postType,\n          imageSource,\n          aiImageUrl,\n          uploadedImageUrl,\n          finalImageUrl: options.image_url,\n          caption: options.caption\n        });\n      } else if (postType === 'carousel') {\n        // For carousel, we need to use the carousel-specific endpoint\n        const response = await apiClient.postInstagramCarousel(selectedAccount.platform_user_id, carouselCaption, carouselImages);\n        if (response.success) {\n          setMessage('Instagram carousel post created successfully!');\n\n          // Create success notification for carousel\n          addNotification({\n            type: 'success',\n            platform: 'instagram',\n            strategyName: 'Carousel Post',\n            message: 'Your Instagram carousel post was published successfully!',\n            timestamp: new Date().toISOString()\n          });\n\n          // Reset form\n          setCarouselImages([]);\n          setCarouselCaption('');\n          setCaptionPrompt('');\n          setAutoGenerateCaption(false);\n          setAiPrompt('');\n\n          // Reload user media\n          if (selectedAccount) {\n            loadUserMedia(selectedAccount.platform_user_id);\n          }\n        } else {\n          setMessage(`Failed to create carousel post: ${response.error}`);\n\n          // Create failure notification for carousel\n          addNotification({\n            type: 'failure',\n            platform: 'instagram',\n            strategyName: 'Carousel Post',\n            message: `Failed to publish Instagram carousel post: ${response.error}`,\n            timestamp: new Date().toISOString()\n          });\n        }\n        setLoading(false);\n        return;\n      } else if (postType === 'reel') {\n        options.caption = reelCaption;\n        // Always use Cloudinary URL for Reels\n        if (reelUrl && reelUrl.trim().startsWith('http')) {\n          options.video_url = reelUrl;\n        } else if (reelFilename && reelFilename.trim()) {\n          options.video_filename = reelFilename;\n        }\n        options.is_reel = true;\n        if (reelThumbnailUrl && reelThumbnailUrl.trim()) {\n          options.thumbnail_url = reelThumbnailUrl;\n        } else if (reelThumbnailFilename && reelThumbnailFilename.trim()) {\n          options.thumbnail_filename = reelThumbnailFilename;\n        }\n        options.media_type = 'video';\n        // Do NOT send media_file or media_filename for Reels\n        if ('media_file' in options) delete options.media_file;\n        if ('media_filename' in options) delete options.media_filename;\n        if ('image_url' in options) delete options.image_url;\n        console.log('🔍 DEBUG: Reel post options:', options);\n        console.log('🔍 DEBUG: Thumbnail state values:', {\n          reelThumbnailUrl,\n          reelThumbnailFilename,\n          hasThumbnailUrl: reelThumbnailUrl && reelThumbnailUrl.trim(),\n          hasThumbnailFilename: reelThumbnailFilename && reelThumbnailFilename.trim()\n        });\n      }\n\n      // Remove any empty string values from options to avoid backend validation issues\n      const cleanOptions = Object.fromEntries(Object.entries(options).filter(([key, value]) => value !== null && value !== undefined && value !== ''));\n\n      // Additional validation for photo posts\n      if (postType === 'photo' && !cleanOptions.image_url) {\n        setMessage('Photo posts require an image. Please select or generate an image first.');\n        setLoading(false);\n        return;\n      }\n\n      // Additional validation for reel posts\n      if (postType === 'reel' && !cleanOptions.video_url && !cleanOptions.video_filename) {\n        setMessage('Reel posts require a video. Please upload a video first.');\n        setLoading(false);\n        return;\n      }\n      console.log('🔍 DEBUG: Calling createUnifiedInstagramPost with:', {\n        instagramUserId: selectedAccount.platform_user_id,\n        options: cleanOptions,\n        originalPostType: postType,\n        originalOptions: options,\n        reelUrl: reelUrl,\n        reelFilename: reelFilename\n      });\n      console.log('🔍 DEBUG: Final thumbnail state before API call:', {\n        reelThumbnailUrl,\n        reelThumbnailFilename,\n        hasThumbnailUrl: reelThumbnailUrl && reelThumbnailUrl.trim(),\n        hasThumbnailFilename: reelThumbnailFilename && reelThumbnailFilename.trim(),\n        cleanOptionsHasThumbnail: cleanOptions.thumbnail_url || cleanOptions.thumbnail_filename\n      });\n      const response = await apiClient.createUnifiedInstagramPost(selectedAccount.platform_user_id, cleanOptions);\n      if (response.success) {\n        setMessage('Instagram post created successfully!');\n\n        // Create success notification\n        addNotification({\n          type: 'success',\n          platform: 'instagram',\n          strategyName: postType === 'photo' ? 'Photo Post' : postType === 'reel' ? 'Reel Post' : 'Carousel Post',\n          message: `Your Instagram ${postType} post was published successfully!`,\n          timestamp: new Date().toISOString()\n        });\n\n        // Reset form\n        setCaption('');\n        setReelCaption('');\n        setReelCaptionPrompt('');\n        setReelAutoGenerateCaption(false);\n        setAiImageUrl('');\n        setUploadedImageUrl('');\n        setReelUrl('');\n        setReelFilename(''); // Clear the filename too\n        // eslint-disable-next-line no-undef\n        setReelFile(null);\n        setSelectedImageFile(null);\n        setAiPrompt('');\n        setCaptionPrompt('');\n        setReelThumbnailUrl('');\n        setReelThumbnailFilename('');\n        // eslint-disable-next-line no-undef\n        setReelThumbnailFile(null);\n        // Reload user media\n        if (selectedAccount) {\n          loadUserMedia(selectedAccount.platform_user_id);\n        }\n        // --- Synchronize account info for post count ---\n        try {\n          const allAccounts = await apiClient.getSocialAccounts();\n          const updatedAccount = allAccounts.find(acc => acc.id === selectedAccount.id);\n          if (updatedAccount) {\n            setSelectedAccount(updatedAccount);\n            setInstagramAccounts(prev => prev.map(acc => acc.id === updatedAccount.id ? updatedAccount : acc));\n          }\n        } catch (err) {\n          console.warn('Failed to refresh account info after post:', err);\n        }\n        setActiveTab('scheduled-posts');\n      } else {\n        let errorMsg = `Failed to create post: ${response.error || 'Unknown error'}`;\n        if (response.details) {\n          errorMsg += `\\nDetails: ${typeof response.details === 'string' ? response.details : JSON.stringify(response.details)}`;\n        }\n        setMessage(errorMsg);\n\n        // Create failure notification\n        addNotification({\n          type: 'failure',\n          platform: 'instagram',\n          strategyName: postType === 'photo' ? 'Photo Post' : postType === 'reel' ? 'Reel Post' : 'Carousel Post',\n          message: `Failed to publish Instagram ${postType} post: ${response.error || 'Unknown error'}`,\n          timestamp: new Date().toISOString()\n        });\n        console.error('Instagram post error:', response);\n      }\n    } catch (error) {\n      console.error('Error creating Instagram post:', error);\n      setMessage(`Error creating post: ${error.message}`);\n\n      // Create failure notification for unexpected errors\n      addNotification({\n        type: 'failure',\n        platform: 'instagram',\n        strategyName: postType === 'photo' ? 'Photo Post' : postType === 'reel' ? 'Reel Post' : 'Carousel Post',\n        message: `Unexpected error creating Instagram ${postType} post: ${error.message}`,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check Google Drive availability\n  const checkGoogleDriveAvailability = async () => {\n    try {\n      const status = await apiClient.getGoogleDriveStatus();\n      setGoogleDriveAvailable(status.authenticated);\n    } catch (error) {\n      console.error('Error checking Google Drive availability:', error);\n      setGoogleDriveAvailable(false);\n    }\n  };\n\n  // --- Logout ---\n  const handleLogout = () => {\n    setInstagramAccounts([]);\n    setSelectedAccount('');\n    setIsConnected(false);\n    setActiveTab('connect');\n    setMessage('Instagram accounts disconnected');\n  };\n\n  // Auto-Reply Functions\n  const loadAutoReplySettings = async () => {\n    if (!selectedAccount) return;\n    try {\n      console.log('🔄 Loading auto-reply settings for Instagram account:', selectedAccount.platform_user_id, selectedAccount.username);\n\n      // Get automation rules for Instagram auto-reply\n      const rules = await apiClient.getAutomationRules('instagram', 'auto_reply');\n      console.log('📋 Found automation rules:', rules);\n\n      // Find existing auto-reply rule for this account\n      const existingRule = rules.find(rule => rule.social_account_id === selectedAccount.id && rule.rule_type === 'AUTO_REPLY');\n      if (existingRule) {\n        var _existingRule$actions;\n        setAutoReplyEnabled(existingRule.is_active);\n        setAutoReplyTemplate(((_existingRule$actions = existingRule.actions) === null || _existingRule$actions === void 0 ? void 0 : _existingRule$actions.template) || '');\n        console.log('✅ Found existing auto-reply rule:', existingRule);\n      } else {\n        setAutoReplyEnabled(false);\n        setAutoReplyTemplate('');\n        console.log('📝 No existing auto-reply rule found');\n      }\n\n      // Load posts for auto-reply selection\n      await loadPostsForAutoReply();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ Error loading auto-reply settings:', error);\n      let errorMessage = 'Failed to load auto-reply settings';\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.detail) {\n        errorMessage += ': ' + error.response.data.detail;\n      } else if (error.message) {\n        errorMessage += ': ' + error.message;\n      }\n      setMessage(errorMessage);\n    }\n  };\n\n  // DM Auto-Reply Functions\n  const loadDmAutoReplySettings = async () => {\n    if (!selectedAccount) return;\n    try {\n      console.log('🔄 Loading DM auto-reply settings for Instagram account:', selectedAccount.platform_user_id, selectedAccount.username);\n      const statusResponse = await apiClient.getInstagramDmAutoReplyStatus(selectedAccount.platform_user_id);\n      console.log('📋 DM auto-reply status:', statusResponse);\n      if (statusResponse.success) {\n        setDmAutoReplyEnabled(statusResponse.enabled);\n        console.log('✅ DM auto-reply status loaded:', statusResponse.enabled);\n      } else {\n        setDmAutoReplyEnabled(false);\n        showToast('Failed to load DM auto-reply status: ' + (statusResponse.error || 'Unknown error'), 'error');\n        console.log('📝 No DM auto-reply status found');\n      }\n    } catch (error) {\n      setDmAutoReplyEnabled(false);\n      showToast('Error loading DM auto-reply settings: ' + ((error === null || error === void 0 ? void 0 : error.message) || 'Unknown error'), 'error');\n      console.error('❌ Error loading DM auto-reply settings:', error);\n    }\n  };\n  const handleDmAutoReplyToggle = async () => {\n    if (!selectedAccount) {\n      showToast('Please select an Instagram account first.', 'error');\n      return;\n    }\n    setDmAutoReplyLoading(true);\n    try {\n      const response = await apiClient.toggleInstagramDmAutoReply(selectedAccount.platform_user_id, !dmAutoReplyEnabled);\n      if (response.success) {\n        setDmAutoReplyEnabled(!dmAutoReplyEnabled);\n        showToast(!dmAutoReplyEnabled ? 'Auto DM Reply enabled successfully!' : 'Auto DM Reply disabled successfully.', 'success');\n      } else {\n        showToast('Failed to toggle Auto DM Reply: ' + (response.error || 'Unknown error'), 'error');\n        console.error('❌ Failed to toggle Auto DM Reply:', response);\n      }\n    } catch (error) {\n      showToast('Failed to toggle Auto DM Reply: ' + ((error === null || error === void 0 ? void 0 : error.message) || 'Unknown error'), 'error');\n      console.error('❌ Error toggling Auto DM Reply:', error);\n    } finally {\n      setDmAutoReplyLoading(false);\n    }\n  };\n  const loadPostsForAutoReply = async () => {\n    if (!selectedAccount) return;\n    try {\n      setLoadingAutoReplyPosts(true);\n      console.log('🔄 Loading posts for auto-reply selection for Instagram account:', selectedAccount.platform_user_id);\n\n      // First, try to get posts directly from the database\n      const response = await apiClient.getPosts('instagram');\n      console.log('📋 All Instagram posts from database:', response);\n      if (response && Array.isArray(response)) {\n        console.log('🔍 Selected account details:', {\n          id: selectedAccount.id,\n          platform_user_id: selectedAccount.platform_user_id,\n          username: selectedAccount.username\n        });\n\n        // Filter posts for this specific account with better debugging\n        const accountPosts = response.filter(post => {\n          var _post$social_account, _post$social_account2, _post$social_account3, _post$social_account4, _post$social_account5, _post$social_account6;\n          // Primary match: social_account_id (most reliable)\n          const matchesAccountId = ((_post$social_account = post.social_account) === null || _post$social_account === void 0 ? void 0 : _post$social_account.id) === selectedAccount.id;\n\n          // Secondary matches for compatibility\n          const matchesPlatformUserId = ((_post$social_account2 = post.social_account) === null || _post$social_account2 === void 0 ? void 0 : _post$social_account2.platform_user_id) === selectedAccount.platform_user_id;\n          const matchesUsername = ((_post$social_account3 = post.social_account) === null || _post$social_account3 === void 0 ? void 0 : _post$social_account3.username) === selectedAccount.username;\n          const isMatch = matchesAccountId || matchesPlatformUserId || matchesUsername;\n          console.log('🔍 Checking post:', {\n            postId: post.id,\n            postAccountId: (_post$social_account4 = post.social_account) === null || _post$social_account4 === void 0 ? void 0 : _post$social_account4.id,\n            postPlatformUserId: (_post$social_account5 = post.social_account) === null || _post$social_account5 === void 0 ? void 0 : _post$social_account5.platform_user_id,\n            postUsername: (_post$social_account6 = post.social_account) === null || _post$social_account6 === void 0 ? void 0 : _post$social_account6.username,\n            selectedAccountId: selectedAccount.id,\n            selectedPlatformUserId: selectedAccount.platform_user_id,\n            selectedUsername: selectedAccount.username,\n            matchesAccountId,\n            matchesPlatformUserId,\n            matchesUsername,\n            isMatch\n          });\n          return isMatch;\n        });\n        console.log('📋 Posts for this account:', accountPosts.length);\n        console.log('📋 All posts in database:', response.length);\n        console.log('📋 Account posts details:', accountPosts.map(post => {\n          var _post$content, _post$social_account7, _post$social_account8, _post$social_account9;\n          return {\n            id: post.id,\n            content: ((_post$content = post.content) === null || _post$content === void 0 ? void 0 : _post$content.substring(0, 50)) + '...',\n            social_account_id: (_post$social_account7 = post.social_account) === null || _post$social_account7 === void 0 ? void 0 : _post$social_account7.id,\n            platform_user_id: (_post$social_account8 = post.social_account) === null || _post$social_account8 === void 0 ? void 0 : _post$social_account8.platform_user_id,\n            username: (_post$social_account9 = post.social_account) === null || _post$social_account9 === void 0 ? void 0 : _post$social_account9.username\n          };\n        }));\n        if (accountPosts.length === 0) {\n          console.log('⚠️ No posts found for this specific account. Showing all Instagram posts for debugging...');\n\n          // Show all Instagram posts for debugging\n          setAutoReplyPosts(response);\n          console.log('📋 Showing all Instagram posts for debugging:', response.length);\n\n          // Also try to sync from Instagram API\n          console.log('🔄 Attempting to sync from Instagram...');\n          try {\n            const syncResponse = await apiClient.syncInstagramPosts(selectedAccount.platform_user_id);\n            console.log('📡 Sync response:', syncResponse);\n            if (syncResponse.success) {\n              // Re-fetch posts after sync\n              const refreshedResponse = await apiClient.getPosts('instagram');\n              const refreshedAccountPosts = refreshedResponse.filter(post => {\n                var _post$social_account0, _post$social_account1, _post$social_account10;\n                // Primary match: social_account_id (most reliable)\n                const matchesAccountId = ((_post$social_account0 = post.social_account) === null || _post$social_account0 === void 0 ? void 0 : _post$social_account0.id) === selectedAccount.id;\n\n                // Secondary matches for compatibility\n                const matchesPlatformUserId = ((_post$social_account1 = post.social_account) === null || _post$social_account1 === void 0 ? void 0 : _post$social_account1.platform_user_id) === selectedAccount.platform_user_id;\n                const matchesUsername = ((_post$social_account10 = post.social_account) === null || _post$social_account10 === void 0 ? void 0 : _post$social_account10.username) === selectedAccount.username;\n                return matchesAccountId || matchesPlatformUserId || matchesUsername;\n              });\n              if (refreshedAccountPosts.length > 0) {\n                setAutoReplyPosts(refreshedAccountPosts);\n                console.log('✅ Posts loaded after sync:', refreshedAccountPosts.length);\n              } else {\n                console.log('⚠️ Still no posts found after sync. Showing all posts for debugging.');\n                setAutoReplyPosts(refreshedResponse);\n                setMessage('No posts found for this account. Showing all Instagram posts for debugging. Create some posts first using the Create Post tab.');\n              }\n            } else {\n              setMessage('Failed to sync posts from Instagram. Showing all posts for debugging.');\n            }\n          } catch (syncError) {\n            console.error('❌ Sync error:', syncError);\n            setMessage('Failed to sync posts from Instagram. Showing all posts for debugging.');\n          }\n        } else {\n          setAutoReplyPosts(accountPosts);\n          console.log('✅ Posts loaded for auto-reply selection:', accountPosts.length);\n        }\n      } else {\n        throw new Error('Failed to load posts');\n      }\n    } catch (error) {\n      console.error('❌ Error loading posts for auto-reply:', error);\n\n      // Provide more specific error messages\n      let errorMessage = 'Failed to load posts for auto-reply selection';\n      if (error.message.includes('404')) {\n        errorMessage = 'Instagram account not found. Please reconnect your Instagram account.';\n      } else if (error.message.includes('401')) {\n        errorMessage = 'Authentication failed. Please log in again.';\n      } else if (error.message.includes('500')) {\n        errorMessage = 'Server error. Please try again later.';\n      }\n      setMessage(errorMessage);\n    } finally {\n      setLoadingAutoReplyPosts(false);\n    }\n  };\n  const handlePostSelection = postId => {\n    setSelectedAutoReplyPosts(prev => {\n      if (prev.includes(postId)) {\n        return prev.filter(id => id !== postId);\n      } else {\n        return [...prev, postId];\n      }\n    });\n  };\n  const handlePostTouch = (postId, event) => {\n    event.preventDefault();\n    handlePostSelection(postId);\n  };\n  const selectAllPosts = () => {\n    const allPostIds = autoReplyPosts.map(post => post.id);\n    setSelectedAutoReplyPosts(allPostIds);\n  };\n  const deselectAllPosts = () => {\n    setSelectedAutoReplyPosts([]);\n  };\n  const handleSelectPosts = () => {\n    setIsSelectingPosts(true);\n    // Load posts when entering selection mode\n    if (autoReplyPosts.length === 0) {\n      loadPostsForAutoReply();\n    }\n  };\n  const handleDoneSelecting = () => {\n    setIsSelectingPosts(false);\n  };\n  const handleAutoReplyToggle = async () => {\n    if (!selectedAccount) {\n      setMessage('Please select an Instagram account first');\n      return;\n    }\n\n    // Check if posts are available when enabling\n    if (!autoReplyEnabled && autoReplyPosts.length === 0) {\n      setMessage('No posts available for auto-reply. Please create some posts first.');\n      return;\n    }\n\n    // If enabling auto-reply without selected posts, auto-select all posts\n    if (!autoReplyEnabled && selectedAutoReplyPosts.length === 0) {\n      const allPostIds = autoReplyPosts.map(post => post.id);\n      setSelectedAutoReplyPosts(allPostIds);\n      console.log('Auto-selecting all posts for auto-reply:', allPostIds);\n    }\n\n    // Add mobile-friendly confirmation for enabling auto-reply\n    if (!autoReplyEnabled) {\n      const isMobile = window.innerWidth <= 768;\n      const postCount = selectedAutoReplyPosts.length > 0 ? selectedAutoReplyPosts.length : autoReplyPosts.length;\n      const confirmMessage = isMobile ? `Enable auto-reply for ${postCount} post(s)?` : `Enable auto-reply for ${postCount} post(s)? AI will automatically reply to comments mentioning the commenter.`;\n      if (!window.confirm(confirmMessage)) {\n        return;\n      }\n    }\n    setAutoReplyLoading(true);\n    try {\n      console.log('🔄 Toggling auto-reply for Instagram account:', selectedAccount.platform_user_id, selectedAccount.username);\n      console.log('📝 Selected post IDs:', selectedAutoReplyPosts);\n      console.log('🎯 New state will be:', !autoReplyEnabled);\n      const response = await apiClient.toggleInstagramAutoReply(selectedAccount.platform_user_id, !autoReplyEnabled, autoReplyTemplate, selectedAutoReplyPosts);\n      console.log('📡 Backend response:', response);\n      if (response.success) {\n        var _response$data, _response$data2, _response$data3;\n        setAutoReplyEnabled(!autoReplyEnabled);\n        const successMessage = !autoReplyEnabled ? isMobile() ? `Auto-reply enabled for ${((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.selected_posts_count) || selectedAutoReplyPosts.length} post(s)!` : `Auto-reply enabled successfully for ${((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.selected_posts_count) || selectedAutoReplyPosts.length} post(s)! AI will automatically reply to comments mentioning the commenter.` : 'Auto-reply disabled successfully.';\n        setMessage(successMessage);\n        console.log('✅ Auto-reply toggled successfully:', {\n          enabled: !autoReplyEnabled,\n          selectedPostsCount: (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.selected_posts_count\n        });\n      } else {\n        throw new Error(response.error || 'Failed to toggle auto-reply');\n      }\n    } catch (error) {\n      console.error('❌ Auto-reply toggle error:', error);\n      setMessage('Error toggling auto-reply: ' + (error.message || 'Unknown error'));\n    } finally {\n      setAutoReplyLoading(false);\n    }\n  };\n\n  // Load auto-reply settings when account is selected\n  useEffect(() => {\n    console.log('🔍 DEBUG: Auto-reply useEffect triggered');\n    console.log('🔍 DEBUG: selectedAccount:', selectedAccount);\n    console.log('🔍 DEBUG: activeTab:', activeTab);\n    if (selectedAccount && activeTab === 'auto-reply') {\n      console.log('🔍 DEBUG: Loading auto-reply settings');\n      loadAutoReplySettings();\n    }\n  }, [selectedAccount, activeTab]);\n\n  // Persist auto-reply state on page refresh\n  useEffect(() => {\n    if (selectedAccount && autoReplyEnabled) {\n      // Re-validate auto-reply state with backend\n      const validateAutoReplyState = async () => {\n        try {\n          const rules = await apiClient.getAutomationRules('instagram', 'auto_reply');\n          const socialAccounts = await apiClient.getSocialAccounts();\n          const instagramAccount = socialAccounts.find(acc => acc.platform === 'instagram' && acc.platform_user_id === selectedAccount.platform_user_id);\n          if (instagramAccount) {\n            const existingRule = rules.find(rule => rule.social_account_id === instagramAccount.id && rule.rule_type === 'AUTO_REPLY');\n            if (!existingRule || !existingRule.is_active) {\n              setAutoReplyEnabled(false);\n              setSelectedAutoReplyPosts([]);\n            }\n          }\n        } catch (error) {\n          console.error('Error validating auto-reply state:', error);\n        }\n      };\n      validateAutoReplyState();\n    }\n  }, [selectedAccount, autoReplyEnabled]);\n\n  // Load user media when account is selected\n  useEffect(() => {\n    if (selectedAccount && activeTab === 'post') {\n      loadUserMedia(selectedAccount.platform_user_id);\n    }\n  }, [selectedAccount, activeTab]);\n\n  // Load DM auto-reply settings when account is selected\n  useEffect(() => {\n    if (selectedAccount && activeTab === 'auto-reply') {\n      loadDmAutoReplySettings();\n    }\n  }, [selectedAccount, activeTab]);\n\n  // Add a useEffect to always load DM auto-reply settings when selectedAccount changes\n  useEffect(() => {\n    if (selectedAccount) {\n      loadDmAutoReplySettings();\n    }\n  }, [selectedAccount]);\n\n  // --- New: Scheduled Posts Grid State ---\n  const [scheduledGridRows, setScheduledGridRows] = useState([]);\n\n  // Show grid if redirected with scheduled posts\n  useEffect(() => {\n    if (location.state && location.state.scheduledGridRows) {\n      setScheduledGridRows(location.state.scheduledGridRows);\n    }\n  }, [location.state]);\n\n  // --- Auto-refresh scheduled posts grid ---\n  useEffect(() => {\n    let intervalId;\n    const fetchScheduledPosts = async () => {\n      try {\n        const posts = await apiClient.getScheduledPosts();\n        setScheduledGridRows(posts.filter(post => post.platform === 'instagram'));\n      } catch (err) {}\n    };\n    fetchScheduledPosts(); // Always fetch on mount\n    intervalId = setInterval(fetchScheduledPosts, 10000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // --- UI Render ---\n  if (authLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instagram-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1898,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Checking authentication...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1898,\n          columnNumber: 120\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1898,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1898,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instagram-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"back-button\",\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1904,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: \"position: left\",\n          children: \"Instagram Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1905,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please log in to your account to connect and manage Instagram.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1906,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1903,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-required\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1909,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Authentication Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1910,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You need to be logged in to use Instagram features. Please log in first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1911,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1908,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1902,\n      columnNumber: 7\n    }, this);\n  }\n  if (!sdkLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instagram-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1917,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Instagram SDK...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1917,\n          columnNumber: 120\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1917,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1917,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"instagram-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"back-button\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1923,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"2\",\n              y: \"2\",\n              width: \"20\",\n              height: \"20\",\n              rx: \"5\",\n              ry: \"5\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1927,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"17.5\",\n              y1: \"6.5\",\n              x2: \"17.51\",\n              y2: \"6.5\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1929,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1926,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1925,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Instagram Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1933,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connect and manage your Instagram Business accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1934,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1932,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1924,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1922,\n      columnNumber: 7\n    }, this), isConnected && selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global-auto-reply-section\",\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        background: '#fff',\n        borderRadius: 12,\n        boxShadow: '0 2px 8px rgba(0,0,0,0.04)',\n        padding: '18px 24px',\n        marginBottom: 18,\n        border: '1px solid #eee',\n        flexWrap: 'wrap',\n        gap: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 56,\n            height: 56,\n            borderRadius: '50%',\n            overflow: 'hidden',\n            background: '#f3f3f3',\n            border: '1px solid #e0e0e0'\n          },\n          children: selectedAccount.profile_picture_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedAccount.profile_picture_url,\n            alt: selectedAccount.username,\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1950,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '100%',\n              background: '#eee'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1952,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1948,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              fontSize: 18\n            },\n            children: [\"@\", selectedAccount.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1956,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#888',\n              fontSize: 14\n            },\n            children: selectedAccount.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1957,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#666',\n              fontSize: 13,\n              marginTop: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: selectedAccount.followers_count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1960,\n                columnNumber: 19\n              }, this), \" followers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: selectedAccount.media_count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1963,\n                columnNumber: 19\n              }, this), \" posts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1962,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1958,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1955,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1947,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auto-reply-toggle-btn\",\n          onClick: handleGlobalAutoReplyToggle,\n          disabled: globalAutoReplyLoading,\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 10,\n            fontWeight: 600,\n            background: globalAutoReplyEnabled ? '#38c172' : '#e0e0e0',\n            color: globalAutoReplyEnabled ? '#fff' : '#444',\n            border: 'none',\n            borderRadius: 20,\n            padding: '10px 22px',\n            fontSize: 16,\n            cursor: globalAutoReplyLoading ? 'not-allowed' : 'pointer',\n            boxShadow: globalAutoReplyEnabled ? '0 2px 8px rgba(56,193,114,0.08)' : 'none',\n            transition: 'background 0.2s'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              width: 14,\n              height: 14,\n              borderRadius: '50%',\n              background: globalAutoReplyEnabled ? '#2ecc40' : '#bbb',\n              marginRight: 6,\n              border: globalAutoReplyEnabled ? '2px solid #fff' : '2px solid #ccc',\n              boxShadow: globalAutoReplyEnabled ? '0 0 4px #38c172' : 'none',\n              verticalAlign: 'middle'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1983,\n            columnNumber: 15\n          }, this), \"Auto Comment Reply: \", globalAutoReplyEnabled ? 'Enabled' : 'Disabled', globalAutoReplyLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\",\n            style: {\n              marginLeft: 10,\n              width: 18,\n              height: 18,\n              border: '2px solid #fff',\n              borderTop: '2px solid #38c172',\n              borderRadius: '50%',\n              display: 'inline-block',\n              animation: 'spin 1s linear infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1992,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1969,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auto-reply-toggle-btn\",\n          onClick: handleDmAutoReplyToggle,\n          disabled: dmAutoReplyLoading,\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 10,\n            fontWeight: 600,\n            background: dmAutoReplyEnabled ? '#38c172' : '#e0e0e0',\n            color: dmAutoReplyEnabled ? '#fff' : '#444',\n            border: 'none',\n            borderRadius: 20,\n            padding: '10px 22px',\n            fontSize: 16,\n            cursor: dmAutoReplyLoading ? 'not-allowed' : 'pointer',\n            boxShadow: dmAutoReplyEnabled ? '0 2px 8px rgba(56,193,114,0.08)' : 'none',\n            transition: 'background 0.2s'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              width: 14,\n              height: 14,\n              borderRadius: '50%',\n              background: dmAutoReplyEnabled ? '#2ecc40' : '#bbb',\n              marginRight: 6,\n              border: dmAutoReplyEnabled ? '2px solid #fff' : '2px solid #ccc',\n              boxShadow: dmAutoReplyEnabled ? '0 0 4px #38c172' : 'none',\n              verticalAlign: 'middle'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2011,\n            columnNumber: 15\n          }, this), \"Auto DM Reply: \", dmAutoReplyEnabled ? 'Enabled' : 'Disabled', dmAutoReplyLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\",\n            style: {\n              marginLeft: 10,\n              width: 18,\n              height: 18,\n              border: '2px solid #fff',\n              borderTop: '2px solid #38c172',\n              borderRadius: '50%',\n              display: 'inline-block',\n              animation: 'spin 1s linear infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2020,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1997,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1968,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1941,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-text\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2028,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2028,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'connect' ? 'active' : ''}`,\n          onClick: () => setActiveTab('connect'),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2033,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"9\",\n              cy: \"7\",\n              r: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2034,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 21v-2a4 4 0 0 0-3-3.87\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2035,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16 3.13a4 4 0 0 1 0 7.75\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2036,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2032,\n            columnNumber: 13\n          }, this), \"Connect Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2031,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'post' ? 'active' : ''}`,\n          onClick: () => setActiveTab('post'),\n          disabled: !isConnected,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 20h9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2042,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4 12.5-12.5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2043,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2041,\n            columnNumber: 13\n          }, this), \"Create Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'media' ? 'active' : ''}`,\n          onClick: () => setActiveTab('media'),\n          disabled: !isConnected || !selectedAccount,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"3\",\n              y: \"3\",\n              width: \"18\",\n              height: \"18\",\n              rx: \"2\",\n              ry: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2049,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"8.5\",\n              cy: \"8.5\",\n              r: \"1.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2050,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n              points: \"21,15 16,10 5,21\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2051,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2048,\n            columnNumber: 13\n          }, this), \"Media Gallery\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2047,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'bulk-composer' ? 'active' : ''}`,\n          onClick: () => setActiveTab('bulk-composer'),\n          disabled: !isConnected || !selectedAccount,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"3\",\n              y: \"3\",\n              width: \"7\",\n              height: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2061,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"14\",\n              y: \"3\",\n              width: \"7\",\n              height: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2062,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"14\",\n              y: \"14\",\n              width: \"7\",\n              height: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2063,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"3\",\n              y: \"14\",\n              width: \"7\",\n              height: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2064,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2060,\n            columnNumber: 13\n          }, this), \"Bulk Composer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2055,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'scheduled-posts' ? 'active' : ''}`,\n          onClick: () => setActiveTab('scheduled-posts'),\n          disabled: !isConnected || !selectedAccount,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2070,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n              points: \"12,6 12,12 16,14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2071,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2069,\n            columnNumber: 13\n          }, this), \"Scheduled Posts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2068,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2030,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [activeTab === 'connect' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connect-section\",\n          children: !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2081,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Connect Instagram Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2082,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Connect your Instagram Business account through Facebook to start posting and managing content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2083,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleFacebookLogin,\n              disabled: loading,\n              className: \"connect-main-button\",\n              children: loading ? 'Connecting...' : 'Connect via Facebook'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2084,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"requirements-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Requirements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2086,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Instagram Business or Creator account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2088,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Connected to a Facebook Page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2089,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Admin access to the Facebook Page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2090,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2087,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2085,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2080,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connected-accounts\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accounts-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Connected Instagram Accounts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2097,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleLogout,\n                className: \"logout-button\",\n                children: \"Disconnect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2098,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2096,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accounts-grid\",\n              children: instagramAccounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `account-card ${selectedAccount.id === account.id ? 'selected' : ''}`,\n                onClick: () => setSelectedAccount(account),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"account-avatar\",\n                  children: account.profile_picture_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: account.profile_picture_url,\n                    alt: account.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2103,\n                    columnNumber: 88\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"avatar-placeholder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2103,\n                    columnNumber: 155\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2103,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"account-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"@\", account.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2105,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: account.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2106,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"account-stats\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [account.followers_count, \" followers\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2107,\n                      columnNumber: 58\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [account.media_count, \" posts\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2107,\n                      columnNumber: 106\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2107,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2104,\n                  columnNumber: 25\n                }, this), selectedAccount.id === account.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-indicator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2109,\n                  columnNumber: 63\n                }, this)]\n              }, account.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2102,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2095,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2078,\n          columnNumber: 13\n        }, this), activeTab === 'post' && selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-type-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: postType === 'photo' ? 'active' : '',\n              onClick: () => setPostType('photo'),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                  x: \"3\",\n                  y: \"3\",\n                  width: \"18\",\n                  height: \"18\",\n                  rx: \"2\",\n                  ry: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"8.5\",\n                  cy: \"8.5\",\n                  r: \"1.5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"21,15 16,10 5,21\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2124,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2121,\n                columnNumber: 19\n              }, this), \"Photo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: postType === 'carousel' ? 'active' : '',\n              onClick: () => setPostType('carousel'),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                  x: \"2\",\n                  y: \"3\",\n                  width: \"20\",\n                  height: \"14\",\n                  rx: \"2\",\n                  ry: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"8\",\n                  y1: \"21\",\n                  x2: \"16\",\n                  y2: \"21\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"12\",\n                  y1: \"17\",\n                  x2: \"12\",\n                  y2: \"21\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2132,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2129,\n                columnNumber: 19\n              }, this), \"Carousel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: postType === 'reel' ? 'active' : '',\n              onClick: () => setPostType('reel'),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n                  points: \"23 7 16 12 23 17 23 7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                  x: \"1\",\n                  y: \"5\",\n                  width: \"15\",\n                  height: \"14\",\n                  rx: \"2\",\n                  ry: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2139,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2137,\n                columnNumber: 19\n              }, this), \"Reel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2119,\n            columnNumber: 15\n          }, this), postType === 'photo' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Image Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-source-toggle\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: imageSource === 'ai' ? 'active' : '',\n                  onClick: () => setImageSource('ai'),\n                  children: \"AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2150,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: imageSource === 'upload' ? 'active' : '',\n                  onClick: () => setImageSource('upload'),\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2151,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2147,\n              columnNumber: 19\n            }, this), imageSource === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"AI Prompt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2156,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: aiPrompt,\n                onChange: e => {\n                  setAiPrompt(e.target.value);\n                  // Clear generated content when prompt changes\n                  if (aiImageUrl) {\n                    setAiImageUrl('');\n                  }\n                  if (caption && !caption.trim().includes('Check out this amazing image!')) {\n                    setCaption('');\n                  }\n                },\n                placeholder: \"Describe your image...\",\n                rows: 3,\n                className: \"post-textarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2157,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"ai-generate-button\",\n                  onClick: handleGenerateAIImage,\n                  disabled: aiGenerating || !aiPrompt.trim() || rateLimitCooldown > 0,\n                  children: aiGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      className: \"spinning\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M21 12a9 9 0 11-6.219-8.56\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2178,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2177,\n                      columnNumber: 31\n                    }, this), \"Generating...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2185,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2184,\n                      columnNumber: 31\n                    }, this), \"Generate Image\"]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2174,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"ai-generate-button secondary\",\n                  onClick: handleGenerateImageAndCaption,\n                  disabled: aiGenerating || generatingCaption || !aiPrompt.trim() || rateLimitCooldown > 0,\n                  children: aiGenerating || generatingCaption ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      className: \"spinning\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M21 12a9 9 0 11-6.219-8.56\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2195,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2194,\n                      columnNumber: 31\n                    }, this), \"Generating...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2202,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2201,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2205,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                        points: \"14,2 14,8 20,8\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2206,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"16\",\n                        y1: \"13\",\n                        x2: \"8\",\n                        y2: \"13\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2207,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"16\",\n                        y1: \"17\",\n                        x2: \"8\",\n                        y2: \"17\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2208,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2204,\n                      columnNumber: 31\n                    }, this), \"Generate Image & Caption\"]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2191,\n                  columnNumber: 25\n                }, this), message && message.includes('Error') && aiPrompt.trim() && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"ai-generate-button retry\",\n                  onClick: handleRetryImageGeneration,\n                  disabled: aiGenerating || rateLimitCooldown > 0,\n                  children: aiGenerating ? 'Retrying...' : 'Retry Generation'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2215,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2173,\n                columnNumber: 23\n              }, this), rateLimitCooldown > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#e53e3e',\n                  marginTop: 8,\n                  fontWeight: 500\n                },\n                children: [\"Too many requests. Please wait \", Math.floor(rateLimitCooldown / 60), \":\", (rateLimitCooldown % 60).toString().padStart(2, '0'), \" before trying again.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2221,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2155,\n              columnNumber: 21\n            }, this), imageSource === 'upload' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group image-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2229,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => openFilePicker('photo', 'manual'),\n                className: \"file-picker-button\",\n                disabled: uploadingImage,\n                children: uploadingImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    className: \"spinning\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 12a9 9 0 11-6.219-8.56\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2239,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2238,\n                    columnNumber: 29\n                  }, this), \"Uploading...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2246,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"7,10 12,15 17,10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2247,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"12\",\n                      y1: \"15\",\n                      x2: \"12\",\n                      y2: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2248,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2245,\n                    columnNumber: 29\n                  }, this), \"Choose Image\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2230,\n                columnNumber: 23\n              }, this), uploadedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-preview\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: uploadedImageUrl,\n                  alt: \"Preview\",\n                  className: \"preview-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2256,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2255,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Caption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-toggle\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"toggle-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: autoGenerateCaption,\n                      onChange: e => setAutoGenerateCaption(e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2266,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"toggle-text\",\n                      children: \"Auto Generate Caption\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2271,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2265,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2264,\n                  columnNumber: 23\n                }, this), autoGenerateCaption ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-prompt-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: captionPrompt,\n                    onChange: e => setCaptionPrompt(e.target.value),\n                    placeholder: \"Describe what you want in the caption...\",\n                    rows: 2,\n                    className: \"caption-prompt-textarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2276,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleAutoGenerateCaption,\n                    disabled: generatingCaption || !captionPrompt.trim(),\n                    className: \"generate-caption-button\",\n                    children: generatingCaption ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"16\",\n                        height: \"16\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        className: \"spinning\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M21 12a9 9 0 11-6.219-8.56\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2291,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2290,\n                        columnNumber: 33\n                      }, this), \"Generating...\"]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"16\",\n                        height: \"16\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2298,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                          points: \"14,2 14,8 20,8\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2299,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                          x1: \"16\",\n                          y1: \"13\",\n                          x2: \"8\",\n                          y2: \"13\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2300,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                          x1: \"16\",\n                          y1: \"17\",\n                          x2: \"8\",\n                          y2: \"17\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2301,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2297,\n                        columnNumber: 33\n                      }, this), \"Generate Caption\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2283,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2275,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: caption,\n                  onChange: e => setCaption(e.target.value),\n                  placeholder: autoGenerateCaption ? \"Caption will be generated...\" : \"Write your caption...\",\n                  rows: 3,\n                  className: \"post-textarea\",\n                  disabled: autoGenerateCaption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2309,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2263,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2261,\n              columnNumber: 19\n            }, this), (aiImageUrl || uploadedImageUrl) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"generated-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: aiImageUrl || uploadedImageUrl,\n                alt: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2319,\n                columnNumber: 89\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2319,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"publish-button\",\n              onClick: handlePublish,\n              disabled: loading || !(aiImageUrl || uploadedImageUrl) || !caption.trim() && !autoGenerateCaption,\n              children: loading ? 'Publishing...' : 'Publish Post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2146,\n            columnNumber: 17\n          }, this), postType === 'carousel' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Carousel Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2327,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-source-toggle\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: imageSource === 'ai' ? 'active' : '',\n                  onClick: () => setImageSource('ai'),\n                  disabled: carouselGenerating,\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2335,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2334,\n                    columnNumber: 25\n                  }, this), \"AI Generation\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2329,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: imageSource === 'upload' ? 'active' : '',\n                  onClick: () => setImageSource('upload'),\n                  disabled: carouselGenerating,\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2345,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"7,10 12,15 17,10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2346,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"12\",\n                      y1: \"15\",\n                      x2: \"12\",\n                      y2: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2347,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2344,\n                    columnNumber: 25\n                  }, this), \"Manual Upload\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2339,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2328,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Number of Images: \", carouselCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2356,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"3\",\n                max: \"7\",\n                value: carouselCount,\n                onChange: e => setCarouselCount(parseInt(e.target.value)),\n                className: \"slider\",\n                disabled: carouselGenerating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2357,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slider-labels\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2367,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2368,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2369,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2370,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2371,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2366,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2355,\n              columnNumber: 19\n            }, this), imageSource === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"AI Prompt for Carousel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2378,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: aiPrompt,\n                onChange: e => setAiPrompt(e.target.value),\n                placeholder: \"Describe the carousel content you want to generate...\",\n                rows: \"3\",\n                className: \"post-textarea\",\n                disabled: carouselGenerating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2379,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-generation-note\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"14\",\n                    height: \"14\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    style: {\n                      marginRight: '4px',\n                      verticalAlign: 'middle'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2390,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M12 16v-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2391,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M12 8h.01\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2392,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2389,\n                    columnNumber: 27\n                  }, this), \"Tip: Carousel generation takes 3-5 minutes for \", carouselCount, \" images. Please be patient!\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2388,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2387,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"generate-button\",\n                onClick: async () => {\n                  if (!aiPrompt.trim()) {\n                    setMessage('Please enter a prompt for carousel generation.');\n                    return;\n                  }\n                  setCarouselGenerating(true);\n                  setMessage(`Generating ${carouselCount} carousel images with AI... This may take 3-5 minutes.`);\n                  try {\n                    const response = await apiClient.generateInstagramCarousel(aiPrompt.trim(), carouselCount);\n                    if (response && response.success && response.image_urls) {\n                      setCarouselImages(response.image_urls);\n                      setCarouselCaption(response.caption || '');\n                      setMessage(`AI carousel generated successfully with ${response.image_urls.length} images!`);\n                    } else {\n                      setMessage(response.error || 'Failed to generate carousel images.');\n                    }\n                  } catch (error) {\n                    console.error('Carousel generation error:', error);\n                    if (error.message && error.message.includes('timeout')) {\n                      setMessage('Carousel generation timed out. This can happen with complex prompts or when generating many images. Please try again with a simpler prompt or fewer images.');\n                    } else {\n                      setMessage('Error generating carousel: ' + (error.message || error.toString()));\n                    }\n                  } finally {\n                    setCarouselGenerating(false);\n                  }\n                },\n                disabled: carouselGenerating || !aiPrompt.trim(),\n                children: carouselGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button-spinner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2430,\n                    columnNumber: 29\n                  }, this), \"Generating \", carouselCount, \" Images...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2436,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2435,\n                    columnNumber: 29\n                  }, this), \"Generate Carousel\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2397,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2377,\n              columnNumber: 21\n            }, this), imageSource === 'upload' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Images (JPG/PNG)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2448,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => openFilePicker('photo', 'carousel'),\n                className: \"file-picker-button\",\n                disabled: carouselGenerating,\n                children: carouselGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button-spinner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2457,\n                    columnNumber: 29\n                  }, this), \"Uploading...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2463,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"7,10 12,15 17,10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2464,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"12\",\n                      y1: \"15\",\n                      x2: \"12\",\n                      y2: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2465,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2462,\n                    columnNumber: 29\n                  }, this), \"Select \", carouselCount, \" Images\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2449,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"file-upload-hint\",\n                children: [\"Select \", carouselCount, \" images for your carousel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2471,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2447,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Caption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2479,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-toggle\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"toggle-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: autoGenerateCaption,\n                      onChange: e => setAutoGenerateCaption(e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2483,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"toggle-text\",\n                      children: \"Auto Generate Caption\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2488,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2482,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2481,\n                  columnNumber: 23\n                }, this), autoGenerateCaption ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-prompt-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: captionPrompt,\n                    onChange: e => setCaptionPrompt(e.target.value),\n                    placeholder: \"Describe what you want in the caption...\",\n                    rows: 2,\n                    className: \"caption-prompt-textarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2493,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCarouselAutoGenerateCaption,\n                    disabled: generatingCaption || !captionPrompt.trim(),\n                    className: \"generate-caption-button\",\n                    children: generatingCaption ? 'Generating...' : 'Generate Caption'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2500,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2492,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: carouselCaption,\n                  onChange: e => setCarouselCaption(e.target.value),\n                  placeholder: autoGenerateCaption ? \"Caption will be generated...\" : \"Write your caption...\",\n                  rows: 3,\n                  className: \"post-textarea\",\n                  disabled: autoGenerateCaption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2509,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2480,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2478,\n              columnNumber: 19\n            }, this), carouselImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel-preview-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Carousel Preview \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"drag-hint\",\n                  children: \"(Drag to reorder)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2523,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2523,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"carousel-preview-grid\",\n                children: carouselImages.slice(0, carouselCount).map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `carousel-preview-item ${draggedIndex === index ? 'dragging' : ''}`,\n                  draggable: true,\n                  onDragStart: e => handleDragStart(e, index),\n                  onDragOver: handleDragOver,\n                  onDrop: e => handleDrop(e, index),\n                  onDragEnd: handleDragEnd,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: url,\n                    alt: `Carousel item ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2535,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"carousel-item-number\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2536,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"drag-handle\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"12\",\n                      height: \"12\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"9\",\n                        cy: \"12\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2539,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"9\",\n                        cy: \"5\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2540,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"9\",\n                        cy: \"19\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2541,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"15\",\n                        cy: \"12\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2542,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"15\",\n                        cy: \"5\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2543,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"15\",\n                        cy: \"19\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2544,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2538,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2537,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2526,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2524,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2522,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"publish-button\",\n              onClick: async () => {\n                if (!selectedAccount) {\n                  setMessage('Please select an Instagram account first.');\n                  return;\n                }\n                if (carouselImages.length < 3) {\n                  setMessage('Please add at least 3 images for carousel.');\n                  return;\n                }\n                if (!carouselCaption.trim() && !autoGenerateCaption) {\n                  setMessage('Please write a caption or enable auto-generate caption.');\n                  return;\n                }\n                if (autoGenerateCaption && !captionPrompt.trim()) {\n                  setMessage('Please provide a prompt for auto-generating caption.');\n                  return;\n                }\n                setLoading(true);\n                setMessage('Publishing carousel post...');\n                try {\n                  console.log('🔍 DEBUG: Carousel publish - selectedAccount:', selectedAccount);\n                  console.log('🔍 DEBUG: Carousel publish - carouselImages:', carouselImages);\n                  console.log('🔍 DEBUG: Carousel publish - carouselCount:', carouselCount);\n                  const finalCaption = autoGenerateCaption && captionPrompt.trim() ? await (async () => {\n                    const res = await apiClient.generateInstagramCaption(captionPrompt.trim());\n                    return res.content || carouselCaption || 'Check out this amazing carousel!';\n                  })() : carouselCaption;\n                  console.log('🔍 DEBUG: Carousel publish - finalCaption:', finalCaption);\n                  const response = await apiClient.postInstagramCarousel(selectedAccount.platform_user_id, finalCaption, carouselImages.slice(0, carouselCount));\n                  if (response.success) {\n                    setMessage('Carousel post published successfully!');\n                    setCarouselImages([]);\n                    setCarouselCaption('');\n                    setCaptionPrompt('');\n                    setAutoGenerateCaption(false);\n                    setAiPrompt('');\n                    loadUserMedia(selectedAccount.platform_user_id);\n                  } else {\n                    setMessage('Failed to publish carousel: ' + (response.error || 'Unknown error'));\n                  }\n                } catch (err) {\n                  setMessage('Error publishing carousel: ' + (err.message || err.toString()));\n                } finally {\n                  setLoading(false);\n                }\n              },\n              disabled: loading || carouselImages.length < 3 || !carouselCaption.trim() && !autoGenerateCaption,\n              children: loading ? 'Publishing...' : 'Publish Carousel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2553,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2325,\n            columnNumber: 17\n          }, this), postType === 'reel' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Reel Video (.mp4, .mov)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2621,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-input-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"video/mp4,video/quicktime,.mp4,.mov\",\n                  onChange: handleReelFileChange,\n                  disabled: reelUploading,\n                  id: \"reel-video-input\",\n                  style: {\n                    display: 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2623,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"reel-video-input\",\n                  className: \"file-picker-button\",\n                  style: {\n                    opacity: reelUploading ? 0.6 : 1,\n                    cursor: reelUploading ? 'not-allowed' : 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2637,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"7,10 12,15 17,10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2638,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"12\",\n                      y1: \"15\",\n                      x2: \"12\",\n                      y2: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2639,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2636,\n                    columnNumber: 7\n                  }, this), reelUploading ? 'Uploading...' : 'Choose Video File']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2631,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2622,\n                columnNumber: 3\n              }, this), reelUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-preview\",\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: reelUrl,\n                  controls: true,\n                  style: {\n                    width: '100%',\n                    maxHeight: '300px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2646,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2645,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2620,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Reel Thumbnail (optional):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2652,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-input-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/png,image/jpeg,image/jpg\",\n                  onChange: handleReelThumbnailChange,\n                  disabled: !reelUrl,\n                  id: \"reel-thumbnail-input\",\n                  style: {\n                    display: 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2654,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"reel-thumbnail-input\",\n                  className: \"file-picker-button\",\n                  style: {\n                    opacity: !reelUrl ? 0.6 : 1,\n                    cursor: !reelUrl ? 'not-allowed' : 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                      x: \"3\",\n                      y: \"3\",\n                      width: \"18\",\n                      height: \"18\",\n                      rx: \"2\",\n                      ry: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2668,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"8.5\",\n                      cy: \"8.5\",\n                      r: \"1.5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2669,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"21,15 16,10 5,21\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2670,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2667,\n                    columnNumber: 7\n                  }, this), \"Choose Thumbnail\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2662,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2653,\n                columnNumber: 3\n              }, this), reelThumbnailUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 8,\n                  marginTop: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: reelThumbnailUrl,\n                  alt: \"Reel Thumbnail Preview\",\n                  style: {\n                    maxWidth: 120,\n                    borderRadius: 8,\n                    border: '1px solid #eee'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2677,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    setReelThumbnailUrl('');\n                    setReelThumbnailFilename('');\n                    setReelThumbnailFile(null);\n                  },\n                  style: {\n                    background: 'transparent',\n                    border: '1px solid #e53e3e',\n                    cursor: 'pointer',\n                    color: '#e53e3e',\n                    fontSize: 18,\n                    borderRadius: '4px',\n                    width: '28px',\n                    height: '28px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  },\n                  title: \"Remove thumbnail\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2682,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2676,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2651,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Caption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2710,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-toggle\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"toggle-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: reelAutoGenerateCaption,\n                      onChange: e => setReelAutoGenerateCaption(e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2714,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"toggle-text\",\n                      children: \"Auto Generate Caption\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2719,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2713,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2712,\n                  columnNumber: 23\n                }, this), reelAutoGenerateCaption ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-prompt-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: reelCaptionPrompt,\n                    onChange: e => setReelCaptionPrompt(e.target.value),\n                    placeholder: \"Describe what you want in the caption...\",\n                    rows: 2,\n                    className: \"caption-prompt-textarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2724,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleReelAutoGenerateCaption,\n                    disabled: generatingReelCaption || !reelCaptionPrompt.trim(),\n                    className: \"generate-caption-button\",\n                    children: generatingReelCaption ? 'Generating...' : 'Generate Caption'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2731,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2723,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: reelCaption,\n                  onChange: e => setReelCaption(e.target.value),\n                  placeholder: reelAutoGenerateCaption ? \"Caption will be generated...\" : \"Write your caption...\",\n                  rows: 3,\n                  className: \"post-textarea\",\n                  disabled: reelAutoGenerateCaption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2740,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2711,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2709,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"publish-button\",\n              onClick: handlePublish,\n              disabled: loading || !reelUrl || !reelCaption.trim() && !reelAutoGenerateCaption,\n              children: loading ? 'Publishing...' : 'Publish Reel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2750,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2619,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2118,\n          columnNumber: 13\n        }, this), activeTab === 'media' && selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Recent Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2757,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your latest Instagram content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2757,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2757,\n            columnNumber: 15\n          }, this), loadingMedia ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-media\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading media...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 101\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2758,\n            columnNumber: 31\n          }, this) : userMedia.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-grid\",\n            children: userMedia.slice(0, 12).map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-content\",\n                children: media.media_type === 'IMAGE' ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: media.media_url,\n                  alt: \"Instagram post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2758,\n                  columnNumber: 329\n                }, this) : media.media_type === 'VIDEO' ? /*#__PURE__*/_jsxDEV(\"video\", {\n                  controls: true,\n                  children: /*#__PURE__*/_jsxDEV(\"source\", {\n                    src: media.media_url,\n                    type: \"video/mp4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2758,\n                    columnNumber: 429\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2758,\n                  columnNumber: 413\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2758,\n                columnNumber: 266\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"media-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"media-caption\",\n                    children: media.caption ? media.caption.substring(0, 100) + '...' : 'No caption'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2758,\n                    columnNumber: 559\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"media-date\",\n                    children: new Date(media.timestamp).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2758,\n                    columnNumber: 664\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2758,\n                  columnNumber: 531\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2758,\n                columnNumber: 500\n              }, this)]\n            }, media.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 223\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2758,\n            columnNumber: 156\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-media\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No Media Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 797\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No media found for this account. Start creating posts to see them here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 820\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2758,\n            columnNumber: 771\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2756,\n          columnNumber: 13\n        }, this), activeTab === 'bulk-composer' && selectedAccount && /*#__PURE__*/_jsxDEV(IgBulkComposer, {\n          selectedAccount: selectedAccount,\n          onClose: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2762,\n          columnNumber: 13\n        }, this), activeTab === 'scheduled-posts' && /*#__PURE__*/_jsxDEV(ScheduledPostHistory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2765,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2076,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2029,\n      columnNumber: 7\n    }, this), showDriveModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowDriveModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select from Google Drive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2775,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowDriveModal(false),\n            className: \"modal-close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2776,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2774,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: !driveAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drive-auth\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Connect to Google Drive to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2781,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: authenticateGoogleDrive,\n              disabled: driveAuthLoading,\n              className: \"auth-button\",\n              children: driveAuthLoading ? 'Connecting...' : 'Connect Google Drive'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2782,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2780,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drive-files\",\n            children: loadingDriveFiles ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-files\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2790,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading files...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2791,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2789,\n              columnNumber: 21\n            }, this) : driveFiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"files-grid\",\n              children: driveFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-item\",\n                onClick: () => handleDriveFileSelect(file.id, file.name),\n                children: [file.thumbnailLink ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: file.thumbnailLink,\n                  alt: file.name,\n                  className: \"file-thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2798,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2800,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"file-name\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2803,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"file-size\",\n                    children: file.size ? `${Math.round(file.size / 1024)} KB` : 'Unknown size'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2804,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2802,\n                  columnNumber: 27\n                }, this)]\n              }, file.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2796,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2794,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-files\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No image files found in Google Drive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2811,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2810,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2787,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2778,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2773,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2772,\n      columnNumber: 9\n    }, this), showFilePicker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: closeFilePicker,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Select \", filePickerType === 'photo' ? 'Photo' : 'Video']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2826,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeFilePicker,\n            className: \"modal-close\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"18\",\n                y1: \"6\",\n                x2: \"6\",\n                y2: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2829,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"6\",\n                y1: \"6\",\n                x2: \"18\",\n                y2: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2830,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2828,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2827,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2825,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-picker-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-option\",\n              onClick: () => document.getElementById('local-file-input').click(),\n              onTouchStart: e => e.preventDefault(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"32\",\n                  height: \"32\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2843,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"7,10 12,15 17,10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2844,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"15\",\n                    x2: \"12\",\n                    y2: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2845,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2842,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2841,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"From Device\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2849,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select a file from your computer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2850,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2848,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2836,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `file-option ${!googleDriveAvailable ? 'disabled' : ''}`,\n              onClick: handleGoogleDriveSelect,\n              onTouchStart: e => {\n                if (!googleDriveAvailable) {\n                  e.preventDefault();\n                  return;\n                }\n                e.preventDefault();\n                handleGoogleDriveSelect();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"32\",\n                  height: \"32\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2868,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2867,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2866,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"From Google Drive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2872,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: googleDriveAvailable ? 'Select a file from your Google Drive' : 'Google Drive not configured. See setup guide.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2873,\n                  columnNumber: 21\n                }, this), isLoadingGoogleDrive && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 12a9 9 0 11-6.219-8.56\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2882,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2881,\n                    columnNumber: 25\n                  }, this), \"Loading...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2880,\n                  columnNumber: 23\n                }, this), !googleDriveAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unavailable-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2890,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"15\",\n                      y1: \"9\",\n                      x2: \"9\",\n                      y2: \"15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2891,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"9\",\n                      y1: \"9\",\n                      x2: \"15\",\n                      y2: \"15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2892,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2889,\n                    columnNumber: 25\n                  }, this), \"Not Available\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2888,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2871,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2854,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2835,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"local-file-input\",\n            type: \"file\",\n            accept: filePickerType === 'photo' ? 'image/*' : 'video/*',\n            multiple: filePickerFormType === 'carousel',\n            onChange: handleLocalFileSelect,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2902,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2834,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2824,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2823,\n      columnNumber: 9\n    }, this), globalAutoReplyEnabled && globalAutoReplyProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-reply-progress\",\n      style: {\n        margin: '16px 0',\n        padding: '12px',\n        background: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Auto-Reply Progress:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2917,\n          columnNumber: 14\n        }, this), \" \", globalAutoReplyProgress.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2917,\n        columnNumber: 11\n      }, this), globalAutoReplyProgress.status === 'processing' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processing post \", globalAutoReplyProgress.current_post, \" of \", globalAutoReplyProgress.total_posts, \", comment \", globalAutoReplyProgress.current_comment, \" of \", globalAutoReplyProgress.total_comments]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2919,\n        columnNumber: 13\n      }, this), globalAutoReplyProgress.status === 'done' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All comments processed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2921,\n        columnNumber: 57\n      }, this), globalAutoReplyProgress.details && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: globalAutoReplyProgress.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2922,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2916,\n      columnNumber: 9\n    }, this), apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      style: {\n        color: 'red',\n        margin: '12px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", apiError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2927,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setApiError(null);\n          setRetrying(true);\n          setTimeout(() => {\n            setRetrying(false);\n            window.location.reload();\n          }, 500);\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2928,\n        columnNumber: 11\n      }, this), retrying && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Retrying...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2929,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2926,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1921,\n    columnNumber: 5\n  }, this);\n};\n_s(InstagramPage, \"LbYg2hxzX3v3InqBQUaNgXNfDBU=\", false, function () {\n  return [useNavigate, useLocation, useAuth, useNotifications];\n});\n_c = InstagramPage;\nexport default InstagramPage;\nvar _c;\n$RefreshReg$(_c, \"InstagramPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","apiClient","useAuth","useNotifications","IgBulkComposer","ScheduledPostHistory","loadFacebookSDK","jsxDEV","_jsxDEV","Fragment","_Fragment","ACCEPTED_IMAGE_TYPES","ACCEPTED_VIDEO_TYPES","InstagramPage","_s","navigate","location","isAuthenticated","loading","authLoading","user","addNotification","testNotification","testWebSocketConnection","testApiConnection","testSimpleWebSocket","refreshNotifications","isConnected","setIsConnected","instagramAccounts","setInstagramAccounts","selectedAccount","setSelectedAccount","activeTab","setActiveTab","sdkLoaded","setSdkLoaded","fbAccessToken","setFbAccessToken","message","setMessage","setLoading","postType","setPostType","caption","setCaption","aiPrompt","setAiPrompt","aiGenerating","setAiGenerating","aiImageUrl","setAiImageUrl","imageSource","setImageSource","uploadedImageUrl","setUploadedImageUrl","uploadingImage","setUploadingImage","selectedImageFile","setSelectedImageFile","autoGenerateCaption","setAutoGenerateCaption","captionPrompt","setCaptionPrompt","generatingCaption","setGeneratingCaption","rateLimitCooldown","setRateLimitCooldown","strategyData","setStrategyData","promptTemplate","brandName","hookIdea","features","phone","website","callToAction","imagePrompt","customStrategyTemplate","showStrategyModal","setShowStrategyModal","strategyTemplates","setStrategyTemplates","id","name","prompt","carouselImages","setCarouselImages","carouselFiles","setCarouselFiles","carouselCount","setCarouselCount","carouselCaption","setCarouselCaption","carouselGenerating","setCarouselGenerating","draggedIndex","setDraggedIndex","reelFile","setReelFile","reelUrl","setReelUrl","reelFilename","setReelFilename","reelCaption","setReelCaption","reelUploading","setReelUploading","reelAutoGenerateCaption","setReelAutoGenerateCaption","reelCaptionPrompt","setReelCaptionPrompt","generatingReelCaption","setGeneratingReelCaption","reelThumbnailFile","setReelThumbnailFile","reelThumbnailUrl","setReelThumbnailUrl","reelThumbnailFilename","setReelThumbnailFilename","userMedia","setUserMedia","loadingMedia","setLoadingMedia","showDriveModal","setShowDriveModal","driveFiles","setDriveFiles","loadingDriveFiles","setLoadingDriveFiles","driveAuthenticated","setDriveAuthenticated","driveAuthLoading","setDriveAuthLoading","autoReplyEnabled","setAutoReplyEnabled","autoReplyTemplate","setAutoReplyTemplate","autoReplyPosts","setAutoReplyPosts","selectedAutoReplyPosts","setSelectedAutoReplyPosts","autoReplyLoading","setAutoReplyLoading","loadingAutoReplyPosts","setLoadingAutoReplyPosts","isSelectingPosts","setIsSelectingPosts","dmAutoReplyEnabled","setDmAutoReplyEnabled","dmAutoReplyTemplate","setDmAutoReplyTemplate","dmAutoReplyLoading","setDmAutoReplyLoading","showFilePicker","setShowFilePicker","filePickerType","setFilePickerType","filePickerFormType","setFilePickerFormType","isLoadingGoogleDrive","setIsLoadingGoogleDrive","googleDriveAvailable","setGoogleDriveAvailable","showBulkComposer","setShowBulkComposer","INSTAGRAM_APP_ID","process","env","REACT_APP_INSTAGRAM_APP_ID","isMobile","window","innerWidth","globalAutoReplyEnabled","setGlobalAutoReplyEnabled","globalAutoReplyLoading","setGlobalAutoReplyLoading","globalAutoReplyStatus","setGlobalAutoReplyStatus","globalAutoReplyProgress","setGlobalAutoReplyProgress","apiError","setApiError","retrying","setRetrying","toast","setToast","show","type","showToast","setTimeout","handleGlobalAutoReplyToggle","enableRes","enableGlobalInstagramAutoReply","platform_user_id","success","error","disableRes","disableGlobalInstagramAutoReply","err","JSON","stringify","toString","fetchGlobalAutoReplyStatus","statusRes","getGlobalInstagramAutoReplyStatus","enabled","intervalId","pollProgress","res","getGlobalInstagramAutoReplyProgress","progress","setInterval","clearInterval","checkLoginStatus","FB","getLoginStatus","response","status","authResponse","accessToken","handleConnectInstagram","initializeFacebookSDK","init","appId","cookie","xfbml","version","fbAsyncInit","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","REACT_APP_FACEBOOK_APP_ID","then","checkGoogleDriveAvailability","token","localStorage","getItem","setToken","console","log","getInstagramAccounts","accounts","catch","includes","connectInstagram","allAccounts","getSocialAccounts","instagramAccountsFromBackend","filter","acc","platform","mappedAccounts","map","account","username","display_name","page_name","followers_count","follower_count","media_count","profile_picture_url","length","loadUserMedia","handleFacebookLogin","login","scope","instagramUserId","_media$data","media","getInstagramMedia","data","handleImageChange","e","file","target","files","uploadImageToCloudinary","url","Error","handleGenerateAIImage","trim","generateInstagramImage","image_url","dimensions","width","height","enhanced_prompt","errorMessage","cooldownInterval","prev","handleAutoGenerateCaption","generateInstagramCaption","content","handleGenerateImageAndCaption","imageRes","captionRes","warn","handleRetryImageGeneration","handleCarouselFilesChange","Array","from","urls","push","handleDragStart","index","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","dropIndex","newImages","draggedImage","splice","handleDragEnd","handleCarouselAutoGenerateCaption","result","handleReelFileChange","_res$data","uploadVideoToCloudinary","_res$data2","_res$data3","videoUrl","filename","handleReelAutoGenerateCaption","handleReelThumbnailChange","_res$data4","uploadThumbnailToCloudinary","_res$data5","_res$data6","imageUrl","checkGoogleDriveAuth","getGoogleDriveStatus","authenticated","authenticateGoogleDrive","getGoogleDriveAuthorizeUrl","consent_url","popup","open","handleMessage","event","loadDriveFiles","removeEventListener","close","addEventListener","already_authenticated","getGoogleDriveFiles","handleDriveFileSelect","fileId","fileName","downloadGoogleDriveFile","fileContent","byteCharacters","atob","byteNumbers","i","charCodeAt","byteArray","Uint8Array","blob","Blob","mimeType","File","uploadResponse","openDriveModal","isAuth","openFilePicker","formType","closeFilePicker","handleLocalFileSelect","handleGoogleDriveSelect","openDriveAuthPopup","finalStatus","loadGoogleDriveAPI","google","picker","authResult","getGoogleDriveAuth","PickerBuilder","addView","DocsView","setIncludeFolders","setSelectFolderEnabled","setMimeTypes","setOAuthToken","access_token","setDeveloperKey","REACT_APP_GOOGLE_DEVELOPER_KEY","setCallback","handleGoogleDriveCallback","enableFeature","Feature","NAV_HIDDEN","MULTISELECT_ENABLED","setTitle","setSelectableMimeTypes","build","setVisible","Promise","resolve","reject","script","onload","gapi","load","onerror","head","appendChild","authUrl","messageHandler","action","Action","PICKED","docs","fileObjects","fileObj","handlePublish","strategyName","timestamp","Date","toISOString","options","instagram_user_id","post_type","media_type","finalImageUrl","postInstagramCarousel","startsWith","video_url","video_filename","is_reel","thumbnail_url","thumbnail_filename","media_file","media_filename","hasThumbnailUrl","hasThumbnailFilename","cleanOptions","Object","fromEntries","entries","key","value","undefined","originalPostType","originalOptions","cleanOptionsHasThumbnail","createUnifiedInstagramPost","updatedAccount","find","errorMsg","details","handleLogout","loadAutoReplySettings","rules","getAutomationRules","existingRule","rule","social_account_id","rule_type","_existingRule$actions","is_active","actions","template","loadPostsForAutoReply","_error$response","_error$response$data","detail","loadDmAutoReplySettings","statusResponse","getInstagramDmAutoReplyStatus","handleDmAutoReplyToggle","toggleInstagramDmAutoReply","getPosts","isArray","accountPosts","post","_post$social_account","_post$social_account2","_post$social_account3","_post$social_account4","_post$social_account5","_post$social_account6","matchesAccountId","social_account","matchesPlatformUserId","matchesUsername","isMatch","postId","postAccountId","postPlatformUserId","postUsername","selectedAccountId","selectedPlatformUserId","selectedUsername","_post$content","_post$social_account7","_post$social_account8","_post$social_account9","substring","syncResponse","syncInstagramPosts","refreshedResponse","refreshedAccountPosts","_post$social_account0","_post$social_account1","_post$social_account10","syncError","handlePostSelection","handlePostTouch","selectAllPosts","allPostIds","deselectAllPosts","handleSelectPosts","handleDoneSelecting","handleAutoReplyToggle","postCount","confirmMessage","confirm","toggleInstagramAutoReply","_response$data","_response$data2","_response$data3","successMessage","selected_posts_count","selectedPostsCount","validateAutoReplyState","socialAccounts","instagramAccount","scheduledGridRows","setScheduledGridRows","state","fetchScheduledPosts","posts","getScheduledPosts","className","children","_jsxFileName","lineNumber","columnNumber","onClick","style","viewBox","fill","xmlns","x","y","rx","ry","stroke","strokeWidth","x1","y1","x2","y2","display","alignItems","justifyContent","background","borderRadius","boxShadow","padding","marginBottom","border","flexWrap","gap","overflow","alt","objectFit","fontWeight","fontSize","color","marginTop","marginRight","disabled","cursor","transition","verticalAlign","marginLeft","borderTop","animation","cx","cy","r","points","onChange","placeholder","rows","Math","floor","padStart","checked","min","max","parseInt","generateInstagramCarousel","image_urls","slice","draggable","onDragStart","onDragOver","onDrop","onDragEnd","finalCaption","accept","htmlFor","opacity","controls","maxHeight","maxWidth","title","media_url","toLocaleDateString","onClose","stopPropagation","thumbnailLink","size","round","click","onTouchStart","multiple","margin","current_post","total_posts","current_comment","total_comments","reload","_c","$RefreshReg$"],"sources":["C:/Users/THORSIGNIA/Projects/automation-dash/frontend/src/components/InstagramPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport apiClient from '../services/apiClient';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNotifications } from '../contexts/NotificationContext';\nimport IgBulkComposer from './igBulkComposer';\nimport './InstagramPage.css';\nimport ScheduledPostHistory from './ScheduledPostHistory';\nimport { loadFacebookSDK } from './FacebookUtils';\n\nconst ACCEPTED_IMAGE_TYPES = ['image/png', 'image/jpeg', 'image/jpg'];\nconst ACCEPTED_VIDEO_TYPES = ['video/mp4', 'video/quicktime'];\n\nconst InstagramPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { isAuthenticated, loading: authLoading, user } = useAuth();\n  const { addNotification, testNotification, testWebSocketConnection, testApiConnection, testSimpleWebSocket, refreshNotifications } = useNotifications();\n\n  // UI State\n  const [isConnected, setIsConnected] = useState(false);\n  const [instagramAccounts, setInstagramAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState('');\n  const [activeTab, setActiveTab] = useState('connect');\n  const [sdkLoaded, setSdkLoaded] = useState(false);\n  const [fbAccessToken, setFbAccessToken] = useState(null);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Post State\n  const [postType, setPostType] = useState('photo'); // photo | carousel | reel\n  const [caption, setCaption] = useState('');\n  const [aiPrompt, setAiPrompt] = useState('');\n  const [aiGenerating, setAiGenerating] = useState(false);\n  const [aiImageUrl, setAiImageUrl] = useState('');\n  const [imageSource, setImageSource] = useState('ai'); // ai | upload | drive\n  const [uploadedImageUrl, setUploadedImageUrl] = useState('');\n  const [uploadingImage, setUploadingImage] = useState(false);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [autoGenerateCaption, setAutoGenerateCaption] = useState(false);\n  const [captionPrompt, setCaptionPrompt] = useState('');\n  const [generatingCaption, setGeneratingCaption] = useState(false);\n  const [rateLimitCooldown, setRateLimitCooldown] = useState(0);\n\n  // Strategy Template State\n  const [strategyData, setStrategyData] = useState({\n    promptTemplate: '',\n    brandName: '',\n    hookIdea: '',\n    features: '',\n    location: '',\n    phone: '',\n    website: '',\n    callToAction: '',\n    imagePrompt: '',\n    customStrategyTemplate: ''\n  });\n\n  const [showStrategyModal, setShowStrategyModal] = useState(false);\n  const [strategyTemplates, setStrategyTemplates] = useState([\n    { id: 'default', name: 'Default Template', prompt: 'Generate a catchy Instagram caption for this post.' },\n    { id: 'product', name: 'Product Showcase', prompt: 'Create an engaging caption highlighting the key features and benefits of this product.' },\n    { id: 'event', name: 'Event Promotion', prompt: 'Write an exciting caption to promote this event, including date, time, and location.' },\n    { id: 'custom', name: 'Custom Template', prompt: '' }\n  ]);\n\n  // Carousel State\n  const [carouselImages, setCarouselImages] = useState([]); // URLs\n  const [carouselFiles, setCarouselFiles] = useState([]); // File objects\n  const [carouselCount, setCarouselCount] = useState(3);\n  const [carouselCaption, setCarouselCaption] = useState('');\n  const [carouselGenerating, setCarouselGenerating] = useState(false);\n  const [draggedIndex, setDraggedIndex] = useState(null);\n\n  // Reel State\n  const [reelFile, setReelFile] = useState(null);\n  const [reelUrl, setReelUrl] = useState('');\n  const [reelFilename, setReelFilename] = useState('');\n  const [reelCaption, setReelCaption] = useState('');\n  const [reelUploading, setReelUploading] = useState(false);\n  const [reelAutoGenerateCaption, setReelAutoGenerateCaption] = useState(false);\n  const [reelCaptionPrompt, setReelCaptionPrompt] = useState('');\n  const [generatingReelCaption, setGeneratingReelCaption] = useState(false);\n  // Thumbnail State for Reel\n  const [reelThumbnailFile, setReelThumbnailFile] = useState(null);\n  const [reelThumbnailUrl, setReelThumbnailUrl] = useState('');\n  const [reelThumbnailFilename, setReelThumbnailFilename] = useState('');\n\n  // Media Gallery\n  const [userMedia, setUserMedia] = useState([]);\n  const [loadingMedia, setLoadingMedia] = useState(false);\n\n  // Google Drive Integration\n  const [showDriveModal, setShowDriveModal] = useState(false);\n  const [driveFiles, setDriveFiles] = useState([]);\n  const [loadingDriveFiles, setLoadingDriveFiles] = useState(false);\n  const [driveAuthenticated, setDriveAuthenticated] = useState(false);\n  const [driveAuthLoading, setDriveAuthLoading] = useState(false);\n\n  // Auto-Reply State\n  const [autoReplyEnabled, setAutoReplyEnabled] = useState(false);\n  const [autoReplyTemplate, setAutoReplyTemplate] = useState('Thank you for your comment! We appreciate your engagement. 😊');\n  const [autoReplyPosts, setAutoReplyPosts] = useState([]);\n  const [selectedAutoReplyPosts, setSelectedAutoReplyPosts] = useState([]);\n  const [autoReplyLoading, setAutoReplyLoading] = useState(false);\n  const [loadingAutoReplyPosts, setLoadingAutoReplyPosts] = useState(false);\n  const [isSelectingPosts, setIsSelectingPosts] = useState(false);\n\n  // DM Auto-Reply State\n  const [dmAutoReplyEnabled, setDmAutoReplyEnabled] = useState(false);\n  const [dmAutoReplyTemplate, setDmAutoReplyTemplate] = useState('Thanks for your message! I\\'ll get back to you soon. 😊');\n  const [dmAutoReplyLoading, setDmAutoReplyLoading] = useState(false);\n\n  // File Picker Modal State\n  const [showFilePicker, setShowFilePicker] = useState(false);\n  const [filePickerType, setFilePickerType] = useState(''); // 'photo' or 'video'\n  const [filePickerFormType, setFilePickerFormType] = useState(''); // 'manual' or 'carousel'\n  const [isLoadingGoogleDrive, setIsLoadingGoogleDrive] = useState(false);\n  const [googleDriveAvailable, setGoogleDriveAvailable] = useState(false);\n\n  // Bulk Composer State\n  const [showBulkComposer, setShowBulkComposer] = useState(false);\n\n  // Facebook SDK\n  const INSTAGRAM_APP_ID = process.env.REACT_APP_INSTAGRAM_APP_ID || '24054495060908418';\n\n  // Mobile detection utility\n  const isMobile = () => window.innerWidth <= 768;\n\n  // --- New: Global Auto-Reply State ---\n  const [globalAutoReplyEnabled, setGlobalAutoReplyEnabled] = useState(false);\n  const [globalAutoReplyLoading, setGlobalAutoReplyLoading] = useState(false);\n  const [globalAutoReplyStatus, setGlobalAutoReplyStatus] = useState(''); // For toast/feedback\n\n  // --- New: Global Auto-Reply Progress State ---\n  const [globalAutoReplyProgress, setGlobalAutoReplyProgress] = useState(null);\n\n  // --- New: Global Auto-Reply Error and Retry State ---\n  const [apiError, setApiError] = useState(null);\n  const [retrying, setRetrying] = useState(false);\n\n  // --- New: Toast Notification ---\n  const [toast, setToast] = useState({ show: false, message: '', type: 'info' });\n  const showToast = (message, type = 'info') => {\n    setToast({ show: true, message, type });\n    setTimeout(() => setToast({ show: false, message: '', type: 'info' }), 3500);\n  };\n\n  // --- New: Global Auto-Reply API Logic ---\n  const handleGlobalAutoReplyToggle = async () => {\n    if (!selectedAccount) {\n      showToast('Please select an Instagram account first.', 'error');\n      return;\n    }\n    setGlobalAutoReplyLoading(true);\n    setApiError(null);\n    try {\n      if (!globalAutoReplyEnabled) {\n        const enableRes = await apiClient.enableGlobalInstagramAutoReply(selectedAccount.platform_user_id);\n        if (enableRes.success) {\n          setGlobalAutoReplyEnabled(true);\n          // eslint-disable-next-line no-undef\n          setGlobalAutoReplyStatus('enabled');\n          showToast('Auto-reply enabled for all posts and comments!', 'success');\n        } else {\n          setApiError(enableRes.error || 'Failed to enable auto-reply.');\n          showToast('Failed to enable auto-reply: ' + (enableRes.error || 'Unknown error'), 'error');\n        }\n      } else {\n        const disableRes = await apiClient.disableGlobalInstagramAutoReply(selectedAccount.platform_user_id);\n        if (disableRes.success) {\n          setGlobalAutoReplyEnabled(false);\n          // eslint-disable-next-line no-undef\n          setGlobalAutoReplyStatus('disabled');\n          showToast('Auto-reply disabled.', 'info');\n        } else {\n          setApiError(disableRes.error || 'Failed to disable auto-reply.');\n          showToast('Failed to disable auto-reply: ' + (disableRes.error || 'Unknown error'), 'error');\n        }\n      }\n    } catch (err) {\n      setApiError(err.message || JSON.stringify(err));\n      showToast('Error: ' + (err.message || err.toString()), 'error');\n    } finally {\n      setGlobalAutoReplyLoading(false);\n    }\n  };\n\n  // --- New: Fetch initial global auto-reply status on account select ---\n  useEffect(() => {\n    const fetchGlobalAutoReplyStatus = async () => {\n      if (!selectedAccount) return;\n      try {\n        const statusRes = await apiClient.getGlobalInstagramAutoReplyStatus(selectedAccount.platform_user_id);\n        setGlobalAutoReplyEnabled(!!statusRes.enabled);\n        // eslint-disable-next-line no-undef\n        setGlobalAutoReplyStatus(statusRes.enabled ? 'enabled' : 'disabled');\n      } catch (err) {\n        setGlobalAutoReplyEnabled(false);\n        // eslint-disable-next-line no-undef\n        setGlobalAutoReplyStatus('disabled');\n      }\n    };\n    fetchGlobalAutoReplyStatus();\n  }, [selectedAccount]);\n\n  // --- New: Poll for global auto-reply progress when enabled ---\n  useEffect(() => {\n    let intervalId;\n    const pollProgress = async () => {\n      if (!selectedAccount || !globalAutoReplyEnabled) return;\n      try {\n        const res = await apiClient.getGlobalInstagramAutoReplyProgress(selectedAccount.platform_user_id);\n        if (res.success) {\n          setGlobalAutoReplyProgress(res.progress);\n          setApiError(null);\n        }\n      } catch (err) {\n        setApiError(err.message || JSON.stringify(err));\n        // Optionally, showToast('Progress error: ' + (err.message || err.toString()), 'error');\n      }\n    };\n    if (globalAutoReplyEnabled && selectedAccount) {\n      pollProgress();\n      intervalId = setInterval(pollProgress, 3000);\n    } else {\n      setGlobalAutoReplyProgress(null);\n    }\n    return () => intervalId && clearInterval(intervalId);\n  }, [globalAutoReplyEnabled, selectedAccount]);\n\n  // --- Facebook SDK Helpers ---\n  const checkLoginStatus = () => {\n    if (!window.FB || !isAuthenticated) return;\n    window.FB.getLoginStatus((response) => {\n      if (response.status === 'connected') {\n        setFbAccessToken(response.authResponse.accessToken);\n        setMessage('Instagram: Using existing Facebook login session');\n        handleConnectInstagram(response.authResponse.accessToken);\n      } else {\n        setMessage('Instagram: Please connect your Facebook account to continue');\n      }\n    });\n  };\n  const initializeFacebookSDK = () => {\n    if (window.FB) {\n      window.FB.init({ appId: INSTAGRAM_APP_ID, cookie: true, xfbml: true, version: 'v18.0' });\n      setSdkLoaded(true);\n      checkLoginStatus();\n      return;\n    }\n    window.fbAsyncInit = function () {\n      window.FB.init({ appId: INSTAGRAM_APP_ID, cookie: true, xfbml: true, version: 'v18.0' });\n      setSdkLoaded(true);\n      checkLoginStatus();\n    };\n    (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'facebook-jssdk'));\n  };\n\n  useEffect(() => {\n    if (isAuthenticated && !authLoading) {\n      loadFacebookSDK(process.env.REACT_APP_FACEBOOK_APP_ID || '697225659875731').then(() => {\n        checkLoginStatus();\n        checkGoogleDriveAvailability();\n      });\n    }\n  }, [isAuthenticated, authLoading]);\n\n  useEffect(() => {\n    checkLoginStatus();\n    initializeFacebookSDK();\n    // eslint-disable-next-line\n  }, [INSTAGRAM_APP_ID, isAuthenticated]);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      setInstagramAccounts([]); // Clear previous state\n      setSelectedAccount('');\n      setIsConnected(false);\n      setActiveTab('connect');\n      setMessage('');\n\n      // Ensure token is set before making request\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        apiClient.setToken(token);\n        console.log('🔍 DEBUG: Token set for Instagram accounts request');\n      } else {\n        console.error('🔍 DEBUG: No auth token found in localStorage');\n        setMessage('Authentication token not found. Please log in again.');\n        return;\n      }\n\n      // Fetch new user's Instagram accounts\n      apiClient.getInstagramAccounts()\n        .then(accounts => {\n          console.log('🔍 DEBUG: Successfully fetched Instagram accounts:', accounts);\n          setInstagramAccounts(accounts);\n        })\n        .catch(error => {\n          console.error('🔍 DEBUG: Error fetching Instagram accounts:', error);\n          if (error.message.includes('Could not validate credentials')) {\n            setMessage('Your session has expired. Please log in again.');\n          } else if (error.message.includes('Failed to fetch')) {\n            setMessage('Unable to connect to server. Please check if the backend is running and try again.');\n          } else {\n            setMessage(`Error loading Instagram accounts: ${error.message}`);\n          }\n        });\n    }\n  }, [isAuthenticated]);\n\n  // --- Instagram Connect ---\n  const handleConnectInstagram = async (accessToken = fbAccessToken) => {\n    if (!isAuthenticated) {\n      setMessage('Please log in to your account first before connecting Instagram.');\n      setLoading(false);\n      return;\n    }\n    if (!accessToken) {\n      setMessage('No access token available. Please log in with Facebook first.');\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      setMessage('Fetching Instagram Business accounts...');\n      const response = await apiClient.connectInstagram(accessToken);\n\n      // Fetch the full list of social accounts from the backend\n      const allAccounts = await apiClient.getSocialAccounts();\n      // Filter for Instagram accounts\n      const instagramAccountsFromBackend = allAccounts.filter(acc => acc.platform === 'instagram');\n\n      // Map and merge info for display\n      const mappedAccounts = instagramAccountsFromBackend.map(account => ({\n        id: account.id, // Internal DB ID\n        platform_user_id: account.platform_user_id, // Instagram user ID\n        username: account.username,\n        name: account.display_name || account.page_name,\n        followers_count: account.follower_count || 0,\n        media_count: account.media_count || 0,\n        profile_picture_url: account.profile_picture_url\n      }));\n\n      setInstagramAccounts(mappedAccounts);\n      setIsConnected(true);\n      setMessage(`Found ${mappedAccounts.length} Instagram Business account(s)!`);\n      if (mappedAccounts.length === 1) {\n        setSelectedAccount(mappedAccounts[0]);\n        loadUserMedia(mappedAccounts[0].platform_user_id);\n      }\n    } catch (error) {\n      setMessage(error.message || 'Unknown error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFacebookLogin = () => {\n    if (!window.FB) {\n      setMessage('Facebook SDK not loaded');\n      return;\n    }\n    setLoading(true);\n    setMessage('Initiating Instagram OAuth via Facebook...');\n    window.FB.login((response) => {\n      if (response.status === 'connected') {\n        const accessToken = response.authResponse.accessToken;\n        setFbAccessToken(accessToken);\n        setMessage('Facebook login successful! Connecting Instagram accounts...');\n        handleConnectInstagram(accessToken);\n      } else {\n        setMessage('Facebook login failed or was cancelled');\n        setLoading(false);\n      }\n    }, {\n      scope: 'pages_show_list,instagram_basic,instagram_content_publish,pages_read_engagement, business_management'\n    });\n  };\n\n  // --- Media Loading ---\n  const loadUserMedia = async (instagramUserId) => {\n    setLoadingMedia(true);\n    try {\n      const media = await apiClient.getInstagramMedia(instagramUserId);\n      setUserMedia(media?.data?.media || []);\n    } catch (error) {\n      setMessage(`Error loading media: ${error.message}`);\n    } finally {\n      setLoadingMedia(false);\n    }\n  };\n\n  // --- Image Upload ---\n  const handleImageChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n      setMessage('Please select a PNG or JPG image');\n      return;\n    }\n\n    // Debug authentication status\n    console.log('🔍 DEBUG: Authentication check before upload');\n    console.log('🔍 DEBUG: isAuthenticated:', isAuthenticated);\n    console.log('🔍 DEBUG: user:', user);\n    console.log('🔍 DEBUG: apiClient token exists:', !!apiClient.token);\n\n    setUploadingImage(true);\n    setMessage('Uploading image...');\n    try {\n      const res = await apiClient.uploadImageToCloudinary(file);\n      if (res && res.success && res.data && res.data.url) {\n        setUploadedImageUrl(res.data.url);\n        setAiImageUrl(res.data.url);\n        setSelectedImageFile(file);\n        setMessage('Image uploaded successfully!');\n      } else {\n        throw new Error(res?.error || 'Upload failed');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Upload error details:', err);\n      setMessage(`Image upload failed: ${err.message}`);\n    } finally {\n      setUploadingImage(false);\n    }\n  };\n\n  // --- AI Image Generation ---\n  const handleGenerateAIImage = async () => {\n    if (!aiPrompt.trim()) {\n      setMessage('Please enter a prompt for image generation.');\n      return;\n    }\n\n    setAiGenerating(true);\n    setMessage('Generating Instagram-optimized image with AI...');\n\n    try {\n      console.log('🔍 DEBUG: Generating Instagram image with prompt:', aiPrompt.trim());\n\n      const res = await apiClient.generateInstagramImage(aiPrompt.trim());\n      console.log('🔍 DEBUG: Image generation response:', res);\n\n      if (res && res.success && res.data && res.data.image_url) {\n        setAiImageUrl(res.data.image_url);\n        const dimensions = res.data.width && res.data.height ? `(${res.data.width}x${res.data.height})` : '';\n        setMessage(`AI image generated successfully! ${dimensions}`);\n        console.log('🔍 DEBUG: Generated image URL:', res.data.image_url);\n        console.log('🔍 DEBUG: Image dimensions:', res.data.width, 'x', res.data.height);\n        console.log('🔍 DEBUG: Enhanced prompt:', res.data.enhanced_prompt);\n      } else if (res && res.data && res.data.image_url) {\n        // Fallback for different response format\n        setAiImageUrl(res.data.image_url);\n        setMessage('AI image generated successfully!');\n        console.log('🔍 DEBUG: Generated image URL (fallback):', res.data.image_url);\n      } else {\n        console.error('🔍 DEBUG: Invalid response format:', res);\n        setMessage('Failed to generate image. Please try again.');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Image generation error:', err);\n\n      // Handle specific error types\n      let errorMessage = err.message || err.toString();\n\n      if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Invalid or expired Stability AI API key. Please check your API key in the backend configuration.';\n      } else if (errorMessage.includes('429') || errorMessage.includes('Too Many Requests')) {\n        errorMessage = 'Rate limit exceeded. Please wait a few minutes before trying again, or upgrade your Stability AI plan.';\n        // Set a 5-minute cooldown\n        setRateLimitCooldown(300);\n        const cooldownInterval = setInterval(() => {\n          setRateLimitCooldown(prev => {\n            if (prev <= 1) {\n              clearInterval(cooldownInterval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } else if (errorMessage.includes('500') || errorMessage.includes('Internal Server Error')) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (errorMessage.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      }\n\n      setMessage('Error generating image: ' + errorMessage);\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  // --- Auto Generate Caption ---\n  const handleAutoGenerateCaption = async () => {\n    if (!captionPrompt.trim()) {\n      setMessage('Please enter a prompt for caption generation.');\n      return;\n    }\n\n    setGeneratingCaption(true);\n    setMessage('Generating caption with AI...');\n\n    try {\n      console.log('🔍 DEBUG: Generating Instagram caption with prompt:', captionPrompt.trim());\n\n      const res = await apiClient.generateInstagramCaption(captionPrompt.trim());\n      console.log('🔍 DEBUG: Caption generation response:', res);\n\n      if (res && res.success && res.data && res.data.content) {\n        setCaption(res.data.content);\n        setMessage('Caption generated successfully!');\n        console.log('🔍 DEBUG: Generated caption:', res.data.content);\n      } else if (res && res.content) {\n        // Fallback for different response format\n        setCaption(res.content);\n        setMessage('Caption generated successfully!');\n        console.log('🔍 DEBUG: Generated caption (fallback):', res.content);\n      } else {\n        console.error('🔍 DEBUG: Invalid response format:', res);\n        setMessage('Failed to generate caption. Please try again.');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Caption generation error:', err);\n      setMessage('Error generating caption: ' + (err.message || err.toString()));\n    } finally {\n      setGeneratingCaption(false);\n    }\n  };\n\n  // --- Generate Image and Caption Together ---\n  const handleGenerateImageAndCaption = async () => {\n    if (!aiPrompt.trim()) {\n      setMessage('Please enter a prompt for generation.');\n      return;\n    }\n\n    setAiGenerating(true);\n    setGeneratingCaption(true);\n    setMessage('Generating Instagram-optimized image and caption with AI...');\n\n    try {\n      console.log('🔍 DEBUG: Generating image and caption with prompt:', aiPrompt.trim());\n\n      // Generate image first\n      const imageRes = await apiClient.generateInstagramImage(aiPrompt.trim());\n      console.log('🔍 DEBUG: Image generation response:', imageRes);\n\n      if (!imageRes || !imageRes.success || !imageRes.data || !imageRes.data.image_url) {\n        throw new Error('Failed to generate image');\n      }\n\n      setAiImageUrl(imageRes.data.image_url);\n      console.log('🔍 DEBUG: Generated image URL:', imageRes.data.image_url);\n      console.log('🔍 DEBUG: Image dimensions:', imageRes.data.width, 'x', imageRes.data.height);\n\n      // Generate caption using the same prompt\n      const captionRes = await apiClient.generateInstagramCaption(aiPrompt.trim());\n      console.log('🔍 DEBUG: Caption generation response:', captionRes);\n\n      if (captionRes && captionRes.success && captionRes.data && captionRes.data.content) {\n        setCaption(captionRes.data.content);\n        console.log('🔍 DEBUG: Generated caption:', captionRes.data.content);\n      } else if (captionRes && captionRes.content) {\n        // Fallback for different response format\n        setCaption(captionRes.content);\n        console.log('🔍 DEBUG: Generated caption (fallback):', captionRes.content);\n      } else {\n        console.warn('🔍 DEBUG: Caption generation failed, using fallback');\n        setCaption(`Check out this amazing image! ${aiPrompt.trim()}`);\n      }\n\n      const dimensions = imageRes.data.width && imageRes.data.height ? `(${imageRes.data.width}x${imageRes.data.height})` : '';\n      setMessage(`Image and caption generated successfully! ${dimensions}`);\n\n    } catch (err) {\n      console.error('🔍 DEBUG: Image and caption generation error:', err);\n\n      // Handle specific error types\n      let errorMessage = err.message || err.toString();\n\n      if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Invalid or expired Stability AI API key. Please check your API key in the backend configuration.';\n      } else if (errorMessage.includes('429') || errorMessage.includes('Too Many Requests')) {\n        errorMessage = 'Rate limit exceeded. Please wait a few minutes before trying again, or upgrade your Stability AI plan.';\n        // Set a 5-minute cooldown\n        setRateLimitCooldown(300);\n        const cooldownInterval = setInterval(() => {\n          setRateLimitCooldown(prev => {\n            if (prev <= 1) {\n              clearInterval(cooldownInterval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } else if (errorMessage.includes('500') || errorMessage.includes('Internal Server Error')) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (errorMessage.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      }\n\n      setMessage('Error generating image and caption: ' + errorMessage);\n\n      // Clear any partial results on error\n      setAiImageUrl('');\n      setCaption('');\n    } finally {\n      setAiGenerating(false);\n      setGeneratingCaption(false);\n    }\n  };\n\n  // --- Retry Image Generation ---\n  const handleRetryImageGeneration = async () => {\n    if (!aiPrompt.trim()) {\n      setMessage('Please enter a prompt for image generation.');\n      return;\n    }\n\n    setAiGenerating(true);\n    setMessage('Retrying image generation...');\n\n    try {\n      console.log('🔍 DEBUG: Retrying image generation with prompt:', aiPrompt.trim());\n\n      const res = await apiClient.generateInstagramImage(aiPrompt.trim());\n      console.log('🔍 DEBUG: Retry image generation response:', res);\n\n      if (res && res.success && res.data && res.data.image_url) {\n        setAiImageUrl(res.data.image_url);\n        setMessage('Image generated successfully on retry!');\n        console.log('🔍 DEBUG: Generated image URL (retry):', res.data.image_url);\n      } else if (res && res.data && res.data.image_url) {\n        // Fallback for different response format\n        setAiImageUrl(res.data.image_url);\n        setMessage('Image generated successfully on retry!');\n        console.log('🔍 DEBUG: Generated image URL (retry fallback):', res.data.image_url);\n      } else {\n        console.error('🔍 DEBUG: Invalid response format on retry:', res);\n        setMessage('Failed to generate image on retry. Please try again.');\n      }\n    } catch (err) {\n      console.error('🔍 DEBUG: Retry image generation error:', err);\n\n      // Handle specific error types\n      let errorMessage = err.message || err.toString();\n\n      if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Invalid or expired Stability AI API key. Please check your API key in the backend configuration.';\n      } else if (errorMessage.includes('429') || errorMessage.includes('Too Many Requests')) {\n        errorMessage = 'Rate limit exceeded. Please wait a few minutes before trying again, or upgrade your Stability AI plan.';\n        // Set a 5-minute cooldown\n        setRateLimitCooldown(300);\n        const cooldownInterval = setInterval(() => {\n          setRateLimitCooldown(prev => {\n            if (prev <= 1) {\n              clearInterval(cooldownInterval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } else if (errorMessage.includes('500') || errorMessage.includes('Internal Server Error')) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (errorMessage.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      }\n\n      setMessage('Error retrying image generation: ' + errorMessage);\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  // --- Carousel Upload ---\n  const handleCarouselFilesChange = async (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length < 3 || files.length > 7) {\n      setMessage('Please select 3 to 7 images.');\n      return;\n    }\n    setCarouselGenerating(true);\n    setMessage('Uploading carousel images...');\n    try {\n      const urls = [];\n      for (const file of files) {\n        if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n          setMessage('All images must be PNG or JPG.');\n          setCarouselGenerating(false);\n          return;\n        }\n        const res = await apiClient.uploadImageToCloudinary(file);\n        if (res && res.success && res.data && res.data.url) {\n          urls.push(res.data.url);\n        } else {\n          throw new Error(res?.error || 'Upload failed');\n        }\n      }\n      setCarouselImages(urls);\n      setMessage(`Uploaded ${urls.length} images for carousel.`);\n    } catch (err) {\n      setMessage('Error uploading carousel images: ' + err.message);\n    } finally {\n      setCarouselGenerating(false);\n    }\n  };\n\n  // --- Carousel Drag and Drop Handlers ---\n  const handleDragStart = (e, index) => {\n    setDraggedIndex(index);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e, dropIndex) => {\n    e.preventDefault();\n    \n    if (draggedIndex === null || draggedIndex === dropIndex) {\n      setDraggedIndex(null);\n      return;\n    }\n\n    const newImages = [...carouselImages];\n    const draggedImage = newImages[draggedIndex];\n    \n    // Remove the dragged item\n    newImages.splice(draggedIndex, 1);\n    \n    // Insert at new position\n    newImages.splice(dropIndex, 0, draggedImage);\n    \n    setCarouselImages(newImages);\n    setDraggedIndex(null);\n  };\n\n  const handleDragEnd = () => {\n    setDraggedIndex(null);\n  };\n\n  // --- Carousel Auto Generate Caption ---\n  const handleCarouselAutoGenerateCaption = async () => {\n    if (!captionPrompt.trim()) {\n      setMessage('Please provide a prompt for caption generation.');\n      return;\n    }\n\n    setGeneratingCaption(true);\n    setMessage('Generating carousel caption...');\n\n    try {\n      const result = await apiClient.generateInstagramCaption(captionPrompt.trim());\n      if (result.success && result.content) {\n        setCarouselCaption(result.content);\n        setMessage('Caption generated successfully!');\n      } else {\n        setMessage('Failed to generate caption: ' + (result.error || 'Unknown error'));\n      }\n    } catch (err) {\n      setMessage('Error generating caption: ' + err.message);\n    } finally {\n      setGeneratingCaption(false);\n    }\n  };\n\n  // --- Reel Upload ---\n  const handleReelFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!ACCEPTED_VIDEO_TYPES.includes(file.type)) {\n      setMessage('Only .mp4 or .mov files are allowed.');\n      return;\n    }\n    setReelUploading(true);\n    setMessage('Uploading video...');\n    try {\n      const res = await apiClient.uploadVideoToCloudinary(file);\n      console.log('Video upload response:', res);\n\n      // Check for different response structures\n      if (res && res.success && (res.url || res.data?.url)) {\n        const videoUrl = res.url || res.data?.url;\n        const filename = res.filename || res.data?.filename;\n        setReelUrl(videoUrl);\n        setReelFilename(filename || '');\n        // eslint-disable-next-line no-undef\n        setReelFile(file);\n        console.log('🔍 DEBUG: Video uploaded successfully:', {\n          videoUrl,\n          filename,\n          res\n        });\n        setMessage('Video uploaded successfully!');\n      } else if (res && res.data && res.data.url) {\n        // Alternative response structure\n        setReelUrl(res.data.url);\n        setReelFilename(res.data.filename || '');\n        // eslint-disable-next-line no-undef\n        setReelFile(file);\n        setMessage('Video uploaded successfully!');\n      } else {\n        throw new Error(res?.error || res?.message || 'Upload failed');\n      }\n    } catch (err) {\n      console.error('Video upload error:', err);\n      setMessage('Error: ' + (err.message || err.toString()));\n    } finally {\n      setReelUploading(false);\n    }\n  };\n\n  // --- Reel Auto Generate Caption ---\n  const handleReelAutoGenerateCaption = async () => {\n    if (!reelCaptionPrompt.trim()) {\n      setMessage('Please provide a prompt for caption generation.');\n      return;\n    }\n\n    setGeneratingReelCaption(true);\n    setMessage('Generating reel caption...');\n\n    try {\n      const result = await apiClient.generateInstagramCaption(reelCaptionPrompt.trim());\n      if (result.success && result.content) {\n        setReelCaption(result.content);\n        setMessage('Reel caption generated successfully!');\n      } else {\n        setMessage('Failed to generate caption: ' + (result.error || 'Unknown error'));\n      }\n    } catch (err) {\n      setMessage('Error generating caption: ' + err.message);\n    } finally {\n      setGeneratingReelCaption(false);\n    }\n  };\n\n  // --- Reel Thumbnail Upload ---\n  const handleReelThumbnailChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n      setMessage('Only .jpg, .jpeg, .png files are allowed for thumbnail.');\n      return;\n    }\n    setMessage('Uploading thumbnail image...');\n    try {\n      const res = await apiClient.uploadThumbnailToCloudinary(file);\n      if (res && res.success && (res.url || res.data?.url)) {\n        const imageUrl = res.url || res.data?.url;\n        const filename = res.filename || res.data?.filename;\n        setReelThumbnailUrl(imageUrl);\n        setReelThumbnailFilename(filename || '');\n        // eslint-disable-next-line no-undef\n        setReelThumbnailFile(file);\n        console.log('🔍 DEBUG: Thumbnail uploaded successfully:', {\n          imageUrl,\n          filename,\n          res\n        });\n        setMessage('Thumbnail uploaded successfully!');\n      } else {\n        throw new Error(res?.error || res?.message || 'Thumbnail upload failed');\n      }\n    } catch (err) {\n      setMessage('Error: ' + (err.message || err.toString()));\n    }\n  };\n\n  // --- Google Drive Integration ---\n  const checkGoogleDriveAuth = async () => {\n    try {\n      const response = await apiClient.getGoogleDriveStatus();\n      setDriveAuthenticated(response.authenticated);\n      return response.authenticated;\n    } catch (error) {\n      console.error('Error checking Google Drive auth:', error);\n      setDriveAuthenticated(false);\n      return false;\n    }\n  };\n\n  const authenticateGoogleDrive = async () => {\n    setDriveAuthLoading(true);\n    try {\n      const response = await apiClient.getGoogleDriveAuthorizeUrl();\n      if (response.consent_url) {\n        // Open popup for OAuth\n        const popup = window.open(\n          response.consent_url,\n          'google-drive-auth',\n          'width=500,height=600,scrollbars=yes,resizable=yes'\n        );\n\n        // Listen for OAuth completion\n        const handleMessage = (event) => {\n          if (event.data.success) {\n            setDriveAuthenticated(true);\n            setMessage('Google Drive connected successfully!');\n            loadDriveFiles();\n          } else if (event.data.error) {\n            setMessage(`Google Drive authentication failed: ${event.data.error}`);\n          }\n          window.removeEventListener('message', handleMessage);\n          if (popup) popup.close();\n        };\n\n        window.addEventListener('message', handleMessage);\n      } else if (response.already_authenticated) {\n        setDriveAuthenticated(true);\n        setMessage('Google Drive already authenticated!');\n        loadDriveFiles();\n      }\n    } catch (error) {\n      setMessage(`Google Drive authentication error: ${error.message}`);\n    } finally {\n      setDriveAuthLoading(false);\n    }\n  };\n\n  const loadDriveFiles = async () => {\n    if (!driveAuthenticated) return;\n\n    setLoadingDriveFiles(true);\n    try {\n      const response = await apiClient.getGoogleDriveFiles('image/');\n      if (response.success && response.files) {\n        setDriveFiles(response.files);\n      } else {\n        setMessage('Failed to load Google Drive files');\n      }\n    } catch (error) {\n      setMessage(`Error loading Google Drive files: ${error.message}`);\n    } finally {\n      setLoadingDriveFiles(false);\n    }\n  };\n\n  const handleDriveFileSelect = async (fileId, fileName) => {\n    setUploadingImage(true);\n    setMessage('Downloading file from Google Drive...');\n    try {\n      const response = await apiClient.downloadGoogleDriveFile(fileId);\n      if (response.success && response.fileContent) {\n        // Convert base64 to blob and upload to Cloudinary\n        const byteCharacters = atob(response.fileContent);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        const blob = new Blob([byteArray], { type: response.mimeType });\n\n        // Create a File object from the blob\n        const file = new File([blob], fileName, { type: response.mimeType });\n\n        // Upload to Cloudinary\n        const uploadResponse = await apiClient.uploadImageToCloudinary(file);\n        if (uploadResponse.success && uploadResponse.data && uploadResponse.data.url) {\n          setUploadedImageUrl(uploadResponse.data.url);\n          setAiImageUrl(uploadResponse.data.url);\n          setMessage('File uploaded from Google Drive successfully!');\n          setShowDriveModal(false);\n        } else {\n          throw new Error(uploadResponse.error || 'Upload failed');\n        }\n      } else {\n        throw new Error(response.error || 'Download failed');\n      }\n    } catch (error) {\n      setMessage(`Error processing Google Drive file: ${error.message}`);\n    } finally {\n      setUploadingImage(false);\n    }\n  };\n\n  const openDriveModal = async () => {\n    const isAuth = await checkGoogleDriveAuth();\n    if (!isAuth) {\n      await authenticateGoogleDrive();\n    } else {\n      await loadDriveFiles();\n    }\n    setShowDriveModal(true);\n  };\n\n  // File Picker Functions\n  const openFilePicker = (type, formType) => {\n    setFilePickerType(type);\n    setFilePickerFormType(formType);\n    setShowFilePicker(true);\n  };\n\n  const closeFilePicker = () => {\n    setShowFilePicker(false);\n    setFilePickerType('');\n    setFilePickerFormType('');\n    setIsLoadingGoogleDrive(false);\n  };\n\n  const handleLocalFileSelect = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n\n    if (filePickerFormType === 'carousel') {\n      // Handle carousel upload\n      handleCarouselFilesChange({ target: { files } });\n    } else {\n      // Handle single file upload\n      const file = files[0];\n      if (filePickerType === 'photo') {\n        handleImageChange({ target: { files: [file] } });\n      } else if (filePickerType === 'video') {\n        handleReelFileChange({ target: { files: [file] } });\n      }\n    }\n    closeFilePicker();\n  };\n\n  const handleGoogleDriveSelect = async () => {\n    setIsLoadingGoogleDrive(true);\n    try {\n      // Check if already authenticated\n      const status = await apiClient.getGoogleDriveStatus();\n      if (!status.authenticated) {\n        // Get consent URL for popup\n        const authResponse = await apiClient.getGoogleDriveAuthorizeUrl();\n        if (authResponse.consent_url) {\n          // Open popup and wait for completion\n          await openDriveAuthPopup(authResponse.consent_url);\n        }\n      }\n\n      // After popup closes, re-check authentication status\n      const finalStatus = await apiClient.getGoogleDriveStatus();\n      if (!finalStatus.authenticated) {\n        throw new Error('Authentication was not completed successfully');\n      }\n\n      // Update state and proceed with Google Drive picker\n      setGoogleDriveAvailable(true);\n\n      // Initialize Google Drive API\n      await loadGoogleDriveAPI();\n\n      // Check if google object is available\n      if (typeof window.google === 'undefined' || !window.google.picker) {\n        throw new Error('Google Picker API failed to load');\n      }\n\n      // Get fresh token for picker\n      const authResult = await apiClient.getGoogleDriveAuth();\n\n      // Open Google Drive picker\n      const picker = new window.google.picker.PickerBuilder()\n        .addView(new window.google.picker.DocsView()\n          .setIncludeFolders(true)\n          .setSelectFolderEnabled(false)\n          .setMimeTypes(filePickerType === 'photo' ? 'image/*' : 'video/*'))\n        .setOAuthToken(authResult.access_token)\n        .setDeveloperKey(process.env.REACT_APP_GOOGLE_DEVELOPER_KEY || '')\n        .setCallback(handleGoogleDriveCallback)\n        .enableFeature(window.google.picker.Feature.NAV_HIDDEN)\n        .enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED, filePickerFormType === 'carousel')\n        .setTitle(filePickerFormType === 'carousel' ? 'Select multiple files from Google Drive' : 'Select a file from Google Drive')\n        .setSelectableMimeTypes(filePickerType === 'photo' ? 'image/*' : 'video/*')\n        .build();\n\n      picker.setVisible(true);\n\n    } catch (error) {\n      console.error('Error with Google Drive selection:', error);\n      setMessage(`Google Drive error: ${error.message}`);\n    } finally {\n      setIsLoadingGoogleDrive(false);\n    }\n  };\n\n  const loadGoogleDriveAPI = () => {\n    return new Promise((resolve, reject) => {\n      if (window.google && window.google.picker) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://apis.google.com/js/api.js';\n      script.onload = () => {\n        if (window.gapi) {\n          window.gapi.load('picker', () => {\n            resolve();\n          });\n        } else {\n          reject(new Error('Google API failed to load'));\n        }\n      };\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  };\n\n  const openDriveAuthPopup = (authUrl) => {\n    return new Promise((resolve, reject) => {\n      const popup = window.open(\n        authUrl,\n        'google-drive-auth',\n        'width=500,height=600,scrollbars=yes,resizable=yes'\n      );\n\n      const messageHandler = (event) => {\n        if (event.data.success) {\n          setGoogleDriveAvailable(true);\n          setMessage('Google Drive connected successfully!');\n          resolve();\n        } else if (event.data.error) {\n          setMessage(`Google Drive authentication failed: ${event.data.error}`);\n          reject(new Error(event.data.error));\n        }\n        window.removeEventListener('message', messageHandler);\n        if (popup) popup.close();\n      };\n\n      window.addEventListener('message', messageHandler);\n\n      // Timeout after 5 minutes\n      setTimeout(() => {\n        window.removeEventListener('message', messageHandler);\n        if (popup) popup.close();\n        reject(new Error('Authentication timeout'));\n      }, 300000);\n    });\n  };\n\n  const handleGoogleDriveCallback = async (data) => {\n    if (data.action === window.google.picker.Action.PICKED) {\n      const files = data.docs;\n      try {\n        if (filePickerFormType === 'carousel') {\n          // Handle multiple files for carousel\n          const fileObjects = [];\n          for (const file of files) {\n            const fileContent = await downloadGoogleDriveFile(file.id);\n            const blob = new Blob([fileContent], { type: file.mimeType });\n            const fileObj = new File([blob], file.name, { type: file.mimeType });\n            fileObjects.push(fileObj);\n          }\n          handleCarouselFilesChange({ target: { files: fileObjects } });\n        } else {\n          // Handle single file\n          const file = files[0];\n          const fileContent = await downloadGoogleDriveFile(file.id);\n          const blob = new Blob([fileContent], { type: file.mimeType });\n          const fileObj = new File([blob], file.name, { type: file.mimeType });\n\n          if (filePickerType === 'photo') {\n            handleImageChange({ target: { files: [fileObj] } });\n          } else if (filePickerType === 'video') {\n            handleReelFileChange({ target: { files: [fileObj] } });\n          }\n        }\n\n        closeFilePicker();\n        setMessage('File(s) selected from Google Drive successfully!');\n      } catch (error) {\n        console.error('Error downloading file from Google Drive:', error);\n        setMessage('Failed to download file from Google Drive: ' + error.message);\n      }\n    }\n  };\n\n  const downloadGoogleDriveFile = async (fileId) => {\n    try {\n      const response = await apiClient.downloadGoogleDriveFile(fileId);\n      if (response.success && response.fileContent) {\n        // Convert base64 to blob\n        const byteCharacters = atob(response.fileContent);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        return byteArray;\n      } else {\n        throw new Error(response.error || 'Download failed');\n      }\n    } catch (error) {\n      throw new Error(`Failed to download file: ${error.message}`);\n    }\n  };\n\n  // --- Post Submission ---\n  const handlePublish = async () => {\n    if (!selectedAccount) {\n      setMessage('Please select an Instagram account first');\n      return;\n    }\n\n    if (postType === 'photo' && (!aiImageUrl || !aiImageUrl.trim()) && (!uploadedImageUrl || !uploadedImageUrl.trim())) {\n      setMessage('Please select or generate an image');\n      return;\n    }\n\n    if (postType === 'carousel' && carouselImages.length === 0) {\n      setMessage('Please generate or upload carousel images');\n      return;\n    }\n\n    if (postType === 'reel' && !reelUrl) {\n      setMessage('Please upload a video for the reel');\n      return;\n    }\n\n    setLoading(true);\n    setMessage('Creating Instagram post...');\n\n    // Create pre-posting notification\n    addNotification({\n      type: 'pre_posting',\n      platform: 'instagram',\n      strategyName: postType === 'photo' ? 'Photo Post' : (postType === 'reel' ? 'Reel Post' : 'Carousel Post'),\n      message: `Preparing to publish your Instagram ${postType} post...`,\n      timestamp: new Date().toISOString()\n    });\n\n    try {\n      // Use the unified Instagram post endpoint for all post types\n      const options = {\n        instagram_user_id: selectedAccount.platform_user_id,\n        post_type: postType === 'photo' ? 'feed' : (postType === 'reel' ? 'reel' : postType),\n        media_type: postType === 'reel' ? 'video' : 'image' // <-- robust: send 'video' for reels\n      };\n\n      // Handle different post types\n      if (postType === 'photo') {\n        options.caption = caption;\n        const imageUrl = imageSource === 'ai' ? aiImageUrl : uploadedImageUrl;\n        if (imageUrl && imageUrl.trim()) {\n          options.image_url = imageUrl;\n        } else {\n          // If no image is available, we can't create a photo post\n          setMessage('Please select or generate an image before creating a photo post');\n          setLoading(false);\n          return;\n        }\n        console.log('🔍 DEBUG: Photo post options:', {\n          postType,\n          imageSource,\n          aiImageUrl,\n          uploadedImageUrl,\n          finalImageUrl: options.image_url,\n          caption: options.caption\n        });\n      } else if (postType === 'carousel') {\n        // For carousel, we need to use the carousel-specific endpoint\n        const response = await apiClient.postInstagramCarousel(\n          selectedAccount.platform_user_id,\n          carouselCaption,\n          carouselImages\n        );\n\n        if (response.success) {\n          setMessage('Instagram carousel post created successfully!');\n\n          // Create success notification for carousel\n          addNotification({\n            type: 'success',\n            platform: 'instagram',\n            strategyName: 'Carousel Post',\n            message: 'Your Instagram carousel post was published successfully!',\n            timestamp: new Date().toISOString()\n          });\n\n          // Reset form\n          setCarouselImages([]);\n          setCarouselCaption('');\n          setCaptionPrompt('');\n          setAutoGenerateCaption(false);\n          setAiPrompt('');\n\n          // Reload user media\n          if (selectedAccount) {\n            loadUserMedia(selectedAccount.platform_user_id);\n          }\n        } else {\n          setMessage(`Failed to create carousel post: ${response.error}`);\n\n          // Create failure notification for carousel\n          addNotification({\n            type: 'failure',\n            platform: 'instagram',\n            strategyName: 'Carousel Post',\n            message: `Failed to publish Instagram carousel post: ${response.error}`,\n            timestamp: new Date().toISOString()\n          });\n        }\n        setLoading(false);\n        return;\n      } else if (postType === 'reel') {\n        options.caption = reelCaption;\n        // Always use Cloudinary URL for Reels\n        if (reelUrl && reelUrl.trim().startsWith('http')) {\n          options.video_url = reelUrl;\n        } else if (reelFilename && reelFilename.trim()) {\n          options.video_filename = reelFilename;\n        }\n        options.is_reel = true;\n        if (reelThumbnailUrl && reelThumbnailUrl.trim()) {\n          options.thumbnail_url = reelThumbnailUrl;\n        } else if (reelThumbnailFilename && reelThumbnailFilename.trim()) {\n          options.thumbnail_filename = reelThumbnailFilename;\n        }\n        options.media_type = 'video';\n        // Do NOT send media_file or media_filename for Reels\n        if ('media_file' in options) delete options.media_file;\n        if ('media_filename' in options) delete options.media_filename;\n        if ('image_url' in options) delete options.image_url;\n        console.log('🔍 DEBUG: Reel post options:', options);\n        console.log('🔍 DEBUG: Thumbnail state values:', {\n          reelThumbnailUrl,\n          reelThumbnailFilename,\n          hasThumbnailUrl: reelThumbnailUrl && reelThumbnailUrl.trim(),\n          hasThumbnailFilename: reelThumbnailFilename && reelThumbnailFilename.trim()\n        });\n      }\n\n      // Remove any empty string values from options to avoid backend validation issues\n      const cleanOptions = Object.fromEntries(\n        Object.entries(options).filter(([key, value]) =>\n          value !== null && value !== undefined && value !== ''\n        )\n      );\n\n      // Additional validation for photo posts\n      if (postType === 'photo' && !cleanOptions.image_url) {\n        setMessage('Photo posts require an image. Please select or generate an image first.');\n        setLoading(false);\n        return;\n      }\n\n      // Additional validation for reel posts\n      if (postType === 'reel' && !cleanOptions.video_url && !cleanOptions.video_filename) {\n        setMessage('Reel posts require a video. Please upload a video first.');\n        setLoading(false);\n        return;\n      }\n\n      console.log('🔍 DEBUG: Calling createUnifiedInstagramPost with:', {\n        instagramUserId: selectedAccount.platform_user_id,\n        options: cleanOptions,\n        originalPostType: postType,\n        originalOptions: options,\n        reelUrl: reelUrl,\n        reelFilename: reelFilename\n      });\n      console.log('🔍 DEBUG: Final thumbnail state before API call:', {\n        reelThumbnailUrl,\n        reelThumbnailFilename,\n        hasThumbnailUrl: reelThumbnailUrl && reelThumbnailUrl.trim(),\n        hasThumbnailFilename: reelThumbnailFilename && reelThumbnailFilename.trim(),\n        cleanOptionsHasThumbnail: cleanOptions.thumbnail_url || cleanOptions.thumbnail_filename\n      });\n      const response = await apiClient.createUnifiedInstagramPost(selectedAccount.platform_user_id, cleanOptions);\n\n      if (response.success) {\n        setMessage('Instagram post created successfully!');\n\n        // Create success notification\n        addNotification({\n          type: 'success',\n          platform: 'instagram',\n          strategyName: postType === 'photo' ? 'Photo Post' : (postType === 'reel' ? 'Reel Post' : 'Carousel Post'),\n          message: `Your Instagram ${postType} post was published successfully!`,\n          timestamp: new Date().toISOString()\n        });\n\n        // Reset form\n        setCaption('');\n        setReelCaption('');\n        setReelCaptionPrompt('');\n        setReelAutoGenerateCaption(false);\n        setAiImageUrl('');\n        setUploadedImageUrl('');\n        setReelUrl('');\n        setReelFilename(''); // Clear the filename too\n        // eslint-disable-next-line no-undef\n        setReelFile(null);\n        setSelectedImageFile(null);\n        setAiPrompt('');\n        setCaptionPrompt('');\n        setReelThumbnailUrl('');\n        setReelThumbnailFilename('');\n        // eslint-disable-next-line no-undef\n        setReelThumbnailFile(null);\n        // Reload user media\n        if (selectedAccount) {\n          loadUserMedia(selectedAccount.platform_user_id);\n        }\n        // --- Synchronize account info for post count ---\n        try {\n          const allAccounts = await apiClient.getSocialAccounts();\n          const updatedAccount = allAccounts.find(acc => acc.id === selectedAccount.id);\n          if (updatedAccount) {\n            setSelectedAccount(updatedAccount);\n            setInstagramAccounts(prev =>\n              prev.map(acc => acc.id === updatedAccount.id ? updatedAccount : acc)\n            );\n          }\n        } catch (err) {\n          console.warn('Failed to refresh account info after post:', err);\n        }\n        setActiveTab('scheduled-posts');\n      } else {\n        let errorMsg = `Failed to create post: ${response.error || 'Unknown error'}`;\n        if (response.details) {\n          errorMsg += `\\nDetails: ${typeof response.details === 'string' ? response.details : JSON.stringify(response.details)}`;\n        }\n        setMessage(errorMsg);\n\n        // Create failure notification\n        addNotification({\n          type: 'failure',\n          platform: 'instagram',\n          strategyName: postType === 'photo' ? 'Photo Post' : (postType === 'reel' ? 'Reel Post' : 'Carousel Post'),\n          message: `Failed to publish Instagram ${postType} post: ${response.error || 'Unknown error'}`,\n          timestamp: new Date().toISOString()\n        });\n        console.error('Instagram post error:', response);\n      }\n    } catch (error) {\n      console.error('Error creating Instagram post:', error);\n      setMessage(`Error creating post: ${error.message}`);\n\n      // Create failure notification for unexpected errors\n      addNotification({\n        type: 'failure',\n        platform: 'instagram',\n        strategyName: postType === 'photo' ? 'Photo Post' : (postType === 'reel' ? 'Reel Post' : 'Carousel Post'),\n        message: `Unexpected error creating Instagram ${postType} post: ${error.message}`,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check Google Drive availability\n  const checkGoogleDriveAvailability = async () => {\n    try {\n      const status = await apiClient.getGoogleDriveStatus();\n      setGoogleDriveAvailable(status.authenticated);\n    } catch (error) {\n      console.error('Error checking Google Drive availability:', error);\n      setGoogleDriveAvailable(false);\n    }\n  };\n\n  // --- Logout ---\n  const handleLogout = () => {\n    setInstagramAccounts([]);\n    setSelectedAccount('');\n    setIsConnected(false);\n    setActiveTab('connect');\n    setMessage('Instagram accounts disconnected');\n  };\n\n  // Auto-Reply Functions\n  const loadAutoReplySettings = async () => {\n    if (!selectedAccount) return;\n\n    try {\n      console.log('🔄 Loading auto-reply settings for Instagram account:', selectedAccount.platform_user_id, selectedAccount.username);\n\n      // Get automation rules for Instagram auto-reply\n      const rules = await apiClient.getAutomationRules('instagram', 'auto_reply');\n      console.log('📋 Found automation rules:', rules);\n\n      // Find existing auto-reply rule for this account\n      const existingRule = rules.find(rule =>\n        rule.social_account_id === selectedAccount.id &&\n        rule.rule_type === 'AUTO_REPLY'\n      );\n\n      if (existingRule) {\n        setAutoReplyEnabled(existingRule.is_active);\n        setAutoReplyTemplate(existingRule.actions?.template || '');\n        console.log('✅ Found existing auto-reply rule:', existingRule);\n      } else {\n        setAutoReplyEnabled(false);\n        setAutoReplyTemplate('');\n        console.log('📝 No existing auto-reply rule found');\n      }\n\n      // Load posts for auto-reply selection\n      await loadPostsForAutoReply();\n\n    } catch (error) {\n      console.error('❌ Error loading auto-reply settings:', error);\n\n      let errorMessage = 'Failed to load auto-reply settings';\n      if (error.response?.data?.detail) {\n        errorMessage += ': ' + error.response.data.detail;\n      } else if (error.message) {\n        errorMessage += ': ' + error.message;\n      }\n\n      setMessage(errorMessage);\n    }\n  };\n\n  // DM Auto-Reply Functions\n  const loadDmAutoReplySettings = async () => {\n    if (!selectedAccount) return;\n    try {\n      console.log('🔄 Loading DM auto-reply settings for Instagram account:', selectedAccount.platform_user_id, selectedAccount.username);\n      const statusResponse = await apiClient.getInstagramDmAutoReplyStatus(selectedAccount.platform_user_id);\n      console.log('📋 DM auto-reply status:', statusResponse);\n      if (statusResponse.success) {\n        setDmAutoReplyEnabled(statusResponse.enabled);\n        console.log('✅ DM auto-reply status loaded:', statusResponse.enabled);\n      } else {\n        setDmAutoReplyEnabled(false);\n        showToast('Failed to load DM auto-reply status: ' + (statusResponse.error || 'Unknown error'), 'error');\n        console.log('📝 No DM auto-reply status found');\n      }\n    } catch (error) {\n      setDmAutoReplyEnabled(false);\n      showToast('Error loading DM auto-reply settings: ' + (error?.message || 'Unknown error'), 'error');\n      console.error('❌ Error loading DM auto-reply settings:', error);\n    }\n  };\n\n  const handleDmAutoReplyToggle = async () => {\n    if (!selectedAccount) {\n      showToast('Please select an Instagram account first.', 'error');\n      return;\n    }\n    setDmAutoReplyLoading(true);\n    try {\n      const response = await apiClient.toggleInstagramDmAutoReply(\n        selectedAccount.platform_user_id,\n        !dmAutoReplyEnabled\n      );\n      if (response.success) {\n        setDmAutoReplyEnabled(!dmAutoReplyEnabled);\n        showToast(\n          !dmAutoReplyEnabled\n            ? 'Auto DM Reply enabled successfully!'\n            : 'Auto DM Reply disabled successfully.',\n          'success'\n        );\n      } else {\n        showToast('Failed to toggle Auto DM Reply: ' + (response.error || 'Unknown error'), 'error');\n        console.error('❌ Failed to toggle Auto DM Reply:', response);\n      }\n    } catch (error) {\n      showToast('Failed to toggle Auto DM Reply: ' + (error?.message || 'Unknown error'), 'error');\n      console.error('❌ Error toggling Auto DM Reply:', error);\n    } finally {\n      setDmAutoReplyLoading(false);\n    }\n  };\n\n  const loadPostsForAutoReply = async () => {\n    if (!selectedAccount) return;\n\n    try {\n      setLoadingAutoReplyPosts(true);\n      console.log('🔄 Loading posts for auto-reply selection for Instagram account:', selectedAccount.platform_user_id);\n\n      // First, try to get posts directly from the database\n      const response = await apiClient.getPosts('instagram');\n      console.log('📋 All Instagram posts from database:', response);\n\n      if (response && Array.isArray(response)) {\n        console.log('🔍 Selected account details:', {\n          id: selectedAccount.id,\n          platform_user_id: selectedAccount.platform_user_id,\n          username: selectedAccount.username\n        });\n\n        // Filter posts for this specific account with better debugging\n        const accountPosts = response.filter(post => {\n          // Primary match: social_account_id (most reliable)\n          const matchesAccountId = post.social_account?.id === selectedAccount.id;\n\n          // Secondary matches for compatibility\n          const matchesPlatformUserId = post.social_account?.platform_user_id === selectedAccount.platform_user_id;\n          const matchesUsername = post.social_account?.username === selectedAccount.username;\n\n          const isMatch = matchesAccountId || matchesPlatformUserId || matchesUsername;\n\n          console.log('🔍 Checking post:', {\n            postId: post.id,\n            postAccountId: post.social_account?.id,\n            postPlatformUserId: post.social_account?.platform_user_id,\n            postUsername: post.social_account?.username,\n            selectedAccountId: selectedAccount.id,\n            selectedPlatformUserId: selectedAccount.platform_user_id,\n            selectedUsername: selectedAccount.username,\n            matchesAccountId,\n            matchesPlatformUserId,\n            matchesUsername,\n            isMatch\n          });\n\n          return isMatch;\n        });\n\n        console.log('📋 Posts for this account:', accountPosts.length);\n        console.log('📋 All posts in database:', response.length);\n        console.log('📋 Account posts details:', accountPosts.map(post => ({\n          id: post.id,\n          content: post.content?.substring(0, 50) + '...',\n          social_account_id: post.social_account?.id,\n          platform_user_id: post.social_account?.platform_user_id,\n          username: post.social_account?.username\n        })));\n\n        if (accountPosts.length === 0) {\n          console.log('⚠️ No posts found for this specific account. Showing all Instagram posts for debugging...');\n\n          // Show all Instagram posts for debugging\n          setAutoReplyPosts(response);\n          console.log('📋 Showing all Instagram posts for debugging:', response.length);\n\n          // Also try to sync from Instagram API\n          console.log('🔄 Attempting to sync from Instagram...');\n          try {\n            const syncResponse = await apiClient.syncInstagramPosts(selectedAccount.platform_user_id);\n            console.log('📡 Sync response:', syncResponse);\n\n            if (syncResponse.success) {\n              // Re-fetch posts after sync\n              const refreshedResponse = await apiClient.getPosts('instagram');\n              const refreshedAccountPosts = refreshedResponse.filter(post => {\n                // Primary match: social_account_id (most reliable)\n                const matchesAccountId = post.social_account?.id === selectedAccount.id;\n\n                // Secondary matches for compatibility\n                const matchesPlatformUserId = post.social_account?.platform_user_id === selectedAccount.platform_user_id;\n                const matchesUsername = post.social_account?.username === selectedAccount.username;\n\n                return matchesAccountId || matchesPlatformUserId || matchesUsername;\n              });\n\n              if (refreshedAccountPosts.length > 0) {\n                setAutoReplyPosts(refreshedAccountPosts);\n                console.log('✅ Posts loaded after sync:', refreshedAccountPosts.length);\n              } else {\n                console.log('⚠️ Still no posts found after sync. Showing all posts for debugging.');\n                setAutoReplyPosts(refreshedResponse);\n                setMessage('No posts found for this account. Showing all Instagram posts for debugging. Create some posts first using the Create Post tab.');\n              }\n            } else {\n              setMessage('Failed to sync posts from Instagram. Showing all posts for debugging.');\n            }\n          } catch (syncError) {\n            console.error('❌ Sync error:', syncError);\n            setMessage('Failed to sync posts from Instagram. Showing all posts for debugging.');\n          }\n        } else {\n          setAutoReplyPosts(accountPosts);\n          console.log('✅ Posts loaded for auto-reply selection:', accountPosts.length);\n        }\n      } else {\n        throw new Error('Failed to load posts');\n      }\n    } catch (error) {\n      console.error('❌ Error loading posts for auto-reply:', error);\n\n      // Provide more specific error messages\n      let errorMessage = 'Failed to load posts for auto-reply selection';\n      if (error.message.includes('404')) {\n        errorMessage = 'Instagram account not found. Please reconnect your Instagram account.';\n      } else if (error.message.includes('401')) {\n        errorMessage = 'Authentication failed. Please log in again.';\n      } else if (error.message.includes('500')) {\n        errorMessage = 'Server error. Please try again later.';\n      }\n\n      setMessage(errorMessage);\n    } finally {\n      setLoadingAutoReplyPosts(false);\n    }\n  };\n\n  const handlePostSelection = (postId) => {\n    setSelectedAutoReplyPosts(prev => {\n      if (prev.includes(postId)) {\n        return prev.filter(id => id !== postId);\n      } else {\n        return [...prev, postId];\n      }\n    });\n  };\n\n  const handlePostTouch = (postId, event) => {\n    event.preventDefault();\n    handlePostSelection(postId);\n  };\n\n  const selectAllPosts = () => {\n    const allPostIds = autoReplyPosts.map(post => post.id);\n    setSelectedAutoReplyPosts(allPostIds);\n  };\n\n  const deselectAllPosts = () => {\n    setSelectedAutoReplyPosts([]);\n  };\n\n\n\n  const handleSelectPosts = () => {\n    setIsSelectingPosts(true);\n    // Load posts when entering selection mode\n    if (autoReplyPosts.length === 0) {\n      loadPostsForAutoReply();\n    }\n  };\n\n  const handleDoneSelecting = () => {\n    setIsSelectingPosts(false);\n  };\n\n  const handleAutoReplyToggle = async () => {\n    if (!selectedAccount) {\n      setMessage('Please select an Instagram account first');\n      return;\n    }\n\n    // Check if posts are available when enabling\n    if (!autoReplyEnabled && autoReplyPosts.length === 0) {\n      setMessage('No posts available for auto-reply. Please create some posts first.');\n      return;\n    }\n\n    // If enabling auto-reply without selected posts, auto-select all posts\n    if (!autoReplyEnabled && selectedAutoReplyPosts.length === 0) {\n      const allPostIds = autoReplyPosts.map(post => post.id);\n      setSelectedAutoReplyPosts(allPostIds);\n      console.log('Auto-selecting all posts for auto-reply:', allPostIds);\n    }\n\n    // Add mobile-friendly confirmation for enabling auto-reply\n    if (!autoReplyEnabled) {\n      const isMobile = window.innerWidth <= 768;\n      const postCount = selectedAutoReplyPosts.length > 0 ? selectedAutoReplyPosts.length : autoReplyPosts.length;\n      const confirmMessage = isMobile\n        ? `Enable auto-reply for ${postCount} post(s)?`\n        : `Enable auto-reply for ${postCount} post(s)? AI will automatically reply to comments mentioning the commenter.`;\n\n      if (!window.confirm(confirmMessage)) {\n        return;\n      }\n    }\n\n    setAutoReplyLoading(true);\n    try {\n      console.log('🔄 Toggling auto-reply for Instagram account:', selectedAccount.platform_user_id, selectedAccount.username);\n      console.log('📝 Selected post IDs:', selectedAutoReplyPosts);\n      console.log('🎯 New state will be:', !autoReplyEnabled);\n\n      const response = await apiClient.toggleInstagramAutoReply(\n        selectedAccount.platform_user_id,\n        !autoReplyEnabled,\n        autoReplyTemplate,\n        selectedAutoReplyPosts\n      );\n\n      console.log('📡 Backend response:', response);\n\n      if (response.success) {\n        setAutoReplyEnabled(!autoReplyEnabled);\n\n        const successMessage = !autoReplyEnabled\n          ? isMobile()\n            ? `Auto-reply enabled for ${response.data?.selected_posts_count || selectedAutoReplyPosts.length} post(s)!`\n            : `Auto-reply enabled successfully for ${response.data?.selected_posts_count || selectedAutoReplyPosts.length} post(s)! AI will automatically reply to comments mentioning the commenter.`\n          : 'Auto-reply disabled successfully.';\n\n        setMessage(successMessage);\n\n        console.log('✅ Auto-reply toggled successfully:', {\n          enabled: !autoReplyEnabled,\n          selectedPostsCount: response.data?.selected_posts_count\n        });\n      } else {\n        throw new Error(response.error || 'Failed to toggle auto-reply');\n      }\n    } catch (error) {\n      console.error('❌ Auto-reply toggle error:', error);\n      setMessage('Error toggling auto-reply: ' + (error.message || 'Unknown error'));\n    } finally {\n      setAutoReplyLoading(false);\n    }\n  };\n\n  // Load auto-reply settings when account is selected\n  useEffect(() => {\n    console.log('🔍 DEBUG: Auto-reply useEffect triggered');\n    console.log('🔍 DEBUG: selectedAccount:', selectedAccount);\n    console.log('🔍 DEBUG: activeTab:', activeTab);\n    if (selectedAccount && activeTab === 'auto-reply') {\n      console.log('🔍 DEBUG: Loading auto-reply settings');\n      loadAutoReplySettings();\n    }\n  }, [selectedAccount, activeTab]);\n\n  // Persist auto-reply state on page refresh\n  useEffect(() => {\n    if (selectedAccount && autoReplyEnabled) {\n      // Re-validate auto-reply state with backend\n      const validateAutoReplyState = async () => {\n        try {\n          const rules = await apiClient.getAutomationRules('instagram', 'auto_reply');\n          const socialAccounts = await apiClient.getSocialAccounts();\n          const instagramAccount = socialAccounts.find(acc =>\n            acc.platform === 'instagram' && acc.platform_user_id === selectedAccount.platform_user_id\n          );\n\n          if (instagramAccount) {\n            const existingRule = rules.find(rule =>\n              rule.social_account_id === instagramAccount.id &&\n              rule.rule_type === 'AUTO_REPLY'\n            );\n\n            if (!existingRule || !existingRule.is_active) {\n              setAutoReplyEnabled(false);\n              setSelectedAutoReplyPosts([]);\n            }\n          }\n        } catch (error) {\n          console.error('Error validating auto-reply state:', error);\n        }\n      };\n\n      validateAutoReplyState();\n    }\n  }, [selectedAccount, autoReplyEnabled]);\n\n  // Load user media when account is selected\n  useEffect(() => {\n    if (selectedAccount && activeTab === 'post') {\n      loadUserMedia(selectedAccount.platform_user_id);\n    }\n  }, [selectedAccount, activeTab]);\n\n  // Load DM auto-reply settings when account is selected\n  useEffect(() => {\n    if (selectedAccount && activeTab === 'auto-reply') {\n      loadDmAutoReplySettings();\n    }\n  }, [selectedAccount, activeTab]);\n\n  // Add a useEffect to always load DM auto-reply settings when selectedAccount changes\n  useEffect(() => {\n    if (selectedAccount) {\n      loadDmAutoReplySettings();\n    }\n  }, [selectedAccount]);\n\n  // --- New: Scheduled Posts Grid State ---\n  const [scheduledGridRows, setScheduledGridRows] = useState([]);\n\n  // Show grid if redirected with scheduled posts\n  useEffect(() => {\n    if (location.state && location.state.scheduledGridRows) {\n      setScheduledGridRows(location.state.scheduledGridRows);\n    }\n  }, [location.state]);\n\n  // --- Auto-refresh scheduled posts grid ---\n  useEffect(() => {\n    let intervalId;\n    const fetchScheduledPosts = async () => {\n      try {\n        const posts = await apiClient.getScheduledPosts();\n        setScheduledGridRows(posts.filter(post => post.platform === 'instagram'));\n      } catch (err) { }\n    };\n    fetchScheduledPosts(); // Always fetch on mount\n    intervalId = setInterval(fetchScheduledPosts, 10000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // --- UI Render ---\n  if (authLoading) {\n    return <div className=\"instagram-container\"><div className=\"loading-screen\"><div className=\"loading-spinner\"></div><p>Checking authentication...</p></div></div>;\n  }\n  if (!isAuthenticated) {\n    return (\n      <div className=\"instagram-container\">\n        <div className=\"header-section\">\n          <button onClick={() => navigate('/')} className=\"back-button\">Back to Dashboard</button>\n          <h1 style=\"position: left\">Instagram Management</h1>\n          <p>Please log in to your account to connect and manage Instagram.</p>\n        </div>\n        <div className=\"auth-required\">\n          <div className=\"auth-icon\"></div>\n          <h2>Authentication Required</h2>\n          <p>You need to be logged in to use Instagram features. Please log in first.</p>\n        </div>\n      </div>\n    );\n  }\n  if (!sdkLoaded) {\n    return <div className=\"instagram-container\"><div className=\"loading-screen\"><div className=\"loading-spinner\"></div><p>Loading Instagram SDK...</p></div></div>;\n  }\n\n  return (\n    <div className=\"instagram-container\">\n      <div className=\"header-section\">\n  <button onClick={() => navigate('/')} className=\"back-button\">Back to Dashboard</button>\n  <div className=\"header-content\">\n    <div className=\"header-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n        <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n        <line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n      </svg>\n    </div>\n    <div className=\"header-text\">\n      <h1>Instagram Management</h1>\n      <p>Connect and manage your Instagram Business accounts</p>\n    </div>\n  </div>\n</div>\n      \n      {/* --- Moved: Global Auto-Reply Section --- */}\n      {isConnected && selectedAccount && (\n        <div className=\"global-auto-reply-section\" style={{\n          display: 'flex', alignItems: 'center', justifyContent: 'space-between',\n          background: '#fff', borderRadius: 12, boxShadow: '0 2px 8px rgba(0,0,0,0.04)',\n          padding: '18px 24px', marginBottom: 18, border: '1px solid #eee',\n          flexWrap: 'wrap', gap: 16\n        }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\n            <div style={{ width: 56, height: 56, borderRadius: '50%', overflow: 'hidden', background: '#f3f3f3', border: '1px solid #e0e0e0' }}>\n              {selectedAccount.profile_picture_url ? (\n                <img src={selectedAccount.profile_picture_url} alt={selectedAccount.username} style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n              ) : (\n                <div style={{ width: '100%', height: '100%', background: '#eee' }} />\n              )}\n            </div>\n            <div>\n              <div style={{ fontWeight: 600, fontSize: 18 }}>@{selectedAccount.username}</div>\n              <div style={{ color: '#888', fontSize: 14 }}>{selectedAccount.name}</div>\n              <div style={{ color: '#666', fontSize: 13, marginTop: 2 }}>\n                <span style={{ marginRight: 12 }}>\n                  <b>{selectedAccount.followers_count}</b> followers\n                </span>\n                <span>\n                  <b>{selectedAccount.media_count}</b> posts\n                </span>\n              </div>\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\n            <button\n              className=\"auto-reply-toggle-btn\"\n              onClick={handleGlobalAutoReplyToggle}\n              disabled={globalAutoReplyLoading}\n              style={{\n                display: 'flex', alignItems: 'center', gap: 10, fontWeight: 600,\n                background: globalAutoReplyEnabled ? '#38c172' : '#e0e0e0',\n                color: globalAutoReplyEnabled ? '#fff' : '#444',\n                border: 'none', borderRadius: 20, padding: '10px 22px', fontSize: 16,\n                cursor: globalAutoReplyLoading ? 'not-allowed' : 'pointer',\n                boxShadow: globalAutoReplyEnabled ? '0 2px 8px rgba(56,193,114,0.08)' : 'none',\n                transition: 'background 0.2s'\n              }}\n            >\n              <span style={{\n                display: 'inline-block', width: 14, height: 14, borderRadius: '50%',\n                background: globalAutoReplyEnabled ? '#2ecc40' : '#bbb',\n                marginRight: 6, border: globalAutoReplyEnabled ? '2px solid #fff' : '2px solid #ccc',\n                boxShadow: globalAutoReplyEnabled ? '0 0 4px #38c172' : 'none',\n                verticalAlign: 'middle',\n              }} />\n              Auto Comment Reply: {globalAutoReplyEnabled ? 'Enabled' : 'Disabled'}\n              {globalAutoReplyLoading && (\n                <span className=\"loading-spinner\" style={{ marginLeft: 10, width: 18, height: 18, border: '2px solid #fff', borderTop: '2px solid #38c172', borderRadius: '50%', display: 'inline-block', animation: 'spin 1s linear infinite' }} />\n              )}\n            </button>\n\n            {/* --- DM Auto-Reply Toggle Button --- */}\n            <button\n              className=\"auto-reply-toggle-btn\"\n              onClick={handleDmAutoReplyToggle}\n              disabled={dmAutoReplyLoading}\n              style={{\n                display: 'flex', alignItems: 'center', gap: 10, fontWeight: 600,\n                background: dmAutoReplyEnabled ? '#38c172' : '#e0e0e0',\n                color: dmAutoReplyEnabled ? '#fff' : '#444',\n                border: 'none', borderRadius: 20, padding: '10px 22px', fontSize: 16,\n                cursor: dmAutoReplyLoading ? 'not-allowed' : 'pointer',\n                boxShadow: dmAutoReplyEnabled ? '0 2px 8px rgba(56,193,114,0.08)' : 'none',\n                transition: 'background 0.2s'\n              }}\n            >\n              <span style={{\n                display: 'inline-block', width: 14, height: 14, borderRadius: '50%',\n                background: dmAutoReplyEnabled ? '#2ecc40' : '#bbb',\n                marginRight: 6, border: dmAutoReplyEnabled ? '2px solid #fff' : '2px solid #ccc',\n                boxShadow: dmAutoReplyEnabled ? '0 0 4px #38c172' : 'none',\n                verticalAlign: 'middle',\n              }} />\n              Auto DM Reply: {dmAutoReplyEnabled ? 'Enabled' : 'Disabled'}\n              {dmAutoReplyLoading && (\n                <span className=\"loading-spinner\" style={{ marginLeft: 10, width: 18, height: 18, border: '2px solid #fff', borderTop: '2px solid #38c172', borderRadius: '50%', display: 'inline-block', animation: 'spin 1s linear infinite' }} />\n              )}\n            </button>\n\n\n          </div>\n        </div>\n      )}\n      {message && <div className=\"status-message info\"><span className=\"message-text\">{message}</span></div>}\n      <div className=\"main-content\">\n        <div className=\"tab-navigation\">\n          <button className={`tab-button ${activeTab === 'connect' ? 'active' : ''}`} onClick={() => setActiveTab('connect')}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\n              <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\" />\n              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n            </svg>\n            Connect Account\n          </button>\n          <button className={`tab-button ${activeTab === 'post' ? 'active' : ''}`} onClick={() => setActiveTab('post')} disabled={!isConnected}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M12 20h9\" />\n              <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4 12.5-12.5z\" />\n            </svg>\n            Create Post\n          </button>\n          <button className={`tab-button ${activeTab === 'media' ? 'active' : ''}`} onClick={() => setActiveTab('media')} disabled={!isConnected || !selectedAccount}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" />\n              <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\" />\n              <polyline points=\"21,15 16,10 5,21\" />\n            </svg>\n            Media Gallery\n          </button>\n          <button\n            className={`tab-button ${activeTab === 'bulk-composer' ? 'active' : ''}`}\n            onClick={() => setActiveTab('bulk-composer')}\n            disabled={!isConnected || !selectedAccount}\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\" />\n              <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\" />\n              <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\" />\n              <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\" />\n            </svg>\n            Bulk Composer\n          </button>\n          <button className={`tab-button ${activeTab === 'scheduled-posts' ? 'active' : ''}`} onClick={() => setActiveTab('scheduled-posts')} disabled={!isConnected || !selectedAccount}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\n              <polyline points=\"12,6 12,12 16,14\" />\n            </svg>\n            Scheduled Posts\n          </button>\n        </div>\n        <div className=\"tab-content\">\n          {activeTab === 'connect' && (\n            <div className=\"connect-section\">\n              {!isConnected ? (\n                <div className=\"connection-card\">\n                  <div className=\"connection-icon\"></div>\n                  <h2>Connect Instagram Account</h2>\n                  <p>Connect your Instagram Business account through Facebook to start posting and managing content.</p>\n                  <button onClick={handleFacebookLogin} disabled={loading} className=\"connect-main-button\">{loading ? 'Connecting...' : 'Connect via Facebook'}</button>\n                  <div className=\"requirements-card\">\n                    <h3>Requirements</h3>\n                    <ul>\n                      <li>Instagram Business or Creator account</li>\n                      <li>Connected to a Facebook Page</li>\n                      <li>Admin access to the Facebook Page</li>\n                    </ul>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"connected-accounts\">\n                  <div className=\"accounts-header\">\n                    <h2>Connected Instagram Accounts</h2>\n                    <button onClick={handleLogout} className=\"logout-button\">Disconnect</button>\n                  </div>\n                  <div className=\"accounts-grid\">\n                    {instagramAccounts.map(account => (\n                      <div key={account.id} className={`account-card ${selectedAccount.id === account.id ? 'selected' : ''}`} onClick={() => setSelectedAccount(account)}>\n                        <div className=\"account-avatar\">{account.profile_picture_url ? <img src={account.profile_picture_url} alt={account.username} /> : <div className=\"avatar-placeholder\"></div>}</div>\n                        <div className=\"account-info\">\n                          <h3>@{account.username}</h3>\n                          <p>{account.name}</p>\n                          <div className=\"account-stats\"><span>{account.followers_count} followers</span><span>{account.media_count} posts</span></div>\n                        </div>\n                        {selectedAccount.id === account.id && <div className=\"selected-indicator\"></div>}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          {activeTab === 'post' && selectedAccount && (\n            <div className=\"post-section\">\n              <div className=\"post-type-toggle\">\n                <button className={postType === 'photo' ? 'active' : ''} onClick={() => setPostType('photo')}>\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" />\n                    <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\" />\n                    <polyline points=\"21,15 16,10 5,21\" />\n                  </svg>\n                  Photo\n                </button>\n                <button className={postType === 'carousel' ? 'active' : ''} onClick={() => setPostType('carousel')}>\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\" />\n                    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\" />\n                    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\" />\n                  </svg>\n                  Carousel\n                </button>\n                <button className={postType === 'reel' ? 'active' : ''} onClick={() => setPostType('reel')}>\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <polygon points=\"23 7 16 12 23 17 23 7\" />\n                    <rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\" />\n                  </svg>\n                  Reel\n                </button>\n              </div>\n              {/* Photo Post */}\n              {postType === 'photo' && (\n                <div className=\"post-card\">\n                  <div className=\"form-group\">\n                    <label>Image Source</label>\n                    <div className=\"image-source-toggle\">\n                      <button className={imageSource === 'ai' ? 'active' : ''} onClick={() => setImageSource('ai')}>AI</button>\n                      <button className={imageSource === 'upload' ? 'active' : ''} onClick={() => setImageSource('upload')}>Upload</button>\n                    </div>\n                  </div>\n                  {imageSource === 'ai' && (\n                    <div className=\"form-group\">\n                      <label>AI Prompt</label>\n                      <textarea\n                        value={aiPrompt}\n                        onChange={e => {\n                          setAiPrompt(e.target.value);\n                          // Clear generated content when prompt changes\n                          if (aiImageUrl) {\n                            setAiImageUrl('');\n                          }\n                          if (caption && !caption.trim().includes('Check out this amazing image!')) {\n                            setCaption('');\n                          }\n                        }}\n                        placeholder=\"Describe your image...\"\n                        rows={3}\n                        className=\"post-textarea\"\n                      />\n                      <div className=\"ai-buttons\">\n                        <button className=\"ai-generate-button\" onClick={handleGenerateAIImage} disabled={aiGenerating || !aiPrompt.trim() || rateLimitCooldown > 0}>\n                          {aiGenerating ? (\n                            <>\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" className=\"spinning\">\n                                <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\n                              </svg>\n                              Generating...\n                            </>\n                          ) : (\n                            <>\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                              </svg>\n                              Generate Image\n                            </>\n                          )}\n                        </button>\n                        <button className=\"ai-generate-button secondary\" onClick={handleGenerateImageAndCaption} disabled={aiGenerating || generatingCaption || !aiPrompt.trim() || rateLimitCooldown > 0}>\n                          {aiGenerating || generatingCaption ? (\n                            <>\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" className=\"spinning\">\n                                <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\n                              </svg>\n                              Generating...\n                            </>\n                          ) : (\n                            <>\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                              </svg>\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" />\n                                <polyline points=\"14,2 14,8 20,8\" />\n                                <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\n                                <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\n                              </svg>\n                              Generate Image & Caption\n                            </>\n                          )}\n                        </button>\n                        {message && message.includes('Error') && aiPrompt.trim() && (\n                          <button className=\"ai-generate-button retry\" onClick={handleRetryImageGeneration} disabled={aiGenerating || rateLimitCooldown > 0}>\n                            {aiGenerating ? 'Retrying...' : 'Retry Generation'}\n                          </button>\n                        )}\n                      </div>\n                      {rateLimitCooldown > 0 && (\n                        <div style={{ color: '#e53e3e', marginTop: 8, fontWeight: 500 }}>\n                          Too many requests. Please wait {Math.floor(rateLimitCooldown / 60)}:{(rateLimitCooldown % 60).toString().padStart(2, '0')} before trying again.\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {imageSource === 'upload' && (\n                    <div className=\"form-group image-upload\">\n                      <label>Select Image</label>\n                      <button\n                        type=\"button\"\n                        onClick={() => openFilePicker('photo', 'manual')}\n                        className=\"file-picker-button\"\n                        disabled={uploadingImage}\n                      >\n                        {uploadingImage ? (\n                          <>\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" className=\"spinning\">\n                              <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\n                            </svg>\n                            Uploading...\n                          </>\n                        ) : (\n                          <>\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n                              <polyline points=\"7,10 12,15 17,10\" />\n                              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\" />\n                            </svg>\n                            Choose Image\n                          </>\n                        )}\n                      </button>\n                      {uploadedImageUrl && (\n                        <div className=\"image-preview\">\n                          <img src={uploadedImageUrl} alt=\"Preview\" className=\"preview-image\" />\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  <div className=\"form-group\">\n                    <label>Caption</label>\n                    <div className=\"caption-section\">\n                      <div className=\"caption-toggle\">\n                        <label className=\"toggle-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={autoGenerateCaption}\n                            onChange={e => setAutoGenerateCaption(e.target.checked)}\n                          />\n                          <span className=\"toggle-text\">Auto Generate Caption</span>\n                        </label>\n                      </div>\n                      {autoGenerateCaption ? (\n                        <div className=\"caption-prompt-section\">\n                          <textarea\n                            value={captionPrompt}\n                            onChange={e => setCaptionPrompt(e.target.value)}\n                            placeholder=\"Describe what you want in the caption...\"\n                            rows={2}\n                            className=\"caption-prompt-textarea\"\n                          />\n                          <button\n                            onClick={handleAutoGenerateCaption}\n                            disabled={generatingCaption || !captionPrompt.trim()}\n                            className=\"generate-caption-button\"\n                          >\n                            {generatingCaption ? (\n                              <>\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" className=\"spinning\">\n                                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\n                                </svg>\n                                Generating...\n                              </>\n                            ) : (\n                              <>\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" />\n                                  <polyline points=\"14,2 14,8 20,8\" />\n                                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\n                                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\n                                </svg>\n                                Generate Caption\n                              </>\n                            )}\n                          </button>\n                        </div>\n                      ) : null}\n                      <textarea\n                        value={caption}\n                        onChange={e => setCaption(e.target.value)}\n                        placeholder={autoGenerateCaption ? \"Caption will be generated...\" : \"Write your caption...\"}\n                        rows={3}\n                        className=\"post-textarea\"\n                        disabled={autoGenerateCaption}\n                      />\n                    </div>\n                  </div>\n                  {(aiImageUrl || uploadedImageUrl) && <div className=\"generated-image\"><img src={aiImageUrl || uploadedImageUrl} alt=\"Preview\" /></div>}\n                  <button className=\"publish-button\" onClick={handlePublish} disabled={loading || !(aiImageUrl || uploadedImageUrl) || (!caption.trim() && !autoGenerateCaption)}>{loading ? 'Publishing...' : 'Publish Post'}</button>\n                </div>\n              )}\n              {/* Carousel Post */}\n              {postType === 'carousel' && (\n                <div className=\"post-card\">\n                  <div className=\"form-group\">\n                    <label>Carousel Mode</label>\n                    <div className=\"image-source-toggle\">\n                      <button\n                        className={imageSource === 'ai' ? 'active' : ''}\n                        onClick={() => setImageSource('ai')}\n                        disabled={carouselGenerating}\n                      >\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                        </svg>\n                        AI Generation\n                      </button>\n                      <button\n                        className={imageSource === 'upload' ? 'active' : ''}\n                        onClick={() => setImageSource('upload')}\n                        disabled={carouselGenerating}\n                      >\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n                          <polyline points=\"7,10 12,15 17,10\" />\n                          <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\" />\n                        </svg>\n                        Manual Upload\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Image Count Selector */}\n                  <div className=\"form-group\">\n                    <label>Number of Images: {carouselCount}</label>\n                    <input\n                      type=\"range\"\n                      min=\"3\"\n                      max=\"7\"\n                      value={carouselCount}\n                      onChange={(e) => setCarouselCount(parseInt(e.target.value))}\n                      className=\"slider\"\n                      disabled={carouselGenerating}\n                    />\n                    <div className=\"slider-labels\">\n                      <span>3</span>\n                      <span>4</span>\n                      <span>5</span>\n                      <span>6</span>\n                      <span>7</span>\n                    </div>\n                  </div>\n\n                  {/* AI Generation Mode */}\n                  {imageSource === 'ai' && (\n                    <div className=\"form-group\">\n                      <label>AI Prompt for Carousel</label>\n                      <textarea\n                        value={aiPrompt}\n                        onChange={(e) => setAiPrompt(e.target.value)}\n                        placeholder=\"Describe the carousel content you want to generate...\"\n                        rows=\"3\"\n                        className=\"post-textarea\"\n                        disabled={carouselGenerating}\n                      />\n                      <div className=\"ai-generation-note\">\n                        <small>\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" style={{ marginRight: '4px', verticalAlign: 'middle' }}>\n                            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                            <path d=\"M12 16v-4\" />\n                            <path d=\"M12 8h.01\" />\n                          </svg>\n                          Tip: Carousel generation takes 3-5 minutes for {carouselCount} images. Please be patient!\n                        </small>\n                      </div>\n                      <button\n                        className=\"generate-button\"\n                        onClick={async () => {\n                          if (!aiPrompt.trim()) {\n                            setMessage('Please enter a prompt for carousel generation.');\n                            return;\n                          }\n                          setCarouselGenerating(true);\n                          setMessage(`Generating ${carouselCount} carousel images with AI... This may take 3-5 minutes.`);\n                          try {\n                            const response = await apiClient.generateInstagramCarousel(aiPrompt.trim(), carouselCount);\n                            if (response && response.success && response.image_urls) {\n                              setCarouselImages(response.image_urls);\n                              setCarouselCaption(response.caption || '');\n                              setMessage(`AI carousel generated successfully with ${response.image_urls.length} images!`);\n                            } else {\n                              setMessage(response.error || 'Failed to generate carousel images.');\n                            }\n                          } catch (error) {\n                            console.error('Carousel generation error:', error);\n                            if (error.message && error.message.includes('timeout')) {\n                              setMessage('Carousel generation timed out. This can happen with complex prompts or when generating many images. Please try again with a simpler prompt or fewer images.');\n                            } else {\n                              setMessage('Error generating carousel: ' + (error.message || error.toString()));\n                            }\n                          } finally {\n                            setCarouselGenerating(false);\n                          }\n                        }}\n                        disabled={carouselGenerating || !aiPrompt.trim()}\n                      >\n                        {carouselGenerating ? (\n                          <>\n                            <div className=\"button-spinner\"></div>\n                            Generating {carouselCount} Images...\n                          </>\n                        ) : (\n                          <>\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                              <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                            </svg>\n                            Generate Carousel\n                          </>\n                        )}\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Manual Upload Mode */}\n                  {imageSource === 'upload' && (\n                    <div className=\"form-group\">\n                      <label>Upload Images (JPG/PNG)</label>\n                      <button\n                        type=\"button\"\n                        onClick={() => openFilePicker('photo', 'carousel')}\n                        className=\"file-picker-button\"\n                        disabled={carouselGenerating}\n                      >\n                        {carouselGenerating ? (\n                          <>\n                            <div className=\"button-spinner\"></div>\n                            Uploading...\n                          </>\n                        ) : (\n                          <>\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n                              <polyline points=\"7,10 12,15 17,10\" />\n                              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\" />\n                            </svg>\n                            Select {carouselCount} Images\n                          </>\n                        )}\n                      </button>\n                      <p className=\"file-upload-hint\">\n                        Select {carouselCount} images for your carousel\n                      </p>\n                    </div>\n                  )}\n\n                  {/* Caption Generation */}\n                  <div className=\"form-group\">\n                    <label>Caption</label>\n                    <div className=\"caption-section\">\n                      <div className=\"caption-toggle\">\n                        <label className=\"toggle-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={autoGenerateCaption}\n                            onChange={e => setAutoGenerateCaption(e.target.checked)}\n                          />\n                          <span className=\"toggle-text\">Auto Generate Caption</span>\n                        </label>\n                      </div>\n                      {autoGenerateCaption ? (\n                        <div className=\"caption-prompt-section\">\n                          <textarea\n                            value={captionPrompt}\n                            onChange={e => setCaptionPrompt(e.target.value)}\n                            placeholder=\"Describe what you want in the caption...\"\n                            rows={2}\n                            className=\"caption-prompt-textarea\"\n                          />\n                          <button\n                            onClick={handleCarouselAutoGenerateCaption}\n                            disabled={generatingCaption || !captionPrompt.trim()}\n                            className=\"generate-caption-button\"\n                          >\n                            {generatingCaption ? 'Generating...' : 'Generate Caption'}\n                          </button>\n                        </div>\n                      ) : null}\n                      <textarea\n                        value={carouselCaption}\n                        onChange={e => setCarouselCaption(e.target.value)}\n                        placeholder={autoGenerateCaption ? \"Caption will be generated...\" : \"Write your caption...\"}\n                        rows={3}\n                        className=\"post-textarea\"\n                        disabled={autoGenerateCaption}\n                      />\n                    </div>\n                  </div>\n\n                  {/* Carousel Preview */}\n                  {carouselImages.length > 0 && (\n                    <div className=\"carousel-preview-section\">\n                      <h4>Carousel Preview <span className=\"drag-hint\">(Drag to reorder)</span></h4>\n                      <div className=\"carousel-preview-grid\">\n                        {carouselImages.slice(0, carouselCount).map((url, index) => (\n                          <div \n                            key={index} \n                            className={`carousel-preview-item ${draggedIndex === index ? 'dragging' : ''}`}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, index)}\n                            onDragOver={handleDragOver}\n                            onDrop={(e) => handleDrop(e, index)}\n                            onDragEnd={handleDragEnd}\n                          >\n                            <img src={url} alt={`Carousel item ${index + 1}`} />\n                            <span className=\"carousel-item-number\">{index + 1}</span>\n                            <div className=\"drag-handle\">\n                              <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                <circle cx=\"9\" cy=\"12\" r=\"1\"/>\n                                <circle cx=\"9\" cy=\"5\" r=\"1\"/>\n                                <circle cx=\"9\" cy=\"19\" r=\"1\"/>\n                                <circle cx=\"15\" cy=\"12\" r=\"1\"/>\n                                <circle cx=\"15\" cy=\"5\" r=\"1\"/>\n                                <circle cx=\"15\" cy=\"19\" r=\"1\"/>\n                              </svg>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  <button\n                    className=\"publish-button\"\n                    onClick={async () => {\n                      if (!selectedAccount) {\n                        setMessage('Please select an Instagram account first.');\n                        return;\n                      }\n                      if (carouselImages.length < 3) {\n                        setMessage('Please add at least 3 images for carousel.');\n                        return;\n                      }\n                      if (!carouselCaption.trim() && !autoGenerateCaption) {\n                        setMessage('Please write a caption or enable auto-generate caption.');\n                        return;\n                      }\n                      if (autoGenerateCaption && !captionPrompt.trim()) {\n                        setMessage('Please provide a prompt for auto-generating caption.');\n                        return;\n                      }\n\n                      setLoading(true);\n                      setMessage('Publishing carousel post...');\n                      try {\n                        console.log('🔍 DEBUG: Carousel publish - selectedAccount:', selectedAccount);\n                        console.log('🔍 DEBUG: Carousel publish - carouselImages:', carouselImages);\n                        console.log('🔍 DEBUG: Carousel publish - carouselCount:', carouselCount);\n\n                        const finalCaption = autoGenerateCaption && captionPrompt.trim() ?\n                          await (async () => {\n                            const res = await apiClient.generateInstagramCaption(captionPrompt.trim());\n                            return res.content || carouselCaption || 'Check out this amazing carousel!';\n                          })() : carouselCaption;\n\n                        console.log('🔍 DEBUG: Carousel publish - finalCaption:', finalCaption);\n\n                        const response = await apiClient.postInstagramCarousel(\n                          selectedAccount.platform_user_id,\n                          finalCaption,\n                          carouselImages.slice(0, carouselCount)\n                        );\n\n                        if (response.success) {\n                          setMessage('Carousel post published successfully!');\n                          setCarouselImages([]);\n                          setCarouselCaption('');\n                          setCaptionPrompt('');\n                          setAutoGenerateCaption(false);\n                          setAiPrompt('');\n                          loadUserMedia(selectedAccount.platform_user_id);\n                        } else {\n                          setMessage('Failed to publish carousel: ' + (response.error || 'Unknown error'));\n                        }\n                      } catch (err) {\n                        setMessage('Error publishing carousel: ' + (err.message || err.toString()));\n                      } finally {\n                        setLoading(false);\n                      }\n                    }}\n                    disabled={loading || carouselImages.length < 3 || (!carouselCaption.trim() && !autoGenerateCaption)}\n                  >\n                    {loading ? 'Publishing...' : 'Publish Carousel'}\n                  </button>\n                </div>\n              )}\n              {/* Reel Post */}\n              {postType === 'reel' && (\n                <div className=\"post-card\">\n                  <div className=\"form-group\">\n  <label>Upload Reel Video (.mp4, .mov)</label>\n  <div className=\"file-input-wrapper\">\n    <input \n      type=\"file\" \n      accept=\"video/mp4,video/quicktime,.mp4,.mov\" \n      onChange={handleReelFileChange} \n      disabled={reelUploading}\n      id=\"reel-video-input\"\n      style={{ display: 'none' }}\n    />\n    <label \n      htmlFor=\"reel-video-input\" \n      className=\"file-picker-button\"\n      style={{ opacity: reelUploading ? 0.6 : 1, cursor: reelUploading ? 'not-allowed' : 'pointer' }}\n    >\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n        <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n        <polyline points=\"7,10 12,15 17,10\"/>\n        <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\n      </svg>\n      {reelUploading ? 'Uploading...' : 'Choose Video File'}\n    </label>\n  </div>\n  {reelUrl && (\n    <div className=\"video-preview\">\n      <video src={reelUrl} controls style={{ width: '100%', maxHeight: '300px' }} />\n    </div>\n  )}\n</div>\n\n<div className=\"form-group\">\n  <label>Upload Reel Thumbnail (optional):</label>\n  <div className=\"file-input-wrapper\">\n    <input \n      type=\"file\" \n      accept=\"image/png,image/jpeg,image/jpg\" \n      onChange={handleReelThumbnailChange} \n      disabled={!reelUrl}\n      id=\"reel-thumbnail-input\"\n      style={{ display: 'none' }}\n    />\n    <label \n      htmlFor=\"reel-thumbnail-input\" \n      className=\"file-picker-button\"\n      style={{ opacity: !reelUrl ? 0.6 : 1, cursor: !reelUrl ? 'not-allowed' : 'pointer' }}\n    >\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n        <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n        <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"/>\n        <polyline points=\"21,15 16,10 5,21\"/>\n      </svg>\n      Choose Thumbnail\n    </label>\n  </div>\n  {reelThumbnailUrl && (\n    <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginTop: 8 }}>\n      <img \n        src={reelThumbnailUrl} \n        alt=\"Reel Thumbnail Preview\" \n        style={{ maxWidth: 120, borderRadius: 8, border: '1px solid #eee' }} \n      />\n      <button \n        type=\"button\" \n        onClick={() => { \n          setReelThumbnailUrl(''); \n          setReelThumbnailFilename(''); \n          setReelThumbnailFile(null); \n        }} \n        style={{ \n          background: 'transparent', \n          border: '1px solid #e53e3e', \n          cursor: 'pointer', \n          color: '#e53e3e', \n          fontSize: 18,\n          borderRadius: '4px',\n          width: '28px',\n          height: '28px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }} \n        title=\"Remove thumbnail\"\n      >\n        &times;\n      </button>\n    </div>\n  )}\n</div>\n                  <div className=\"form-group\">\n                    <label>Caption</label>\n                    <div className=\"caption-section\">\n                      <div className=\"caption-toggle\">\n                        <label className=\"toggle-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={reelAutoGenerateCaption}\n                            onChange={e => setReelAutoGenerateCaption(e.target.checked)}\n                          />\n                          <span className=\"toggle-text\">Auto Generate Caption</span>\n                        </label>\n                      </div>\n                      {reelAutoGenerateCaption ? (\n                        <div className=\"caption-prompt-section\">\n                          <textarea\n                            value={reelCaptionPrompt}\n                            onChange={e => setReelCaptionPrompt(e.target.value)}\n                            placeholder=\"Describe what you want in the caption...\"\n                            rows={2}\n                            className=\"caption-prompt-textarea\"\n                          />\n                          <button\n                            onClick={handleReelAutoGenerateCaption}\n                            disabled={generatingReelCaption || !reelCaptionPrompt.trim()}\n                            className=\"generate-caption-button\"\n                          >\n                            {generatingReelCaption ? 'Generating...' : 'Generate Caption'}\n                          </button>\n                        </div>\n                      ) : null}\n                      <textarea\n                        value={reelCaption}\n                        onChange={e => setReelCaption(e.target.value)}\n                        placeholder={reelAutoGenerateCaption ? \"Caption will be generated...\" : \"Write your caption...\"}\n                        rows={3}\n                        className=\"post-textarea\"\n                        disabled={reelAutoGenerateCaption}\n                      />\n                    </div>\n                  </div>\n                  <button className=\"publish-button\" onClick={handlePublish} disabled={loading || !reelUrl || (!reelCaption.trim() && !reelAutoGenerateCaption)}>{loading ? 'Publishing...' : 'Publish Reel'}</button>\n                </div>\n              )}\n            </div>\n          )}\n          {activeTab === 'media' && selectedAccount && (\n            <div className=\"media-section\">\n              <div className=\"media-header\"><h2>Recent Posts</h2><p>Your latest Instagram content</p></div>\n              {loadingMedia ? <div className=\"loading-media\"><div className=\"loading-spinner\"></div><p>Loading media...</p></div> : userMedia.length > 0 ? <div className=\"media-grid\">{userMedia.slice(0, 12).map((media) => <div key={media.id} className=\"media-item\"><div className=\"media-content\">{media.media_type === 'IMAGE' ? <img src={media.media_url} alt=\"Instagram post\" /> : media.media_type === 'VIDEO' ? <video controls><source src={media.media_url} type=\"video/mp4\" /></video> : null}</div><div className=\"media-overlay\"><div className=\"media-info\"><p className=\"media-caption\">{media.caption ? media.caption.substring(0, 100) + '...' : 'No caption'}</p><p className=\"media-date\">{new Date(media.timestamp).toLocaleDateString()}</p></div></div></div>)}</div> : <div className=\"no-media\"><h3>No Media Found</h3><p>No media found for this account. Start creating posts to see them here!</p></div>}\n            </div>\n          )}\n          {activeTab === 'bulk-composer' && selectedAccount && (\n            <IgBulkComposer selectedAccount={selectedAccount} onClose={() => { }} />\n          )}\n          {activeTab === 'scheduled-posts' && (\n            <ScheduledPostHistory />\n          )}\n        </div>\n      </div>\n\n      {/* Google Drive Modal */}\n      {showDriveModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowDriveModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Select from Google Drive</h3>\n              <button onClick={() => setShowDriveModal(false)} className=\"modal-close\">&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              {!driveAuthenticated ? (\n                <div className=\"drive-auth\">\n                  <p>Connect to Google Drive to select files</p>\n                  <button onClick={authenticateGoogleDrive} disabled={driveAuthLoading} className=\"auth-button\">\n                    {driveAuthLoading ? 'Connecting...' : 'Connect Google Drive'}\n                  </button>\n                </div>\n              ) : (\n                <div className=\"drive-files\">\n                  {loadingDriveFiles ? (\n                    <div className=\"loading-files\">\n                      <div className=\"loading-spinner\"></div>\n                      <p>Loading files...</p>\n                    </div>\n                  ) : driveFiles.length > 0 ? (\n                    <div className=\"files-grid\">\n                      {driveFiles.map((file) => (\n                        <div key={file.id} className=\"file-item\" onClick={() => handleDriveFileSelect(file.id, file.name)}>\n                          {file.thumbnailLink ? (\n                            <img src={file.thumbnailLink} alt={file.name} className=\"file-thumbnail\" />\n                          ) : (\n                            <div className=\"file-icon\"></div>\n                          )}\n                          <div className=\"file-info\">\n                            <p className=\"file-name\">{file.name}</p>\n                            <p className=\"file-size\">{file.size ? `${Math.round(file.size / 1024)} KB` : 'Unknown size'}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"no-files\">\n                      <p>No image files found in Google Drive</p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* File Picker Modal */}\n      {showFilePicker && (\n        <div className=\"modal-overlay\" onClick={closeFilePicker}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Select {filePickerType === 'photo' ? 'Photo' : 'Video'}</h3>\n              <button onClick={closeFilePicker} className=\"modal-close\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n                  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n                </svg>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"file-picker-options\">\n                <div\n                  className=\"file-option\"\n                  onClick={() => document.getElementById('local-file-input').click()}\n                  onTouchStart={(e) => e.preventDefault()}\n                >\n                  <div className=\"file-option-icon\">\n                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n                      <polyline points=\"7,10 12,15 17,10\" />\n                      <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\" />\n                    </svg>\n                  </div>\n                  <div className=\"file-option-content\">\n                    <h4>From Device</h4>\n                    <p>Select a file from your computer</p>\n                  </div>\n                </div>\n\n                <div\n                  className={`file-option ${!googleDriveAvailable ? 'disabled' : ''}`}\n                  onClick={handleGoogleDriveSelect}\n                  onTouchStart={(e) => {\n                    if (!googleDriveAvailable) {\n                      e.preventDefault();\n                      return;\n                    }\n                    e.preventDefault();\n                    handleGoogleDriveSelect();\n                  }}\n                >\n                  <div className=\"file-option-icon\">\n                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\" />\n                    </svg>\n                  </div>\n                  <div className=\"file-option-content\">\n                    <h4>From Google Drive</h4>\n                    <p>\n                      {googleDriveAvailable\n                        ? 'Select a file from your Google Drive'\n                        : 'Google Drive not configured. See setup guide.'\n                      }\n                    </p>\n                    {isLoadingGoogleDrive && (\n                      <div className=\"loading-indicator\">\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\n                        </svg>\n                        Loading...\n                      </div>\n                    )}\n                    {!googleDriveAvailable && (\n                      <div className=\"unavailable-indicator\">\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                          <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n                          <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n                        </svg>\n                        Not Available\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Hidden file input for local file selection */}\n              <input\n                id=\"local-file-input\"\n                type=\"file\"\n                accept={filePickerType === 'photo' ? 'image/*' : 'video/*'}\n                multiple={filePickerFormType === 'carousel'}\n                onChange={handleLocalFileSelect}\n                style={{ display: 'none' }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {globalAutoReplyEnabled && globalAutoReplyProgress && (\n        <div className=\"auto-reply-progress\" style={{ margin: '16px 0', padding: '12px', background: '#f5f5f5', borderRadius: '8px' }}>\n          <p><strong>Auto-Reply Progress:</strong> {globalAutoReplyProgress.status}</p>\n          {globalAutoReplyProgress.status === 'processing' && (\n            <p>Processing post {globalAutoReplyProgress.current_post} of {globalAutoReplyProgress.total_posts}, comment {globalAutoReplyProgress.current_comment} of {globalAutoReplyProgress.total_comments}</p>\n          )}\n          {globalAutoReplyProgress.status === 'done' && <p>All comments processed!</p>}\n          {globalAutoReplyProgress.details && <p>{globalAutoReplyProgress.details}</p>}\n        </div>\n      )}\n      {apiError && (\n        <div className=\"api-error\" style={{ color: 'red', margin: '12px 0' }}>\n          <p>Error: {apiError}</p>\n          <button onClick={() => { setApiError(null); setRetrying(true); setTimeout(() => { setRetrying(false); window.location.reload(); }, 500); }}>Retry</button>\n          {retrying && <span>Retrying...</span>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InstagramPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}