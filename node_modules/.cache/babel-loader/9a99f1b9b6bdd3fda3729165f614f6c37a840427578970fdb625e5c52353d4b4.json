{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THORSIGNIA\\\\Projects\\\\automation-dash\\\\frontend\\\\src\\\\components\\\\igBulkComposer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport apiClient from '../services/apiClient';\nimport { fileToBase64 } from './FacebookUtils';\nimport './igBulkComposer.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction IgBulkComposer({\n  selectedAccount,\n  onClose\n}) {\n  _s();\n  var _mediaPreviewModal$me, _mediaPreviewModal$me2;\n  const {\n    user\n  } = useAuth();\n\n  // Strategy step state\n  const [strategyData, setStrategyData] = useState({\n    promptTemplate: '',\n    customStrategyTemplate: '',\n    brandName: '',\n    hookIdea: '',\n    features: '',\n    location: '',\n    phone: '',\n    website: '',\n    callToAction: '',\n    imagePrompt: '',\n    startDate: '',\n    endDate: '',\n    frequency: 'daily',\n    customCron: '',\n    timeSlot: '09:00'\n  });\n\n  // Composer grid state\n  const [composerRows, setComposerRows] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [editingCell, setEditingCell] = useState(null);\n  const [dragStartRow, setDragStartRow] = useState(null);\n\n  // Post type state\n  const [postType, setPostType] = useState('photo'); // photo, carousel, reel\n  const [carouselImageCount, setCarouselImageCount] = useState(3);\n\n  // Calendar preview state\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  // Queue state\n  const [isScheduling, setIsScheduling] = useState(false);\n  const [scheduleProgress, setScheduleProgress] = useState(0);\n\n  // Expanded view state\n  const [expandedCaption, setExpandedCaption] = useState(null);\n  const [mediaPreviewModal, setMediaPreviewModal] = useState(null);\n  const [scheduledGridRows, setScheduledGridRows] = useState([]);\n  const navigate = useNavigate();\n\n  // Prompt templates for Instagram\n  const [promptTemplates] = useState([{\n    id: 1,\n    name: 'Daily Inspiration',\n    prompt: 'Share an inspiring quote or motivational message for your Instagram audience'\n  }, {\n    id: 2,\n    name: 'Product Showcase',\n    prompt: 'Highlight your best products with engaging descriptions and hashtags'\n  }, {\n    id: 3,\n    name: 'Behind the Scenes',\n    prompt: 'Share behind-the-scenes content about your business or team'\n  }, {\n    id: 4,\n    name: 'Customer Spotlight',\n    prompt: 'Feature customer testimonials or success stories'\n  }, {\n    id: 5,\n    name: 'Industry Tips',\n    prompt: 'Share valuable tips and insights related to your industry'\n  }, {\n    id: 6,\n    name: 'Lifestyle Content',\n    prompt: 'Share lifestyle content that resonates with your audience'\n  }, {\n    id: 7,\n    name: 'User Generated Content',\n    prompt: 'Repost and credit amazing content from your community'\n  }, {\n    id: 8,\n    name: 'Custom',\n    prompt: 'custom'\n  }]);\n  const gridRef = useRef(null);\n  const carouselInputRefs = useRef({});\n\n  // Initialize composer with default rows\n  useEffect(() => {\n    if (strategyData.startDate && strategyData.frequency) {\n      generateInitialRows();\n    }\n    // eslint-disable-next-line\n  }, [strategyData.startDate, strategyData.endDate, strategyData.frequency, strategyData.timeSlot]);\n  const generateInitialRows = () => {\n    if (!strategyData.startDate) return;\n    const startDateParts = strategyData.startDate.split('-');\n    const startDate = new Date(parseInt(startDateParts[0]), parseInt(startDateParts[1]) - 1, parseInt(startDateParts[2]));\n    let endDate = null;\n    if (strategyData.endDate) {\n      const endDateParts = strategyData.endDate.split('-');\n      endDate = new Date(parseInt(endDateParts[0]), parseInt(endDateParts[1]) - 1, parseInt(endDateParts[2]));\n    }\n    const rows = [];\n    const maxDays = 30; // Instagram's 30-day limit\n    let currentDate = new Date(startDate);\n    let dayCount = 0;\n    let rowCount = 0;\n    if (!endDate) {\n      const formattedDate = startDate.toISOString().split('T')[0];\n      rows.push({\n        id: `row-0`,\n        caption: '',\n        mediaFile: null,\n        mediaPreview: null,\n        postType: postType.toLowerCase(),\n        carouselImageCount: carouselImageCount,\n        carouselImages: [],\n        scheduledDate: formattedDate,\n        scheduledTime: strategyData.timeSlot,\n        status: 'draft',\n        isSelected: false\n      });\n    } else {\n      // Fix: include the end date by using <= in the comparison\n      while (dayCount < maxDays && rowCount < 30) {\n        if (endDate && currentDate > endDate) break;\n        const maxAllowedDate = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);\n        if (currentDate > maxAllowedDate) break;\n        let shouldInclude = false;\n        switch (strategyData.frequency) {\n          case 'daily':\n            shouldInclude = true;\n            break;\n          case 'weekly':\n            shouldInclude = currentDate.getDay() === startDate.getDay();\n            break;\n          case 'monthly':\n            shouldInclude = currentDate.getDate() === startDate.getDate();\n            break;\n          case 'custom':\n            shouldInclude = true;\n            break;\n          default:\n            shouldInclude = true;\n        }\n        if (shouldInclude) {\n          // Format as YYYY-MM-DD using local date parts\n          const yyyy = currentDate.getFullYear();\n          const mm = String(currentDate.getMonth() + 1).padStart(2, '0');\n          const dd = String(currentDate.getDate()).padStart(2, '0');\n          const formattedDate = `${yyyy}-${mm}-${dd}`;\n          rows.push({\n            id: `row-${rowCount}`,\n            caption: '',\n            mediaFile: null,\n            mediaPreview: null,\n            postType: postType.toLowerCase(),\n            carouselImageCount: carouselImageCount,\n            carouselImages: [],\n            scheduledDate: formattedDate,\n            scheduledTime: strategyData.timeSlot,\n            status: 'draft',\n            isSelected: false\n          });\n          rowCount++;\n        }\n        // Fix: increment date at the end, and break if we've reached the end date\n        if (endDate && currentDate.getTime() === endDate.getTime()) break;\n        currentDate.setDate(currentDate.getDate() + 1);\n        dayCount++;\n      }\n    }\n    setComposerRows(rows);\n  };\n  const handleStrategyChange = (field, value) => {\n    setStrategyData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n      // If start date is changed and end date is before it, clear end date\n      if (field === 'startDate' && prev.endDate && value > prev.endDate) {\n        newData.endDate = '';\n      }\n      return newData;\n    });\n\n    // If prompt template is selected, apply it to all rows\n    if (field === 'promptTemplate' && value && value !== 'custom') {\n      setComposerRows(prev => prev.map(row => ({\n        ...row,\n        caption: value\n      })));\n    }\n  };\n\n  // Update post type for all rows\n  const handlePostTypeChange = newPostType => {\n    setPostType(newPostType);\n    setComposerRows(prev => prev.map(row => ({\n      ...row,\n      postType: newPostType.toLowerCase(),\n      carouselImageCount: newPostType === 'carousel' ? carouselImageCount : null,\n      carouselImages: newPostType === 'carousel' ? row.carouselImages || [] : [],\n      // Clear media for photo/reel when switching to carousel\n      mediaFile: newPostType === 'carousel' ? null : row.mediaFile,\n      mediaPreview: newPostType === 'carousel' ? null : row.mediaPreview\n    })));\n  };\n\n  // Update carousel image count for all rows\n  const handleCarouselImageCountChange = newCount => {\n    setCarouselImageCount(newCount);\n    setComposerRows(prev => prev.map(row => ({\n      ...row,\n      carouselImageCount: row.postType === 'carousel' ? newCount : row.carouselImageCount\n    })));\n  };\n  const handleRowSelect = rowId => {\n    setSelectedRows(prev => prev.includes(rowId) ? prev.filter(id => id !== rowId) : [...prev, rowId]);\n  };\n  const handleSelectAll = () => {\n    if (selectedRows.length === composerRows.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(composerRows.map(row => row.id));\n    }\n  };\n  const handleCellEdit = (rowId, field, value) => {\n    setComposerRows(prev => prev.map(row => row.id === rowId ? {\n      ...row,\n      [field]: field === 'postType' ? value.toLowerCase() : value,\n      status: (() => {\n        // For carousel posts, check if we have enough images\n        if (field === 'postType' && value.toLowerCase() === 'carousel') {\n          return 'draft'; // Reset status when switching to carousel\n        }\n\n        // For carousel posts, validate image count\n        if (row.postType === 'carousel') {\n          const hasCaption = (row.caption || '').trim();\n          const hasEnoughImages = (row.carouselImages || []).length >= 3;\n          return hasCaption && hasEnoughImages ? 'ready' : 'draft';\n        }\n\n        // For other post types, use existing logic\n        if (field === 'caption' || field === 'mediaFile' || field === 'mediaPreview') {\n          const hasCaption = field === 'caption' ? value.trim() : (row.caption || '').trim();\n          const hasMedia = field === 'mediaFile' ? value : row.mediaFile || row.mediaPreview;\n          return hasCaption && hasMedia ? 'ready' : 'draft';\n        }\n        return row.status;\n      })()\n    } : row));\n  };\n  const handleMediaUpload = async (rowId, event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Find the row to determine post type\n    const row = composerRows.find(r => r.id === rowId);\n    if (!row) return;\n\n    // --- REELS VIDEO UPLOAD LOGIC ---\n    if (row.postType === 'reel') {\n      alert('Your video is converted to: 1080x1920 as instagram policy.');\n      // Proceed to upload to backend as before...\n    }\n\n    // --- PHOTO/CAROUSEL LOGIC (unchanged) ---\n    const reader = new FileReader();\n    reader.onload = e => {\n      setComposerRows(prev => prev.map(row => row.id === rowId ? {\n        ...row,\n        mediaFile: file,\n        mediaPreview: e.target.result,\n        status: (row.caption || '').trim() ? 'ready' : 'draft'\n      } : row));\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleGenerateMedia = async rowId => {\n    try {\n      const row = composerRows.find(r => r.id === rowId);\n      if (!row || !(row.caption || '').trim()) {\n        alert('Please add a caption first to generate an image.');\n        return;\n      }\n      console.log(`Generating image for row ${rowId} with caption: ${row.caption.substring(0, 50)}...`);\n\n      // Truncate caption to 500 characters for image generation\n      const imagePrompt = row.caption.trim().substring(0, 500);\n      console.log(`Using image prompt (truncated): ${imagePrompt.substring(0, 100)}...`);\n      const response = await apiClient.generateInstagramImage(imagePrompt, 'feed');\n      if (response.success && response.data && response.data.image_url) {\n        console.log(`Successfully generated image for row ${rowId}:`, response.data.image_url);\n        setComposerRows(prev => prev.map(r => r.id === rowId ? {\n          ...r,\n          mediaFile: null,\n          mediaPreview: response.data.image_url,\n          status: (r.caption || '').trim() ? 'ready' : 'draft'\n        } : r));\n      } else {\n        console.log(`Failed to generate image for row ${rowId}:`, response);\n        alert('Failed to generate image. Please try again.');\n      }\n    } catch (error) {\n      console.error(`Error generating image for row ${rowId}:`, error);\n      alert('Failed to generate image. Please try again.');\n    }\n  };\n  const handleGenerateAllCaptions = async () => {\n    if (selectedRows.length === 0) {\n      alert('Please select at least one row to generate captions for.');\n      return;\n    }\n    if (!strategyData.promptTemplate) {\n      alert('Please select a strategy template first.');\n      return;\n    }\n    setIsScheduling(true);\n    setScheduleProgress(0);\n    try {\n      const selectedComposerRows = composerRows.filter(row => selectedRows.includes(row.id));\n      const captions = [];\n\n      // Create the base prompt based on the selected template type\n      let prompt = '';\n      if (strategyData.promptTemplate === 'custom') {\n        // Build a detailed prompt for custom templates\n        prompt = `\n          Brand Name: ${strategyData.brandName || 'Not specified'}\n          Hook Idea: ${strategyData.hookIdea || 'Not specified'}\n          Key Features: ${strategyData.features || 'Not specified'}\n          Location: ${strategyData.location || 'Not specified'}\n          Phone: ${strategyData.phone || 'Not specified'}\n          Website: ${strategyData.website || 'Not specified'}\n          Call to Action: ${strategyData.callToAction || 'Not specified'}\n          Image Prompt: ${strategyData.imagePrompt || 'Not specified'}\n          \n          Custom Template:\n          ${strategyData.customStrategyTemplate || ''}\n        `;\n      } else {\n        // Use the selected predefined template\n        const selectedTemplate = promptTemplates.find(t => t.prompt === strategyData.promptTemplate);\n        if (!selectedTemplate) {\n          alert('Invalid strategy template selected.');\n          setIsScheduling(false);\n          return;\n        }\n        prompt = selectedTemplate.prompt;\n      }\n\n      // Generate captions for each selected row\n      for (let i = 0; i < selectedComposerRows.length; i++) {\n        try {\n          const row = selectedComposerRows[i];\n          const context = {\n            scheduledDate: row.scheduledDate\n            // Add any other context you want to include\n          };\n\n          // Add context to the prompt\n          const fullPrompt = `${prompt}\\n\\nContext: ${JSON.stringify(context, null, 2)}`;\n          const captionResponse = await apiClient.generateInstagramCaption(fullPrompt);\n          if (captionResponse.success) {\n            captions.push({\n              content: captionResponse.content || captionResponse.generated_text || 'No content generated',\n              context: context.scheduledDate,\n              success: true\n            });\n          } else {\n            console.error('Caption generation failed:', captionResponse.error);\n            captions.push({\n              content: `Failed to generate caption for: ${context.scheduledDate}`,\n              context: context.scheduledDate,\n              success: false,\n              error: captionResponse.error || 'Unknown error'\n            });\n          }\n        } catch (error) {\n          console.error('Error generating caption:', error);\n          captions.push({\n            content: `Error generating caption for: ${selectedComposerRows[i].scheduledDate}`,\n            context: selectedComposerRows[i].scheduledDate,\n            success: false,\n            error: error.message\n          });\n        }\n\n        // Update progress\n        setScheduleProgress(Math.round((i + 1) / selectedComposerRows.length * 100));\n      }\n\n      // Update the rows with generated captions\n      setComposerRows(prev => prev.map(row => {\n        if (!selectedRows.includes(row.id)) return row;\n        const caption = captions.find(c => c.context === row.scheduledDate);\n        if (caption && caption.success) {\n          return {\n            ...row,\n            caption: caption.content,\n            status: 'ready'\n          };\n        }\n        return row;\n      }));\n\n      // Show success/failure summary\n      const successCount = captions.filter(c => c.success).length;\n      const failedCount = captions.length - successCount;\n      let message = '';\n      if (successCount > 0 && failedCount === 0) {\n        message = `Successfully generated captions for ${successCount} ${successCount === 1 ? 'post' : 'posts'}.`;\n      } else if (successCount > 0) {\n        message = `Generated ${successCount} captions successfully, but failed to generate ${failedCount}.`;\n      } else {\n        message = 'Failed to generate any captions. Please try again.';\n      }\n      alert(message);\n    } catch (error) {\n      console.error('Unexpected error in handleGenerateAllCaptions:', error);\n      alert('An unexpected error occurred while generating captions. Please try again.');\n    } finally {\n      setIsScheduling(false);\n      setScheduleProgress(0);\n    }\n  };\n  const handleGenerateAllImages = async () => {\n    if (selectedRows.length === 0) {\n      alert('Please select at least one row to generate images.');\n      return;\n    }\n    setIsScheduling(true);\n    setScheduleProgress(0);\n    try {\n      const selectedComposerRows = composerRows.filter(row => selectedRows.includes(row.id));\n      let successCount = 0;\n      let errorCount = 0;\n      for (let i = 0; i < selectedComposerRows.length; i++) {\n        const row = selectedComposerRows[i];\n        if (!row.caption || !(row.caption || '').trim()) {\n          console.log(`Skipping image generation for row ${row.id} - no caption available`);\n          continue;\n        }\n        try {\n          console.log(`Generating image for row ${row.id} with caption: ${row.caption.substring(0, 50)}...`);\n\n          // Truncate caption to 500 characters for image generation\n          const imagePrompt = row.caption.trim().substring(0, 500);\n          console.log(`Using image prompt (truncated): ${imagePrompt.substring(0, 100)}...`);\n\n          // Generate image using Stability AI with the caption as prompt\n          const response = await apiClient.generateInstagramImage(imagePrompt, 'feed');\n          if (response.success && response.data && response.data.image_url) {\n            console.log(`Successfully generated image for row ${row.id}:`, response.data.image_url);\n            setComposerRows(prev => prev.map(r => r.id === row.id ? {\n              ...r,\n              mediaFile: null,\n              mediaPreview: response.data.image_url,\n              status: (r.caption || '').trim() ? 'ready' : 'draft'\n            } : r));\n            successCount++;\n          } else {\n            console.log(`Failed to generate image for row ${row.id}:`, response);\n            errorCount++;\n          }\n        } catch (error) {\n          console.error(`Error generating image for row ${row.id}:`, error);\n          errorCount++;\n        }\n      }\n      if (successCount > 0) {\n        alert(`Image generation completed! Successfully generated ${successCount} images${errorCount > 0 ? `, ${errorCount} failed` : ''}`);\n      } else {\n        alert('Failed to generate any images. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error in bulk image generation:', error);\n      alert('Failed to generate images. Please try again.');\n    } finally {\n      setIsScheduling(false);\n      setScheduleProgress(0);\n    }\n  };\n  const handleExpandCaption = rowId => {\n    const row = composerRows.find(r => r.id === rowId);\n    if (row) setExpandedCaption(row);\n  };\n  const handleViewMedia = rowId => {\n    const row = composerRows.find(r => r.id === rowId);\n    if (row && (row.mediaPreview || row.mediaFile)) setMediaPreviewModal(row);\n  };\n  const handleSaveExpandedCaption = (rowId, newCaption) => {\n    setComposerRows(prev => prev.map(row => row.id === rowId ? {\n      ...row,\n      caption: newCaption,\n      status: (newCaption || '').trim() && (row.mediaFile || row.mediaPreview) ? 'ready' : 'draft'\n    } : row));\n    setExpandedCaption(null);\n  };\n  const handleRemoveMedia = rowId => {\n    setComposerRows(prev => prev.map(row => row.id === rowId ? {\n      ...row,\n      mediaFile: null,\n      mediaPreview: null,\n      carouselImages: row.postType === 'carousel' ? [] : null,\n      status: (row.caption || '').trim() ? 'draft' : 'draft'\n    } : row));\n  };\n  const handleGenerateCarousel = async rowId => {\n    try {\n      const row = composerRows.find(r => r.id === rowId);\n      if (!row || !(row.caption || '').trim()) {\n        alert('Please add a caption first to generate carousel images.');\n        return;\n      }\n      console.log(`Generating carousel for row ${rowId} with caption: ${row.caption.substring(0, 50)}...`);\n      const imagePrompt = row.caption.trim().substring(0, 500);\n      const imageCount = row.carouselImageCount || 3;\n      if (imageCount < 3 || imageCount > 7) {\n        alert('Carousel must have between 3 and 7 images.');\n        return;\n      }\n      console.log(`🎨 Generating ${imageCount} carousel images with prompt: ${imagePrompt}`);\n      const response = await apiClient.generateInstagramCarousel(imagePrompt, imageCount);\n      if (response.success && response.image_urls && response.image_urls.length >= 3) {\n        console.log(`Successfully generated carousel for row ${rowId}:`, response.image_urls);\n        setComposerRows(prev => prev.map(r => r.id === rowId ? {\n          ...r,\n          carouselImages: response.image_urls,\n          status: (() => {\n            const hasCaption = (r.caption || '').trim();\n            const hasEnoughImages = response.image_urls.length >= 3;\n            return hasCaption && hasEnoughImages ? 'ready' : 'draft';\n          })()\n        } : r));\n      } else {\n        console.log(`Failed to generate carousel for row ${rowId}:`, response);\n        const errorMsg = response.error || 'Failed to generate enough carousel images. Please try again.';\n        alert(`Failed to generate carousel: ${errorMsg}`);\n      }\n    } catch (error) {\n      console.error(`Error generating carousel for row ${rowId}:`, error);\n      alert('Error generating carousel images. Please try again.');\n    }\n  };\n  const handleCarouselUpload = async (rowId, event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    const row = composerRows.find(r => r.id === rowId);\n    const maxImages = row.carouselImageCount || 3;\n    const minImages = 3;\n    if (files.length < minImages) {\n      alert(`Please select at least ${minImages} images for a carousel post.`);\n      return;\n    }\n    if (files.length > maxImages) {\n      alert(`Please select only ${maxImages} images for this carousel.`);\n      return;\n    }\n    try {\n      console.log(`🖼️ Uploading ${files.length} carousel images for row ${rowId}`);\n      const imageUrls = [];\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n\n        // Validate file type\n        if (!file.type.startsWith('image/')) {\n          alert(`File ${file.name} is not an image. Please select only image files.`);\n          continue;\n        }\n        console.log(`📤 Uploading carousel image ${i + 1}/${files.length}: ${file.name}`);\n\n        // Upload to Cloudinary\n        const uploadResponse = await apiClient.uploadImageToCloudinary(file);\n        if (uploadResponse && uploadResponse.success && uploadResponse.data && uploadResponse.data.url) {\n          imageUrls.push(uploadResponse.data.url);\n          console.log(`✅ Carousel image ${i + 1} uploaded: ${uploadResponse.data.url}`);\n        } else {\n          console.error(`❌ Failed to upload carousel image ${i + 1}:`, uploadResponse);\n          alert(`Failed to upload image ${file.name}. Please try again.`);\n          return;\n        }\n      }\n      if (imageUrls.length >= minImages) {\n        setComposerRows(prev => prev.map(r => r.id === rowId ? {\n          ...r,\n          carouselImages: imageUrls,\n          status: (() => {\n            const hasCaption = (r.caption || '').trim();\n            const hasEnoughImages = imageUrls.length >= 3;\n            return hasCaption && hasEnoughImages ? 'ready' : 'draft';\n          })()\n        } : r));\n        console.log(`✅ Successfully uploaded ${imageUrls.length} carousel images for row ${rowId}`);\n      } else {\n        alert(`Please upload at least ${minImages} images for a carousel post.`);\n      }\n\n      // Clear the file input\n      if (carouselInputRefs.current[rowId]) {\n        carouselInputRefs.current[rowId].value = '';\n      }\n    } catch (error) {\n      console.error('Error processing carousel upload:', error);\n      alert('Error uploading carousel images. Please try again.');\n    }\n  };\n  const handleDuplicateRow = rowId => {\n    const rowToDuplicate = composerRows.find(row => row.id === rowId);\n    if (rowToDuplicate) {\n      const newRow = {\n        ...rowToDuplicate,\n        id: `row-${Date.now()}-${Math.random()}`,\n        scheduledDate: new Date(rowToDuplicate.scheduledDate).toISOString().split('T')[0],\n        postType: rowToDuplicate.postType ? rowToDuplicate.postType.toLowerCase() : 'photo'\n      };\n      setComposerRows(prev => [...prev, newRow]);\n    }\n  };\n  const handleDeleteRow = rowId => {\n    setComposerRows(prev => prev.filter(row => row.id !== rowId));\n    setSelectedRows(prev => prev.filter(id => id !== rowId));\n  };\n  const handleBulkDelete = () => {\n    setComposerRows(prev => prev.filter(row => !selectedRows.includes(row.id)));\n    setSelectedRows([]);\n  };\n  const handleTimeShift = direction => {\n    setComposerRows(prev => prev.map(row => {\n      if (selectedRows.includes(row.id)) {\n        const [hours, minutes] = row.scheduledTime.split(':');\n        let newHours = parseInt(hours) + (direction === 'forward' ? 1 : -1);\n        if (newHours < 0) newHours = 23;\n        if (newHours > 23) newHours = 0;\n        return {\n          ...row,\n          scheduledTime: `${newHours.toString().padStart(2, '0')}:${minutes}`\n        };\n      }\n      return row;\n    }));\n  };\n  const handleDragStart = rowId => setDragStartRow(rowId);\n  const handleDragOver = e => e.preventDefault();\n  const handleDrop = targetRowId => {\n    if (dragStartRow && dragStartRow !== targetRowId) {\n      const rows = [...composerRows];\n      const sourceIndex = rows.findIndex(row => row.id === dragStartRow);\n      const targetIndex = rows.findIndex(row => row.id === targetRowId);\n      const [movedRow] = rows.splice(sourceIndex, 1);\n      rows.splice(targetIndex, 0, movedRow);\n      setComposerRows(rows);\n    }\n    setDragStartRow(null);\n  };\n  const handleScheduleAll = async () => {\n    if (!selectedAccount || composerRows.length === 0) return;\n    setIsScheduling(true);\n    setScheduleProgress(0);\n    try {\n      const readyRows = composerRows.filter(row => row.status === 'ready');\n      console.log(`🔄 Starting bulk scheduling for ${readyRows.length} posts...`);\n\n      // Progress tracking for media processing\n      let processedCount = 0;\n      const totalPosts = readyRows.length;\n      const postsWithMedia = await Promise.all(readyRows.map(async (row, index) => {\n        const basePost = {\n          caption: row.caption,\n          scheduled_datetime: `${row.scheduledDate}T${row.scheduledTime}:00+05:30`,\n          scheduled_date: row.scheduledDate,\n          scheduled_time: row.scheduledTime,\n          post_type: (row.postType || 'photo').toLowerCase()\n        };\n        if (row.postType === 'photo') {\n          if (row.mediaFile) {\n            const result = {\n              ...basePost,\n              media_file: await fileToBase64(row.mediaFile),\n              media_filename: row.mediaFile.name\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          } else if (row.mediaPreview && row.mediaPreview.startsWith('data:')) {\n            const result = {\n              ...basePost,\n              media_file: row.mediaPreview,\n              media_filename: 'generated_image.jpg'\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          } else if (row.mediaPreview && row.mediaPreview.startsWith('http')) {\n            const result = {\n              ...basePost,\n              image_prompt: row.caption.substring(0, 200)\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          } else {\n            const result = {\n              ...basePost,\n              image_prompt: strategyData.imagePrompt || row.caption.substring(0, 200)\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          }\n        } else if (row.postType === 'carousel') {\n          if (row.carouselImages && row.carouselImages.length > 0) {\n            const carouselFiles = row.carouselImages;\n            const result = {\n              ...basePost,\n              carousel_images: carouselFiles,\n              carousel_filenames: carouselFiles.map((_, idx) => `carousel_image_${idx + 1}.jpg`)\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          } else {\n            const result = {\n              ...basePost,\n              carousel_image_count: row.carouselImageCount || 3,\n              image_prompt: strategyData.imagePrompt || row.caption.substring(0, 200)\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          }\n        } else if (row.postType === 'reel') {\n          if (row.mediaFile) {\n            const result = {\n              ...basePost,\n              media_file: await fileToBase64(row.mediaFile),\n              media_filename: row.mediaFile.name\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          } else if (row.mediaPreview && row.mediaPreview.startsWith('data:')) {\n            const result = {\n              ...basePost,\n              media_file: row.mediaPreview,\n              media_filename: 'generated_video.mp4'\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          } else {\n            const result = {\n              ...basePost,\n              image_prompt: strategyData.imagePrompt || row.caption.substring(0, 200)\n            };\n            processedCount++;\n            setScheduleProgress(processedCount / totalPosts * 30);\n            return result;\n          }\n        }\n        processedCount++;\n        setScheduleProgress(processedCount / totalPosts * 30);\n        return basePost;\n      }));\n\n      // Final normalization: ensure all outgoing post_type values are lowercase\n      const normalizedPostsWithMedia = postsWithMedia.map(post => ({\n        ...post,\n        post_type: (post.post_type || 'photo').toLowerCase()\n      }));\n      const bulkData = {\n        social_account_id: selectedAccount.id,\n        posts: normalizedPostsWithMedia\n      };\n      console.log(`🚀 Sending ${normalizedPostsWithMedia.length} posts to backend for scheduling...`);\n      setScheduleProgress(40); // 40% for API call start\n\n      const response = await apiClient.bulkScheduleInstagramPosts(bulkData);\n      setScheduleProgress(90); // 90% for API response\n      console.log('Bulk schedule response:', response);\n      if (response && response.success) {\n        var _response$scheduled_p;\n        console.log(`✅ Successfully scheduled ${((_response$scheduled_p = response.scheduled_posts) === null || _response$scheduled_p === void 0 ? void 0 : _response$scheduled_p.length) || 0} posts`);\n        setComposerRows(prev => prev.map(row => readyRows.some(r => r.id === row.id) ? {\n          ...row,\n          status: 'scheduled'\n        } : row));\n        setScheduleProgress(100);\n        setScheduledGridRows(response.scheduled_posts || []);\n        // Redirect to InstagramPage with scheduled posts for grid display\n        navigate('/instagram', {\n          state: {\n            scheduledGridRows: response.scheduled_posts || []\n          }\n        });\n      } else if (response && Array.isArray(response.results)) {\n        // Handle legacy or alternate backend response\n        const successCount = response.results.filter(r => r.success).length;\n        const failedCount = response.results.filter(r => !r.success).length;\n        let errorMsg = `Scheduled ${successCount} posts successfully.`;\n        if (failedCount > 0) {\n          errorMsg += `\\n${failedCount} posts failed. Check console for details.`;\n          response.results.forEach((result, idx) => {\n            if (!result.success) {\n              errorMsg += `\\nPost #${idx + 1}: ${result.error || result.message || 'Unknown error'}`;\n            }\n          });\n        }\n        alert(errorMsg);\n        setComposerRows(prev => prev.map(row => {\n          const result = response.results.find(r => r.caption === row.caption && r.scheduled_date === row.scheduledDate);\n          if (result) {\n            return {\n              ...row,\n              status: result.success ? 'scheduled' : 'failed',\n              error: result.success ? null : result.error || 'Unknown error'\n            };\n          }\n          return row;\n        }));\n        setScheduleProgress(100);\n        setScheduledGridRows(response.results.filter(r => r.success));\n        navigate('/instagram', {\n          state: {\n            scheduledGridRows: response.results.filter(r => r.success)\n          }\n        });\n      } else {\n        let errorMsg = 'Error scheduling Instagram posts.';\n        if (response && response.failed_posts && response.failed_posts.length > 0) {\n          errorMsg += '\\nFailed posts:';\n          response.failed_posts.forEach(fp => {\n            errorMsg += `\\nPost #${fp.index + 1}: ${fp.error}`;\n          });\n        } else if (response && response.message) {\n          errorMsg += `\\n${response.message}`;\n        } else if (response && response.errorData) {\n          errorMsg += `\\nAPI Error: ${JSON.stringify(response.errorData)}`;\n        }\n        alert(errorMsg);\n        console.error('Bulk scheduling error:', response);\n      }\n    } catch (error) {\n      let errorMsg = 'Error scheduling Instagram posts. Please try again.';\n      // Check if any of the readyRows are reels\n      const hasReel = composerRows.filter(row => selectedRows.includes(row.id)).some(row => (row.postType || '').toLowerCase() === 'reel');\n      if (error && error.error === 'timeout') {\n        if (hasReel) {\n          errorMsg = 'Your reel is being processed and will be scheduled soon. Please check back in a few minutes.';\n        } else {\n          errorMsg = 'Request timed out. Video processing may take longer. Please try again or check your video file size.';\n        }\n      } else if (error && error.errorData) {\n        errorMsg += `\\nAPI Error: ${JSON.stringify(error.errorData)}`;\n      } else if (error && error.message) {\n        errorMsg += `\\n${error.message}`;\n      }\n      alert(errorMsg);\n      console.error('Bulk scheduling exception:', error);\n    } finally {\n      setIsScheduling(false);\n      setScheduleProgress(0);\n    }\n  };\n\n  // Calendar day click logic\n  const handleCalendarDateSelect = date => {\n    setStrategyData(prev => ({\n      ...prev,\n      startDate: date.toISOString().split('T')[0]\n    }));\n  };\n\n  // UI helpers\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'published':\n        return '✓';\n      case 'failed':\n        return '✗';\n      case 'scheduled':\n        return '⏰';\n      case 'ready':\n        return '🟢';\n      default:\n        return '📝';\n    }\n  };\n  const getStatusClass = status => {\n    switch (status) {\n      case 'published':\n        return 'ig-status-published';\n      case 'failed':\n        return 'ig-status-failed';\n      case 'scheduled':\n        return 'ig-status-scheduled';\n      case 'ready':\n        return 'ig-status-ready';\n      default:\n        return 'ig-status-draft';\n    }\n  };\n\n  // Calendar helpers\n  const generateCalendarDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const days = [];\n    for (let i = 0; i < firstDayOfMonth; i++) days.push({\n      day: null,\n      date: null\n    });\n    for (let i = 1; i <= daysInMonth; i++) {\n      const date = new Date(year, month, i);\n      days.push({\n        day: i,\n        date\n      });\n    }\n    return days;\n  };\n  const getPostsForDate = date => {\n    // Format date as YYYY-MM-DD using local date parts\n    const yyyy = date.getFullYear();\n    const mm = String(date.getMonth() + 1).padStart(2, '0');\n    const dd = String(date.getDate()).padStart(2, '0');\n    const dateString = `${yyyy}-${mm}-${dd}`;\n    return composerRows.filter(row => row.scheduledDate === dateString);\n  };\n  const handleRemoveCarouselImages = rowId => {\n    setComposerRows(prev => prev.map(r => r.id === rowId ? {\n      ...r,\n      carouselImages: [],\n      status: 'draft' // Always reset to draft when removing images\n    } : r));\n    console.log(`🗑️ Removed carousel images for row ${rowId}`);\n  };\n\n  // --- RENDER ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ig-bulk-composer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ig-bulk-composer-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram Bulk Composer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ig-bulk-composer-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ig-strategy-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Step 1: Strategy & Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-strategy-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Post Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-post-type-toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: postType === 'photo' ? 'active' : '',\n                onClick: () => handlePostTypeChange('photo'),\n                children: \"\\uD83D\\uDCF8 Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: postType === 'carousel' ? 'active' : '',\n                onClick: () => handlePostTypeChange('carousel'),\n                children: \"\\uD83D\\uDDBC\\uFE0F Carousel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: postType === 'reel' ? 'active' : '',\n                onClick: () => handlePostTypeChange('reel'),\n                children: \"\\uD83C\\uDFAC Reel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 15\n            }, this), postType === 'carousel' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Number of Images: \", carouselImageCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"3\",\n                max: \"7\",\n                value: carouselImageCount,\n                onChange: e => handleCarouselImageCountChange(parseInt(e.target.value)),\n                className: \"ig-slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-slider-labels\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1074,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1076,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1077,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 17\n            }, this), (postType === 'photo' || postType === 'carousel') && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"AI Image Prompt (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: strategyData.imagePrompt || '',\n                onChange: e => handleStrategyChange('imagePrompt', e.target.value),\n                placeholder: \"Describe the images you want AI to generate (e.g., 'modern office setup', 'colorful abstract art')\",\n                className: \"ig-form-input\",\n                rows: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"ig-form-help\",\n                children: \"Leave empty to use captions as image prompts, or specify custom prompts for AI image generation.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Strategy Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: strategyData.promptTemplate,\n              onChange: e => handleStrategyChange('promptTemplate', e.target.value),\n              className: \"ig-form-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a template...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1107,\n                columnNumber: 17\n              }, this), promptTemplates.map(template => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: template.prompt,\n                children: template.name\n              }, template.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 11\n          }, this), strategyData.promptTemplate === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Brand Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: strategyData.brandName,\n                  onChange: e => handleStrategyChange('brandName', e.target.value),\n                  placeholder: \"Brand Name\",\n                  className: \"ig-form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1120,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: strategyData.hookIdea,\n                  onChange: e => handleStrategyChange('hookIdea', e.target.value),\n                  placeholder: \"Hook Idea (e.g., Tired of the shore?)\",\n                  className: \"ig-form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Features (one per line)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: strategyData.features,\n                onChange: e => handleStrategyChange('features', e.target.value),\n                placeholder: \"\\u2705 Feature 1\\\\n\\u2705 Feature 2\\\\n\\u2705 Feature 3\",\n                className: \"ig-form-input\",\n                rows: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: strategyData.location,\n                  onChange: e => handleStrategyChange('location', e.target.value),\n                  placeholder: \"Location\",\n                  className: \"ig-form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: strategyData.phone,\n                  onChange: e => handleStrategyChange('phone', e.target.value),\n                  placeholder: \"Phone Number\",\n                  className: \"ig-form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1161,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: strategyData.website,\n                onChange: e => handleStrategyChange('website', e.target.value),\n                placeholder: \"Website URL\",\n                className: \"ig-form-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: strategyData.callToAction,\n                onChange: e => handleStrategyChange('callToAction', e.target.value),\n                placeholder: \"Call to Action (e.g., Book your appointment today!)\",\n                className: \"ig-form-input\",\n                rows: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"ig-form-help\",\n              children: \"This information will be used to generate captions that follow your brand's style and approach.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: strategyData.startDate,\n                onChange: e => handleStrategyChange('startDate', e.target.value),\n                className: \"ig-form-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: strategyData.endDate,\n                  onChange: e => handleStrategyChange('endDate', e.target.value),\n                  className: \"ig-form-input\",\n                  min: strategyData.startDate,\n                  disabled: !strategyData.startDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleStrategyChange('endDate', ''),\n                  className: \"ig-btn ig-btn-secondary ig-btn-small\",\n                  disabled: !strategyData.endDate,\n                  title: \"Clear end date (single day schedule)\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"12\",\n                    height: \"12\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"18\",\n                      y1: \"6\",\n                      x2: \"6\",\n                      y2: \"18\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1225,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"6\",\n                      y1: \"6\",\n                      x2: \"18\",\n                      y2: \"18\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1226,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 21\n                  }, this), \"Clear\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1217,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"ig-form-help\",\n                children: \"Leave empty for single day schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: strategyData.frequency,\n                onChange: e => handleStrategyChange('frequency', e.target.value),\n                className: \"ig-form-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"daily\",\n                  children: \"Daily\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"weekly\",\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"monthly\",\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"custom\",\n                  children: \"Custom Cron\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Time Slot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: strategyData.timeSlot,\n                onChange: e => handleStrategyChange('timeSlot', e.target.value),\n                className: \"ig-form-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1248,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 13\n          }, this), strategyData.frequency === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Custom Cron Expression\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: strategyData.customCron,\n              onChange: e => handleStrategyChange('customCron', e.target.value),\n              placeholder: \"0 9 * * * (daily at 9 AM)\",\n              className: \"ig-form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ig-calendar-preview-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Calendar Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-calendar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-calendar-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() - 1)),\n              className: \"ig-btn ig-btn-secondary ig-btn-small\",\n              children: \"\\u2190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: currentMonth.toLocaleDateString('en-US', {\n                month: 'long',\n                year: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() + 1)),\n              className: \"ig-btn ig-btn-secondary ig-btn-small\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-calendar-grid\",\n            children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-calendar-day-header\",\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 17\n            }, this)), generateCalendarDays(currentMonth.getFullYear(), currentMonth.getMonth()).map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ig-calendar-day ${day.date ? 'clickable' : ''} ${day.date && getPostsForDate(day.date).length > 0 ? 'has-posts' : ''}`,\n              onClick: () => day.date && handleCalendarDateSelect(day.date),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ig-day-number\",\n                children: day.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 19\n              }, this), day.date && getPostsForDate(day.date).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-post-indicators\",\n                children: getPostsForDate(day.date).map((post, postIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ig-post-dot\",\n                  title: `${post.scheduledTime} - ${(post.caption || '').substring(0, 30)}...`\n                }, postIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1306,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1304,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ig-composer-grid-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-composer-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Step 2: Content Grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-composer-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newRow = {\n                  id: `row-${Date.now()}-${Math.random()}`,\n                  caption: '',\n                  postType: postType.toLowerCase(),\n                  mediaFile: null,\n                  mediaPreview: null,\n                  carouselImages: postType === 'carousel' ? [] : null,\n                  carouselImageCount: postType === 'carousel' ? carouselImageCount : null,\n                  scheduledDate: new Date().toISOString().split('T')[0],\n                  scheduledTime: strategyData.timeSlot,\n                  status: 'draft',\n                  isSelected: false\n                };\n                setComposerRows(prev => [...prev, newRow]);\n              },\n              className: \"ig-btn ig-btn-primary ig-btn-small\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"14\",\n                height: \"14\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"12\",\n                  y1: \"5\",\n                  x2: \"12\",\n                  y2: \"19\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1345,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"5\",\n                  y1: \"12\",\n                  x2: \"19\",\n                  y2: \"12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1346,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1344,\n                columnNumber: 17\n              }, this), \"Add Row\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSelectAll,\n              className: \"ig-btn ig-btn-secondary ig-btn-small\",\n              children: selectedRows.length === composerRows.length ? 'Deselect All' : 'Select All'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBulkDelete,\n              disabled: selectedRows.length === 0,\n              className: \"ig-btn ig-btn-danger ig-btn-small\",\n              children: \"Delete Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ig-btn ig-btn-primary\",\n              onClick: handleGenerateAllCaptions,\n              disabled: composerRows.length === 0 || selectedRows.length === 0,\n              children: \"Generate Captions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ig-btn ig-btn-secondary\",\n              onClick: handleGenerateAllImages,\n              disabled: composerRows.length === 0 || selectedRows.length === 0,\n              children: \"Generate Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-time-shift-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleTimeShift('backward'),\n                disabled: selectedRows.length === 0,\n                className: \"ig-btn ig-btn-secondary ig-btn-small\",\n                children: \"\\u2190 -1h\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleTimeShift('forward'),\n                disabled: selectedRows.length === 0,\n                className: \"ig-btn ig-btn-secondary ig-btn-small\",\n                children: \"+1h \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1385,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-composer-grid-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-composer-grid\",\n            ref: gridRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-grid-header ig-grid-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-grid-cell ig-header-cell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-grid-cell ig-header-cell\",\n                children: \"Caption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-grid-cell ig-header-cell\",\n                children: \"Media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-grid-cell ig-header-cell\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-grid-cell ig-header-cell\",\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1403,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ig-grid-cell ig-header-cell\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1404,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-grid-body\",\n              children: composerRows.map((row, index) => {\n                var _row$mediaFile, _row$mediaFile$type;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `ig-grid-row ${row.isSelected ? 'selected' : ''}`,\n                  draggable: true,\n                  onDragStart: () => handleDragStart(row.id),\n                  onDragOver: handleDragOver,\n                  onDrop: () => handleDrop(row.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ig-grid-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: selectedRows.includes(row.id),\n                      onChange: () => handleRowSelect(row.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1417,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1416,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ig-grid-cell ig-caption-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"caption-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                        value: row.caption,\n                        onChange: e => handleCellEdit(row.id, 'caption', e.target.value),\n                        placeholder: \"Enter your Instagram post caption...\",\n                        className: \"ig-caption-input\",\n                        rows: \"3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1425,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleExpandCaption(row.id),\n                        className: \"expand-btn\",\n                        title: \"Expand caption\",\n                        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"14\",\n                          height: \"14\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M15 3h6v6\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1438,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M9 21H3v-6\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1439,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M21 3l-7 7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1440,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M3 21l7-7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1441,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1437,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1432,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1424,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1423,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ig-grid-cell ig-media-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ig-media-options\",\n                      children: !row.mediaPreview && !row.mediaFile && (!row.carouselImages || row.carouselImages.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"ig-media-option-group\",\n                        children: [(row.postType === 'photo' || row.postType === 'reel') && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"file\",\n                            accept: row.postType === 'photo' ? \"image/*\" : \"video/*\",\n                            onChange: e => handleMediaUpload(row.id, e),\n                            className: \"ig-media-input\",\n                            id: `ig-media-upload-${row.id}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1453,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: `ig-media-upload-${row.id}`,\n                            className: \"ig-media-option-btn upload-btn\",\n                            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                              width: \"16\",\n                              height: \"16\",\n                              viewBox: \"0 0 24 24\",\n                              fill: \"none\",\n                              stroke: \"currentColor\",\n                              strokeWidth: \"2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                                d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1462,\n                                columnNumber: 31\n                              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                                points: \"7,10 12,15 17,10\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1463,\n                                columnNumber: 31\n                              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                                x1: \"12\",\n                                y1: \"15\",\n                                x2: \"12\",\n                                y2: \"3\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1464,\n                                columnNumber: 31\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1461,\n                              columnNumber: 29\n                            }, this), \"Upload \", row.postType === 'photo' ? 'Image' : 'Video']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1460,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true), row.postType === 'photo' && /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleGenerateMedia(row.id),\n                          className: \"ig-media-option-btn generate-btn\",\n                          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                            width: \"16\",\n                            height: \"16\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            strokeWidth: \"2\",\n                            children: /*#__PURE__*/_jsxDEV(\"path\", {\n                              d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1478,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1477,\n                            columnNumber: 29\n                          }, this), \"Generate\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1473,\n                          columnNumber: 27\n                        }, this), row.postType === 'reel' && /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleGenerateMedia(row.id),\n                          className: \"ig-media-option-btn generate-btn\",\n                          disabled: true,\n                          title: \"AI video generation not yet available\",\n                          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                            width: \"16\",\n                            height: \"16\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            strokeWidth: \"2\",\n                            children: /*#__PURE__*/_jsxDEV(\"path\", {\n                              d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1493,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1492,\n                            columnNumber: 31\n                          }, this), \"Generate (Coming Soon)\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1486,\n                          columnNumber: 29\n                        }, this), row.postType === 'carousel' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => handleGenerateCarousel(row.id),\n                            className: \"ig-media-option-btn generate-btn\",\n                            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                              width: \"16\",\n                              height: \"16\",\n                              viewBox: \"0 0 24 24\",\n                              fill: \"none\",\n                              stroke: \"currentColor\",\n                              strokeWidth: \"2\",\n                              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                                d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1507,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1506,\n                              columnNumber: 33\n                            }, this), \"Generate \", row.carouselImageCount || 3, \" Images\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1502,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"file\",\n                            accept: \"image/*\",\n                            multiple: true,\n                            ref: el => carouselInputRefs.current[row.id] = el,\n                            onChange: e => handleCarouselUpload(row.id, e),\n                            className: \"ig-media-input\",\n                            id: `ig-carousel-upload-${row.id}`\n                          }, `ig-carousel-upload-${row.id}`, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1511,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: `ig-carousel-upload-${row.id}`,\n                            className: \"ig-media-option-btn upload-btn\",\n                            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                              width: \"16\",\n                              height: \"16\",\n                              viewBox: \"0 0 24 24\",\n                              fill: \"none\",\n                              stroke: \"currentColor\",\n                              strokeWidth: \"2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                                d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1523,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                                points: \"7,10 12,15 17,10\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1524,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                                x1: \"12\",\n                                y1: \"15\",\n                                x2: \"12\",\n                                y2: \"3\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1525,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1522,\n                              columnNumber: 33\n                            }, this), \"Upload \", row.carouselImageCount || 3, \" Images\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1521,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1449,\n                        columnNumber: 25\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"ig-media-preview\",\n                        children: [row.postType === 'carousel' && row.carouselImages && row.carouselImages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"ig-carousel-preview\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"ig-carousel-grid\",\n                            children: row.carouselImages.slice(0, row.carouselImageCount || 3).map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"ig-carousel-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                                src: url,\n                                alt: `Carousel ${index + 1}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1540,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"ig-carousel-number\",\n                                children: index + 1\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1541,\n                                columnNumber: 39\n                              }, this)]\n                            }, index, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1539,\n                              columnNumber: 37\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1537,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"ig-carousel-info\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"ig-carousel-status\",\n                              children: [row.carouselImages.length, \" / \", row.carouselImageCount || 3, \" images\", row.carouselImages.length < 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"ig-carousel-warning\",\n                                children: \"\\u26A0\\uFE0F Need at least 3 images\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1549,\n                                columnNumber: 39\n                              }, this), row.carouselImages.length >= 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"ig-carousel-success\",\n                                children: \"\\u2705 Ready\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1552,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1546,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => handleRemoveCarouselImages(row.id),\n                              className: \"ig-btn ig-btn-danger ig-btn-small\",\n                              disabled: row.carouselImages.length === 0,\n                              title: \"Remove all carousel images\",\n                              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                                width: \"12\",\n                                height: \"12\",\n                                viewBox: \"0 0 24 24\",\n                                fill: \"none\",\n                                stroke: \"currentColor\",\n                                strokeWidth: \"2\",\n                                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                                  x1: \"18\",\n                                  y1: \"6\",\n                                  x2: \"6\",\n                                  y2: \"18\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1562,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                                  x1: \"6\",\n                                  y1: \"6\",\n                                  x2: \"18\",\n                                  y2: \"18\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1563,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1561,\n                                columnNumber: 37\n                              }, this), \"Remove All\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1555,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1545,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1536,\n                          columnNumber: 31\n                        }, this) :\n                        /*#__PURE__*/\n                        /* Single Media Preview */\n                        _jsxDEV(_Fragment, {\n                          children: (_row$mediaFile = row.mediaFile) !== null && _row$mediaFile !== void 0 && (_row$mediaFile$type = _row$mediaFile.type) !== null && _row$mediaFile$type !== void 0 && _row$mediaFile$type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: row.mediaPreview,\n                            alt: \"Preview\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1573,\n                            columnNumber: 31\n                          }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n                            src: row.mediaPreview,\n                            controls: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1575,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleViewMedia(row.id),\n                          className: \"view-media-btn\",\n                          title: \"View media\",\n                          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                            width: \"12\",\n                            height: \"12\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            strokeWidth: \"2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                              d: \"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1585,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                              cx: \"12\",\n                              cy: \"12\",\n                              r: \"3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1586,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1584,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1579,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleRemoveMedia(row.id),\n                          className: \"remove-media-btn\",\n                          title: \"Remove media\",\n                          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                            width: \"12\",\n                            height: \"12\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            strokeWidth: \"2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                              x1: \"18\",\n                              y1: \"6\",\n                              x2: \"6\",\n                              y2: \"18\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1595,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                              x1: \"6\",\n                              y1: \"6\",\n                              x2: \"18\",\n                              y2: \"18\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1596,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1594,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1589,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1533,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1447,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1446,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ig-grid-cell ig-date-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      value: row.scheduledDate,\n                      onChange: e => handleCellEdit(row.id, 'scheduledDate', e.target.value),\n                      className: \"ig-date-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1604,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1603,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ig-grid-cell ig-time-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      value: row.scheduledTime,\n                      onChange: e => handleCellEdit(row.id, 'scheduledTime', e.target.value),\n                      className: \"ig-time-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1612,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1611,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ig-grid-cell ig-status-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `ig-status-badge ${getStatusClass(row.status)}`,\n                      children: [getStatusIcon(row.status), \" \", row.status]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1620,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1619,\n                    columnNumber: 21\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1408,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ig-queue-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Step 3: Schedule & Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-confirmation-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-label\",\n              children: \"Total Posts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-value\",\n              children: composerRows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1635,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-label\",\n              children: \"With Captions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-value\",\n              children: composerRows.filter(row => (row.caption || '').trim()).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1641,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1639,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-label\",\n              children: \"Ready to Schedule:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1644,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-value\",\n              children: composerRows.filter(row => row.status === 'ready').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1645,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-label\",\n              children: \"With Media:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1648,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ig-stat-value\",\n              children: composerRows.filter(row => row.mediaFile || row.mediaPreview).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1649,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1647,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1634,\n          columnNumber: 11\n        }, this), isScheduling && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-schedule-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ig-progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ig-progress-fill\",\n              style: {\n                width: `${scheduleProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1655,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1654,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ig-progress-text\",\n            children: [\"Scheduling Instagram posts... \", Math.round(scheduleProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1653,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ig-confirmation-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleScheduleAll,\n            disabled: isScheduling || composerRows.filter(row => row.status === 'ready').length === 0,\n            className: \"ig-btn ig-btn-primary ig-btn-large\",\n            children: isScheduling ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12a9 9 0 11-6.219-8.56\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1672,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1671,\n                columnNumber: 19\n              }, this), \"Scheduling...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1679,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"12,6 12,12 16,14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1680,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1678,\n                columnNumber: 19\n              }, this), \"Schedule Ready Posts (\", composerRows.filter(row => row.status === 'ready').length, \")\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1664,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 7\n    }, this), expandedCaption && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Caption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1695,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setExpandedCaption(null),\n            className: \"modal-close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1696,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1694,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"caption-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Scheduled:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1705,\n                columnNumber: 20\n              }, this), \" \", expandedCaption.scheduledDate, \" at \", expandedCaption.scheduledTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: expandedCaption.caption,\n            onChange: e => setExpandedCaption(prev => ({\n              ...prev,\n              caption: e.target.value\n            })),\n            className: \"expanded-caption-textarea\",\n            rows: \"10\",\n            placeholder: \"Enter your caption...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1707,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setExpandedCaption(null),\n            className: \"ig-btn ig-btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1716,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveExpandedCaption(expandedCaption.id, expandedCaption.caption),\n            className: \"ig-btn ig-btn-primary\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1715,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1693,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1692,\n      columnNumber: 9\n    }, this), mediaPreviewModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content media-preview-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Media Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1738,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMediaPreviewModal(null),\n            className: \"modal-close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1739,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1737,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [(_mediaPreviewModal$me = mediaPreviewModal.mediaFile) !== null && _mediaPreviewModal$me !== void 0 && (_mediaPreviewModal$me2 = _mediaPreviewModal$me.type) !== null && _mediaPreviewModal$me2 !== void 0 && _mediaPreviewModal$me2.startsWith('image/') || !mediaPreviewModal.mediaFile && mediaPreviewModal.mediaPreview ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mediaPreviewModal.mediaPreview,\n            alt: \"Media preview\",\n            className: \"modal-media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1748,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n            src: mediaPreviewModal.mediaPreview,\n            controls: true,\n            className: \"modal-media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1754,\n            columnNumber: 17\n          }, this), mediaPreviewModal.caption && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-caption\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Caption:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1762,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: mediaPreviewModal.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1763,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1761,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1746,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMediaPreviewModal(null),\n            className: \"ig-btn ig-btn-primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1736,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1735,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1026,\n    columnNumber: 5\n  }, this);\n}\n_s(IgBulkComposer, \"GV9EB2joy3I1zXna9lP8NiBWLzg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = IgBulkComposer;\nexport default IgBulkComposer;\nvar _c;\n$RefreshReg$(_c, \"IgBulkComposer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","apiClient","fileToBase64","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","IgBulkComposer","selectedAccount","onClose","_s","_mediaPreviewModal$me","_mediaPreviewModal$me2","user","strategyData","setStrategyData","promptTemplate","customStrategyTemplate","brandName","hookIdea","features","location","phone","website","callToAction","imagePrompt","startDate","endDate","frequency","customCron","timeSlot","composerRows","setComposerRows","selectedRows","setSelectedRows","editingCell","setEditingCell","dragStartRow","setDragStartRow","postType","setPostType","carouselImageCount","setCarouselImageCount","currentMonth","setCurrentMonth","Date","isScheduling","setIsScheduling","scheduleProgress","setScheduleProgress","expandedCaption","setExpandedCaption","mediaPreviewModal","setMediaPreviewModal","scheduledGridRows","setScheduledGridRows","navigate","promptTemplates","id","name","prompt","gridRef","carouselInputRefs","generateInitialRows","startDateParts","split","parseInt","endDateParts","rows","maxDays","currentDate","dayCount","rowCount","formattedDate","toISOString","push","caption","mediaFile","mediaPreview","toLowerCase","carouselImages","scheduledDate","scheduledTime","status","isSelected","maxAllowedDate","now","shouldInclude","getDay","getDate","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getTime","setDate","handleStrategyChange","field","value","prev","newData","map","row","handlePostTypeChange","newPostType","handleCarouselImageCountChange","newCount","handleRowSelect","rowId","includes","filter","handleSelectAll","length","handleCellEdit","hasCaption","trim","hasEnoughImages","hasMedia","handleMediaUpload","event","file","target","files","find","r","alert","reader","FileReader","onload","e","result","readAsDataURL","handleGenerateMedia","console","log","substring","response","generateInstagramImage","success","data","image_url","error","handleGenerateAllCaptions","selectedComposerRows","captions","selectedTemplate","t","i","context","fullPrompt","JSON","stringify","captionResponse","generateInstagramCaption","content","generated_text","message","Math","round","c","successCount","failedCount","handleGenerateAllImages","errorCount","handleExpandCaption","handleViewMedia","handleSaveExpandedCaption","newCaption","handleRemoveMedia","handleGenerateCarousel","imageCount","generateInstagramCarousel","image_urls","errorMsg","handleCarouselUpload","Array","from","maxImages","minImages","imageUrls","type","startsWith","uploadResponse","uploadImageToCloudinary","url","current","handleDuplicateRow","rowToDuplicate","newRow","random","handleDeleteRow","handleBulkDelete","handleTimeShift","direction","hours","minutes","newHours","toString","handleDragStart","handleDragOver","preventDefault","handleDrop","targetRowId","sourceIndex","findIndex","targetIndex","movedRow","splice","handleScheduleAll","readyRows","processedCount","totalPosts","postsWithMedia","Promise","all","index","basePost","scheduled_datetime","scheduled_date","scheduled_time","post_type","media_file","media_filename","image_prompt","carouselFiles","carousel_images","carousel_filenames","_","idx","carousel_image_count","normalizedPostsWithMedia","post","bulkData","social_account_id","posts","bulkScheduleInstagramPosts","_response$scheduled_p","scheduled_posts","some","state","isArray","results","forEach","failed_posts","fp","errorData","hasReel","handleCalendarDateSelect","date","getStatusIcon","getStatusClass","generateCalendarDays","year","month","daysInMonth","firstDayOfMonth","days","day","getPostsForDate","dateString","handleRemoveCarouselImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","min","max","onChange","placeholder","template","style","display","alignItems","gap","disabled","title","width","height","viewBox","fill","stroke","strokeWidth","x1","y1","x2","y2","toLocaleDateString","postIndex","ref","_row$mediaFile","_row$mediaFile$type","draggable","onDragStart","onDragOver","onDrop","checked","d","accept","htmlFor","points","multiple","el","slice","src","alt","controls","cx","cy","_c","$RefreshReg$"],"sources":["C:/Users/THORSIGNIA/Projects/automation-dash/frontend/src/components/igBulkComposer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport apiClient from '../services/apiClient';\r\nimport { fileToBase64 } from './FacebookUtils';\r\nimport './igBulkComposer.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction IgBulkComposer({ selectedAccount, onClose }) {\r\n  const { user } = useAuth();\r\n  \r\n  // Strategy step state\r\n  const [strategyData, setStrategyData] = useState({\r\n    promptTemplate: '',\r\n    customStrategyTemplate: '',\r\n    brandName: '',\r\n    hookIdea: '',\r\n    features: '',\r\n    location: '',\r\n    phone: '',\r\n    website: '',\r\n    callToAction: '',\r\n    imagePrompt: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    frequency: 'daily',\r\n    customCron: '',\r\n    timeSlot: '09:00'\r\n  });\r\n\r\n  // Composer grid state\r\n  const [composerRows, setComposerRows] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [editingCell, setEditingCell] = useState(null);\r\n  const [dragStartRow, setDragStartRow] = useState(null);\r\n  \r\n  // Post type state\r\n  const [postType, setPostType] = useState('photo'); // photo, carousel, reel\r\n  const [carouselImageCount, setCarouselImageCount] = useState(3);\r\n\r\n  // Calendar preview state\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n\r\n  // Queue state\r\n  const [isScheduling, setIsScheduling] = useState(false);\r\n  const [scheduleProgress, setScheduleProgress] = useState(0);\r\n\r\n  // Expanded view state\r\n  const [expandedCaption, setExpandedCaption] = useState(null);\r\n  const [mediaPreviewModal, setMediaPreviewModal] = useState(null);\r\n  const [scheduledGridRows, setScheduledGridRows] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Prompt templates for Instagram\r\n  const [promptTemplates] = useState([\r\n    { id: 1, name: 'Daily Inspiration', prompt: 'Share an inspiring quote or motivational message for your Instagram audience' },\r\n    { id: 2, name: 'Product Showcase', prompt: 'Highlight your best products with engaging descriptions and hashtags' },\r\n    { id: 3, name: 'Behind the Scenes', prompt: 'Share behind-the-scenes content about your business or team' },\r\n    { id: 4, name: 'Customer Spotlight', prompt: 'Feature customer testimonials or success stories' },\r\n    { id: 5, name: 'Industry Tips', prompt: 'Share valuable tips and insights related to your industry' },\r\n    { id: 6, name: 'Lifestyle Content', prompt: 'Share lifestyle content that resonates with your audience' },\r\n    { id: 7, name: 'User Generated Content', prompt: 'Repost and credit amazing content from your community' },\r\n    { id: 8, name: 'Custom', prompt: 'custom' }\r\n  ]);\r\n\r\n  const gridRef = useRef(null);\r\n  const carouselInputRefs = useRef({});\r\n\r\n  // Initialize composer with default rows\r\n  useEffect(() => {\r\n    if (strategyData.startDate && strategyData.frequency) {\r\n      generateInitialRows();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [strategyData.startDate, strategyData.endDate, strategyData.frequency, strategyData.timeSlot]);\r\n\r\n  const generateInitialRows = () => {\r\n    if (!strategyData.startDate) return;\r\n\r\n    const startDateParts = strategyData.startDate.split('-');\r\n    const startDate = new Date(parseInt(startDateParts[0]), parseInt(startDateParts[1]) - 1, parseInt(startDateParts[2]));\r\n\r\n    let endDate = null;\r\n    if (strategyData.endDate) {\r\n      const endDateParts = strategyData.endDate.split('-');\r\n      endDate = new Date(parseInt(endDateParts[0]), parseInt(endDateParts[1]) - 1, parseInt(endDateParts[2]));\r\n    }\r\n\r\n    const rows = [];\r\n    const maxDays = 30; // Instagram's 30-day limit\r\n    let currentDate = new Date(startDate);\r\n    let dayCount = 0;\r\n    let rowCount = 0;\r\n\r\n    if (!endDate) {\r\n      const formattedDate = startDate.toISOString().split('T')[0];\r\n      rows.push({\r\n        id: `row-0`,\r\n        caption: '',\r\n        mediaFile: null,\r\n        mediaPreview: null,\r\n          postType: postType.toLowerCase(),\r\n          carouselImageCount: carouselImageCount,\r\n          carouselImages: [],\r\n        scheduledDate: formattedDate,\r\n        scheduledTime: strategyData.timeSlot,\r\n        status: 'draft',\r\n        isSelected: false\r\n      });\r\n    } else {\r\n      // Fix: include the end date by using <= in the comparison\r\n      while (dayCount < maxDays && rowCount < 30) {\r\n        if (endDate && currentDate > endDate) break;\r\n        const maxAllowedDate = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);\r\n        if (currentDate > maxAllowedDate) break;\r\n\r\n        let shouldInclude = false;\r\n        switch (strategyData.frequency) {\r\n          case 'daily':\r\n            shouldInclude = true;\r\n            break;\r\n          case 'weekly':\r\n            shouldInclude = currentDate.getDay() === startDate.getDay();\r\n            break;\r\n          case 'monthly':\r\n            shouldInclude = currentDate.getDate() === startDate.getDate();\r\n            break;\r\n          case 'custom':\r\n            shouldInclude = true;\r\n            break;\r\n          default:\r\n            shouldInclude = true;\r\n        }\r\n\r\n        if (shouldInclude) {\r\n          // Format as YYYY-MM-DD using local date parts\r\n          const yyyy = currentDate.getFullYear();\r\n          const mm = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n          const dd = String(currentDate.getDate()).padStart(2, '0');\r\n          const formattedDate = `${yyyy}-${mm}-${dd}`;\r\n          rows.push({\r\n            id: `row-${rowCount}`,\r\n            caption: '',\r\n            mediaFile: null,\r\n            mediaPreview: null,\r\n            postType: postType.toLowerCase(),\r\n            carouselImageCount: carouselImageCount,\r\n            carouselImages: [],\r\n            scheduledDate: formattedDate,\r\n            scheduledTime: strategyData.timeSlot,\r\n            status: 'draft',\r\n            isSelected: false\r\n          });\r\n          rowCount++;\r\n        }\r\n        // Fix: increment date at the end, and break if we've reached the end date\r\n        if (endDate && currentDate.getTime() === endDate.getTime()) break;\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n        dayCount++;\r\n      }\r\n    }\r\n    setComposerRows(rows);\r\n  };\r\n\r\n  const handleStrategyChange = (field, value) => {\r\n    setStrategyData(prev => {\r\n      const newData = { ...prev, [field]: value };\r\n      // If start date is changed and end date is before it, clear end date\r\n      if (field === 'startDate' && prev.endDate && value > prev.endDate) {\r\n        newData.endDate = '';\r\n      }\r\n      return newData;\r\n    });\r\n    \r\n    // If prompt template is selected, apply it to all rows\r\n    if (field === 'promptTemplate' && value && value !== 'custom') {\r\n      setComposerRows(prev => \r\n        prev.map(row => ({\r\n          ...row,\r\n          caption: value\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  // Update post type for all rows\r\n  const handlePostTypeChange = (newPostType) => {\r\n    setPostType(newPostType);\r\n    setComposerRows(prev => \r\n      prev.map(row => ({\r\n        ...row,\r\n        postType: newPostType.toLowerCase(),\r\n        carouselImageCount: newPostType === 'carousel' ? carouselImageCount : null,\r\n        carouselImages: newPostType === 'carousel' ? (row.carouselImages || []) : [],\r\n        // Clear media for photo/reel when switching to carousel\r\n        mediaFile: newPostType === 'carousel' ? null : row.mediaFile,\r\n        mediaPreview: newPostType === 'carousel' ? null : row.mediaPreview\r\n      }))\r\n    );\r\n  };\r\n\r\n  // Update carousel image count for all rows\r\n  const handleCarouselImageCountChange = (newCount) => {\r\n    setCarouselImageCount(newCount);\r\n    setComposerRows(prev => \r\n      prev.map(row => ({\r\n        ...row,\r\n        carouselImageCount: row.postType === 'carousel' ? newCount : row.carouselImageCount\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    setSelectedRows(prev => prev.includes(rowId) ? prev.filter(id => id !== rowId) : [...prev, rowId]);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedRows.length === composerRows.length) {\r\n      setSelectedRows([]);\r\n    } else {\r\n      setSelectedRows(composerRows.map(row => row.id));\r\n    }\r\n  };\r\n\r\n  const handleCellEdit = (rowId, field, value) => {\r\n    setComposerRows(prev => \r\n      prev.map(row => \r\n        row.id === rowId\r\n          ? {\r\n              ...row,\r\n              [field]: field === 'postType' ? value.toLowerCase() : value,\r\n              status: (() => {\r\n                // For carousel posts, check if we have enough images\r\n                if (field === 'postType' && value.toLowerCase() === 'carousel') {\r\n                  return 'draft'; // Reset status when switching to carousel\r\n                }\r\n                \r\n                // For carousel posts, validate image count\r\n                if (row.postType === 'carousel') {\r\n                  const hasCaption = (row.caption || '').trim();\r\n                  const hasEnoughImages = (row.carouselImages || []).length >= 3;\r\n                  return hasCaption && hasEnoughImages ? 'ready' : 'draft';\r\n                }\r\n                \r\n                // For other post types, use existing logic\r\n                if (field === 'caption' || field === 'mediaFile' || field === 'mediaPreview') {\r\n                  const hasCaption = field === 'caption' ? value.trim() : (row.caption || '').trim();\r\n                  const hasMedia = field === 'mediaFile' ? value : (row.mediaFile || row.mediaPreview);\r\n                  return hasCaption && hasMedia ? 'ready' : 'draft';\r\n                }\r\n                \r\n                return row.status;\r\n              })()\r\n            }\r\n          : row\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleMediaUpload = async (rowId, event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Find the row to determine post type\r\n    const row = composerRows.find(r => r.id === rowId);\r\n    if (!row) return;\r\n\r\n    // --- REELS VIDEO UPLOAD LOGIC ---\r\n    if (row.postType === 'reel') {\r\n      alert('Your video is converted to: 1080x1920 as instagram policy.');\r\n      // Proceed to upload to backend as before...\r\n    }\r\n\r\n    // --- PHOTO/CAROUSEL LOGIC (unchanged) ---\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setComposerRows(prev => \r\n        prev.map(row => \r\n          row.id === rowId\r\n            ? {\r\n                ...row, \r\n                mediaFile: file, \r\n                mediaPreview: e.target.result,\r\n                status: (row.caption || '').trim() ? 'ready' : 'draft'\r\n              }\r\n            : row\r\n        )\r\n      );\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleGenerateMedia = async (rowId) => {\r\n    try {\r\n      const row = composerRows.find(r => r.id === rowId);\r\n      if (!row || !(row.caption || '').trim()) {\r\n        alert('Please add a caption first to generate an image.');\r\n        return;\r\n      }\r\n\r\n      console.log(`Generating image for row ${rowId} with caption: ${row.caption.substring(0, 50)}...`);\r\n      \r\n      // Truncate caption to 500 characters for image generation\r\n      const imagePrompt = row.caption.trim().substring(0, 500);\r\n      console.log(`Using image prompt (truncated): ${imagePrompt.substring(0, 100)}...`);\r\n      \r\n      const response = await apiClient.generateInstagramImage(imagePrompt, 'feed');\r\n      \r\n      if (response.success && response.data && response.data.image_url) {\r\n        console.log(`Successfully generated image for row ${rowId}:`, response.data.image_url);\r\n        setComposerRows(prev => \r\n          prev.map(r => \r\n            r.id === rowId\r\n              ? {\r\n              ...r, \r\n                  mediaFile: null,\r\n                  mediaPreview: response.data.image_url,\r\n                  status: (r.caption || '').trim() ? 'ready' : 'draft'\r\n                }\r\n              : r\r\n          )\r\n        );\r\n      } else {\r\n        console.log(`Failed to generate image for row ${rowId}:`, response);\r\n        alert('Failed to generate image. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error generating image for row ${rowId}:`, error);\r\n      alert('Failed to generate image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleGenerateAllCaptions = async () => {\r\n    if (selectedRows.length === 0) {\r\n      alert('Please select at least one row to generate captions for.');\r\n      return;\r\n    }\r\n    \r\n    if (!strategyData.promptTemplate) {\r\n      alert('Please select a strategy template first.');\r\n      return;\r\n    }\r\n    \r\n    setIsScheduling(true);\r\n    setScheduleProgress(0);\r\n    \r\n    try {\r\n      const selectedComposerRows = composerRows.filter(row => selectedRows.includes(row.id));\r\n      const captions = [];\r\n      \r\n      // Create the base prompt based on the selected template type\r\n      let prompt = '';\r\n      \r\n      if (strategyData.promptTemplate === 'custom') {\r\n        // Build a detailed prompt for custom templates\r\n        prompt = `\r\n          Brand Name: ${strategyData.brandName || 'Not specified'}\r\n          Hook Idea: ${strategyData.hookIdea || 'Not specified'}\r\n          Key Features: ${strategyData.features || 'Not specified'}\r\n          Location: ${strategyData.location || 'Not specified'}\r\n          Phone: ${strategyData.phone || 'Not specified'}\r\n          Website: ${strategyData.website || 'Not specified'}\r\n          Call to Action: ${strategyData.callToAction || 'Not specified'}\r\n          Image Prompt: ${strategyData.imagePrompt || 'Not specified'}\r\n          \r\n          Custom Template:\r\n          ${strategyData.customStrategyTemplate || ''}\r\n        `;\r\n      } else {\r\n        // Use the selected predefined template\r\n        const selectedTemplate = promptTemplates.find(t => t.prompt === strategyData.promptTemplate);\r\n        if (!selectedTemplate) {\r\n          alert('Invalid strategy template selected.');\r\n          setIsScheduling(false);\r\n          return;\r\n        }\r\n        prompt = selectedTemplate.prompt;\r\n      }\r\n      \r\n      // Generate captions for each selected row\r\n      for (let i = 0; i < selectedComposerRows.length; i++) {\r\n        try {\r\n          const row = selectedComposerRows[i];\r\n          const context = {\r\n            scheduledDate: row.scheduledDate,\r\n            // Add any other context you want to include\r\n          };\r\n          \r\n          // Add context to the prompt\r\n          const fullPrompt = `${prompt}\\n\\nContext: ${JSON.stringify(context, null, 2)}`;\r\n          \r\n          const captionResponse = await apiClient.generateInstagramCaption(fullPrompt);\r\n          \r\n          if (captionResponse.success) {\r\n            captions.push({\r\n              content: captionResponse.content || captionResponse.generated_text || 'No content generated',\r\n              context: context.scheduledDate,\r\n              success: true\r\n            });\r\n          } else {\r\n            console.error('Caption generation failed:', captionResponse.error);\r\n            captions.push({\r\n              content: `Failed to generate caption for: ${context.scheduledDate}`,\r\n              context: context.scheduledDate,\r\n              success: false,\r\n              error: captionResponse.error || 'Unknown error'\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Error generating caption:', error);\r\n          captions.push({\r\n            content: `Error generating caption for: ${selectedComposerRows[i].scheduledDate}`,\r\n            context: selectedComposerRows[i].scheduledDate,\r\n            success: false,\r\n            error: error.message\r\n          });\r\n        }\r\n        \r\n        // Update progress\r\n        setScheduleProgress(Math.round(((i + 1) / selectedComposerRows.length) * 100));\r\n      }\r\n      \r\n      // Update the rows with generated captions\r\n      setComposerRows(prev => \r\n        prev.map(row => {\r\n          if (!selectedRows.includes(row.id)) return row;\r\n          \r\n          const caption = captions.find(c => c.context === row.scheduledDate);\r\n          if (caption && caption.success) {\r\n            return {\r\n              ...row,\r\n              caption: caption.content,\r\n              status: 'ready'\r\n            };\r\n          }\r\n          return row;\r\n        })\r\n      );\r\n      \r\n      // Show success/failure summary\r\n      const successCount = captions.filter(c => c.success).length;\r\n      const failedCount = captions.length - successCount;\r\n      \r\n      let message = '';\r\n      if (successCount > 0 && failedCount === 0) {\r\n        message = `Successfully generated captions for ${successCount} ${successCount === 1 ? 'post' : 'posts'}.`;\r\n      } else if (successCount > 0) {\r\n        message = `Generated ${successCount} captions successfully, but failed to generate ${failedCount}.`;\r\n      } else {\r\n        message = 'Failed to generate any captions. Please try again.';\r\n      }\r\n      \r\n      alert(message);\r\n    } catch (error) {\r\n      console.error('Unexpected error in handleGenerateAllCaptions:', error);\r\n      alert('An unexpected error occurred while generating captions. Please try again.');\r\n    } finally {\r\n      setIsScheduling(false);\r\n      setScheduleProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleGenerateAllImages = async () => {\r\n    if (selectedRows.length === 0) {\r\n      alert('Please select at least one row to generate images.');\r\n      return;\r\n    }\r\n    setIsScheduling(true);\r\n    setScheduleProgress(0);\r\n    try {\r\n      const selectedComposerRows = composerRows.filter(row => selectedRows.includes(row.id));\r\n      let successCount = 0;\r\n      let errorCount = 0;\r\n      \r\n      for (let i = 0; i < selectedComposerRows.length; i++) {\r\n        const row = selectedComposerRows[i];\r\n        \r\n        if (!row.caption || !(row.caption || '').trim()) {\r\n          console.log(`Skipping image generation for row ${row.id} - no caption available`);\r\n          continue;\r\n        }\r\n\r\n        try {\r\n          console.log(`Generating image for row ${row.id} with caption: ${row.caption.substring(0, 50)}...`);\r\n          \r\n          // Truncate caption to 500 characters for image generation\r\n          const imagePrompt = row.caption.trim().substring(0, 500);\r\n          console.log(`Using image prompt (truncated): ${imagePrompt.substring(0, 100)}...`);\r\n          \r\n          // Generate image using Stability AI with the caption as prompt\r\n          const response = await apiClient.generateInstagramImage(imagePrompt, 'feed');\r\n          \r\n          if (response.success && response.data && response.data.image_url) {\r\n            console.log(`Successfully generated image for row ${row.id}:`, response.data.image_url);\r\n            setComposerRows(prev =>\r\n              prev.map(r =>\r\n                r.id === row.id\r\n                  ? { \r\n                      ...r, \r\n                      mediaFile: null, \r\n                      mediaPreview: response.data.image_url, \r\n                      status: (r.caption || '').trim() ? 'ready' : 'draft' \r\n                    }\r\n                  : r\r\n              )\r\n            );\r\n            successCount++;\r\n          } else {\r\n            console.log(`Failed to generate image for row ${row.id}:`, response);\r\n            errorCount++;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error generating image for row ${row.id}:`, error);\r\n          errorCount++;\r\n        }\r\n      }\r\n      \r\n      if (successCount > 0) {\r\n        alert(`Image generation completed! Successfully generated ${successCount} images${errorCount > 0 ? `, ${errorCount} failed` : ''}`);\r\n      } else {\r\n        alert('Failed to generate any images. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in bulk image generation:', error);\r\n      alert('Failed to generate images. Please try again.');\r\n    } finally {\r\n      setIsScheduling(false);\r\n      setScheduleProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleExpandCaption = (rowId) => {\r\n    const row = composerRows.find(r => r.id === rowId);\r\n    if (row) setExpandedCaption(row);\r\n  };\r\n\r\n  const handleViewMedia = (rowId) => {\r\n    const row = composerRows.find(r => r.id === rowId);\r\n    if (row && (row.mediaPreview || row.mediaFile)) setMediaPreviewModal(row);\r\n  };\r\n\r\n  const handleSaveExpandedCaption = (rowId, newCaption) => {\r\n    setComposerRows(prev =>\r\n      prev.map(row =>\r\n        row.id === rowId\r\n          ? { ...row, caption: newCaption, status: ((newCaption || '').trim() && (row.mediaFile || row.mediaPreview)) ? 'ready' : 'draft' }\r\n          : row\r\n      )\r\n    );\r\n    setExpandedCaption(null);\r\n  };\r\n\r\n  const handleRemoveMedia = (rowId) => {\r\n    setComposerRows(prev =>\r\n      prev.map(row =>\r\n        row.id === rowId ? { \r\n          ...row, \r\n          mediaFile: null, \r\n          mediaPreview: null, \r\n          carouselImages: row.postType === 'carousel' ? [] : null,\r\n          status: (row.caption || '').trim() ? 'draft' : 'draft' \r\n        } : row\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleGenerateCarousel = async (rowId) => {\r\n    try {\r\n      const row = composerRows.find(r => r.id === rowId);\r\n      if (!row || !(row.caption || '').trim()) {\r\n        alert('Please add a caption first to generate carousel images.');\r\n        return;\r\n      }\r\n\r\n      console.log(`Generating carousel for row ${rowId} with caption: ${row.caption.substring(0, 50)}...`);\r\n      \r\n      const imagePrompt = row.caption.trim().substring(0, 500);\r\n      const imageCount = row.carouselImageCount || 3;\r\n      \r\n      if (imageCount < 3 || imageCount > 7) {\r\n        alert('Carousel must have between 3 and 7 images.');\r\n        return;\r\n      }\r\n      \r\n      console.log(`🎨 Generating ${imageCount} carousel images with prompt: ${imagePrompt}`);\r\n      \r\n      const response = await apiClient.generateInstagramCarousel(imagePrompt, imageCount);\r\n      \r\n      if (response.success && response.image_urls && response.image_urls.length >= 3) {\r\n        console.log(`Successfully generated carousel for row ${rowId}:`, response.image_urls);\r\n        setComposerRows(prev => \r\n          prev.map(r => \r\n            r.id === rowId\r\n              ? {\r\n                  ...r, \r\n                  carouselImages: response.image_urls,\r\n                  status: (() => {\r\n                    const hasCaption = (r.caption || '').trim();\r\n                    const hasEnoughImages = response.image_urls.length >= 3;\r\n                    return hasCaption && hasEnoughImages ? 'ready' : 'draft';\r\n                  })()\r\n                }\r\n              : r\r\n          )\r\n        );\r\n      } else {\r\n        console.log(`Failed to generate carousel for row ${rowId}:`, response);\r\n        const errorMsg = response.error || 'Failed to generate enough carousel images. Please try again.';\r\n        alert(`Failed to generate carousel: ${errorMsg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error generating carousel for row ${rowId}:`, error);\r\n      alert('Error generating carousel images. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCarouselUpload = async (rowId, event) => {\r\n    const files = Array.from(event.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    const row = composerRows.find(r => r.id === rowId);\r\n    const maxImages = row.carouselImageCount || 3;\r\n    const minImages = 3;\r\n    \r\n    if (files.length < minImages) {\r\n      alert(`Please select at least ${minImages} images for a carousel post.`);\r\n      return;\r\n    }\r\n    \r\n    if (files.length > maxImages) {\r\n      alert(`Please select only ${maxImages} images for this carousel.`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(`🖼️ Uploading ${files.length} carousel images for row ${rowId}`);\r\n      \r\n      const imageUrls = [];\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        \r\n        // Validate file type\r\n        if (!file.type.startsWith('image/')) {\r\n          alert(`File ${file.name} is not an image. Please select only image files.`);\r\n          continue;\r\n        }\r\n        \r\n        console.log(`📤 Uploading carousel image ${i + 1}/${files.length}: ${file.name}`);\r\n        \r\n        // Upload to Cloudinary\r\n        const uploadResponse = await apiClient.uploadImageToCloudinary(file);\r\n        \r\n        if (uploadResponse && uploadResponse.success && uploadResponse.data && uploadResponse.data.url) {\r\n          imageUrls.push(uploadResponse.data.url);\r\n          console.log(`✅ Carousel image ${i + 1} uploaded: ${uploadResponse.data.url}`);\r\n        } else {\r\n          console.error(`❌ Failed to upload carousel image ${i + 1}:`, uploadResponse);\r\n          alert(`Failed to upload image ${file.name}. Please try again.`);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (imageUrls.length >= minImages) {\r\n        setComposerRows(prev => \r\n          prev.map(r => \r\n            r.id === rowId\r\n              ? {\r\n                  ...r, \r\n                  carouselImages: imageUrls,\r\n                  status: (() => {\r\n                    const hasCaption = (r.caption || '').trim();\r\n                    const hasEnoughImages = imageUrls.length >= 3;\r\n                    return hasCaption && hasEnoughImages ? 'ready' : 'draft';\r\n                  })()\r\n                }\r\n              : r\r\n          )\r\n        );\r\n        console.log(`✅ Successfully uploaded ${imageUrls.length} carousel images for row ${rowId}`);\r\n      } else {\r\n        alert(`Please upload at least ${minImages} images for a carousel post.`);\r\n      }\r\n      \r\n      // Clear the file input\r\n      if (carouselInputRefs.current[rowId]) {\r\n        carouselInputRefs.current[rowId].value = '';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing carousel upload:', error);\r\n      alert('Error uploading carousel images. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDuplicateRow = (rowId) => {\r\n    const rowToDuplicate = composerRows.find(row => row.id === rowId);\r\n    if (rowToDuplicate) {\r\n      const newRow = {\r\n        ...rowToDuplicate,\r\n        id: `row-${Date.now()}-${Math.random()}`,\r\n        scheduledDate: new Date(rowToDuplicate.scheduledDate).toISOString().split('T')[0],\r\n        postType: rowToDuplicate.postType ? rowToDuplicate.postType.toLowerCase() : 'photo'\r\n      };\r\n      setComposerRows(prev => [...prev, newRow]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRow = (rowId) => {\r\n    setComposerRows(prev => prev.filter(row => row.id !== rowId));\r\n    setSelectedRows(prev => prev.filter(id => id !== rowId));\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    setComposerRows(prev => prev.filter(row => !selectedRows.includes(row.id)));\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleTimeShift = (direction) => {\r\n    setComposerRows(prev => \r\n      prev.map(row => {\r\n        if (selectedRows.includes(row.id)) {\r\n          const [hours, minutes] = row.scheduledTime.split(':');\r\n          let newHours = parseInt(hours) + (direction === 'forward' ? 1 : -1);\r\n          if (newHours < 0) newHours = 23;\r\n          if (newHours > 23) newHours = 0;\r\n          return {\r\n            ...row,\r\n            scheduledTime: `${newHours.toString().padStart(2, '0')}:${minutes}`\r\n          };\r\n        }\r\n        return row;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDragStart = (rowId) => setDragStartRow(rowId);\r\n  const handleDragOver = (e) => e.preventDefault();\r\n  const handleDrop = (targetRowId) => {\r\n    if (dragStartRow && dragStartRow !== targetRowId) {\r\n      const rows = [...composerRows];\r\n      const sourceIndex = rows.findIndex(row => row.id === dragStartRow);\r\n      const targetIndex = rows.findIndex(row => row.id === targetRowId);\r\n      const [movedRow] = rows.splice(sourceIndex, 1);\r\n      rows.splice(targetIndex, 0, movedRow);\r\n      setComposerRows(rows);\r\n    }\r\n    setDragStartRow(null);\r\n  };\r\n\r\n  const handleScheduleAll = async () => {\r\n    if (!selectedAccount || composerRows.length === 0) return;\r\n    setIsScheduling(true);\r\n    setScheduleProgress(0);\r\n    \r\n    try {\r\n      const readyRows = composerRows.filter(row => row.status === 'ready');\r\n      console.log(`🔄 Starting bulk scheduling for ${readyRows.length} posts...`);\r\n      \r\n      // Progress tracking for media processing\r\n      let processedCount = 0;\r\n      const totalPosts = readyRows.length;\r\n      \r\n      const postsWithMedia = await Promise.all(\r\n        readyRows.map(async (row, index) => {\r\n          const basePost = {\r\n            caption: row.caption,\r\n            scheduled_datetime: `${row.scheduledDate}T${row.scheduledTime}:00+05:30`,\r\n            scheduled_date: row.scheduledDate,\r\n            scheduled_time: row.scheduledTime,\r\n            post_type: (row.postType || 'photo').toLowerCase()\r\n          };\r\n\r\n          if (row.postType === 'photo') {\r\n            if (row.mediaFile) {\r\n              const result = {\r\n                ...basePost,\r\n                media_file: await fileToBase64(row.mediaFile),\r\n                media_filename: row.mediaFile.name\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            } else if (row.mediaPreview && row.mediaPreview.startsWith('data:')) {\r\n              const result = {\r\n                ...basePost,\r\n                media_file: row.mediaPreview,\r\n                media_filename: 'generated_image.jpg'\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            } else if (row.mediaPreview && row.mediaPreview.startsWith('http')) {\r\n              const result = {\r\n                ...basePost,\r\n                image_prompt: row.caption.substring(0, 200)\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            } else {\r\n              const result = {\r\n                ...basePost,\r\n                image_prompt: strategyData.imagePrompt || row.caption.substring(0, 200)\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            }\r\n          } else if (row.postType === 'carousel') {\r\n            if (row.carouselImages && row.carouselImages.length > 0) {\r\n              const carouselFiles = row.carouselImages;\r\n              const result = {\r\n                ...basePost,\r\n                carousel_images: carouselFiles,\r\n                carousel_filenames: carouselFiles.map((_, idx) => `carousel_image_${idx + 1}.jpg`)\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            } else {\r\n              const result = {\r\n                ...basePost,\r\n                carousel_image_count: row.carouselImageCount || 3,\r\n                image_prompt: strategyData.imagePrompt || row.caption.substring(0, 200)\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            }\r\n          } else if (row.postType === 'reel') {\r\n            if (row.mediaFile) {\r\n              const result = {\r\n                ...basePost,\r\n                media_file: await fileToBase64(row.mediaFile),\r\n                media_filename: row.mediaFile.name\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            } else if (row.mediaPreview && row.mediaPreview.startsWith('data:')) {\r\n              const result = {\r\n                ...basePost,\r\n                media_file: row.mediaPreview,\r\n                media_filename: 'generated_video.mp4'\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            } else {\r\n              const result = {\r\n                ...basePost,\r\n                image_prompt: strategyData.imagePrompt || row.caption.substring(0, 200)\r\n              };\r\n              processedCount++;\r\n              setScheduleProgress((processedCount / totalPosts) * 30);\r\n              return result;\r\n            }\r\n          }\r\n\r\n          processedCount++;\r\n          setScheduleProgress((processedCount / totalPosts) * 30);\r\n          return basePost;\r\n        })\r\n      );\r\n      \r\n      // Final normalization: ensure all outgoing post_type values are lowercase\r\n      const normalizedPostsWithMedia = postsWithMedia.map(post => ({\r\n        ...post,\r\n        post_type: (post.post_type || 'photo').toLowerCase()\r\n      }));\r\n      \r\n      const bulkData = {\r\n        social_account_id: selectedAccount.id,\r\n        posts: normalizedPostsWithMedia\r\n      };\r\n      \r\n      console.log(`🚀 Sending ${normalizedPostsWithMedia.length} posts to backend for scheduling...`);\r\n      setScheduleProgress(40); // 40% for API call start\r\n      \r\n      const response = await apiClient.bulkScheduleInstagramPosts(bulkData);\r\n      setScheduleProgress(90); // 90% for API response\r\n      console.log('Bulk schedule response:', response);\r\n      if (response && response.success) {\r\n        console.log(`✅ Successfully scheduled ${response.scheduled_posts?.length || 0} posts`);\r\n        setComposerRows(prev =>\r\n          prev.map(row =>\r\n            readyRows.some(r => r.id === row.id) ? { ...row, status: 'scheduled' } : row\r\n          )\r\n        );\r\n        setScheduleProgress(100);\r\n        setScheduledGridRows(response.scheduled_posts || []);\r\n        // Redirect to InstagramPage with scheduled posts for grid display\r\n        navigate('/instagram', { state: { scheduledGridRows: response.scheduled_posts || [] } });\r\n      } else if (response && Array.isArray(response.results)) {\r\n        // Handle legacy or alternate backend response\r\n        const successCount = response.results.filter(r => r.success).length;\r\n        const failedCount = response.results.filter(r => !r.success).length;\r\n        let errorMsg = `Scheduled ${successCount} posts successfully.`;\r\n        if (failedCount > 0) {\r\n          errorMsg += `\\n${failedCount} posts failed. Check console for details.`;\r\n          response.results.forEach((result, idx) => {\r\n            if (!result.success) {\r\n              errorMsg += `\\nPost #${idx + 1}: ${result.error || result.message || 'Unknown error'}`;\r\n            }\r\n          });\r\n        }\r\n        alert(errorMsg);\r\n        setComposerRows(prev =>\r\n          prev.map(row => {\r\n            const result = response.results.find(r => r.caption === row.caption && r.scheduled_date === row.scheduledDate);\r\n            if (result) {\r\n              return {\r\n                ...row,\r\n                status: result.success ? 'scheduled' : 'failed',\r\n                error: result.success ? null : (result.error || 'Unknown error')\r\n              };\r\n            }\r\n            return row;\r\n          })\r\n        );\r\n        setScheduleProgress(100);\r\n        setScheduledGridRows(response.results.filter(r => r.success));\r\n        navigate('/instagram', { state: { scheduledGridRows: response.results.filter(r => r.success) } });\r\n      } else {\r\n        let errorMsg = 'Error scheduling Instagram posts.';\r\n        if (response && response.failed_posts && response.failed_posts.length > 0) {\r\n          errorMsg += '\\nFailed posts:';\r\n          response.failed_posts.forEach(fp => {\r\n            errorMsg += `\\nPost #${fp.index + 1}: ${fp.error}`;\r\n          });\r\n        } else if (response && response.message) {\r\n          errorMsg += `\\n${response.message}`;\r\n        } else if (response && response.errorData) {\r\n          errorMsg += `\\nAPI Error: ${JSON.stringify(response.errorData)}`;\r\n        }\r\n        alert(errorMsg);\r\n        console.error('Bulk scheduling error:', response);\r\n      }\r\n    } catch (error) {\r\n      let errorMsg = 'Error scheduling Instagram posts. Please try again.';\r\n      // Check if any of the readyRows are reels\r\n      const hasReel = composerRows.filter(row => selectedRows.includes(row.id)).some(row => (row.postType || '').toLowerCase() === 'reel');\r\n      if (error && error.error === 'timeout') {\r\n        if (hasReel) {\r\n          errorMsg = 'Your reel is being processed and will be scheduled soon. Please check back in a few minutes.';\r\n        } else {\r\n          errorMsg = 'Request timed out. Video processing may take longer. Please try again or check your video file size.';\r\n        }\r\n      } else if (error && error.errorData) {\r\n        errorMsg += `\\nAPI Error: ${JSON.stringify(error.errorData)}`;\r\n      } else if (error && error.message) {\r\n        errorMsg += `\\n${error.message}`;\r\n      }\r\n      alert(errorMsg);\r\n      console.error('Bulk scheduling exception:', error);\r\n    } finally {\r\n      setIsScheduling(false);\r\n      setScheduleProgress(0);\r\n    }\r\n  };\r\n\r\n  // Calendar day click logic\r\n  const handleCalendarDateSelect = (date) => {\r\n    setStrategyData(prev => ({\r\n      ...prev,\r\n      startDate: date.toISOString().split('T')[0]\r\n    }));\r\n  };\r\n\r\n  // UI helpers\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'published': return '✓';\r\n      case 'failed': return '✗';\r\n      case 'scheduled': return '⏰';\r\n      case 'ready': return '🟢';\r\n      default: return '📝';\r\n    }\r\n  };\r\n  const getStatusClass = (status) => {\r\n    switch (status) {\r\n      case 'published': return 'ig-status-published';\r\n      case 'failed': return 'ig-status-failed';\r\n      case 'scheduled': return 'ig-status-scheduled';\r\n      case 'ready': return 'ig-status-ready';\r\n      default: return 'ig-status-draft';\r\n    }\r\n  };\r\n\r\n  // Calendar helpers\r\n  const generateCalendarDays = (year, month) => {\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\r\n    const days = [];\r\n    for (let i = 0; i < firstDayOfMonth; i++) days.push({ day: null, date: null });\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      const date = new Date(year, month, i);\r\n      days.push({ day: i, date });\r\n    }\r\n    return days;\r\n  };\r\n  const getPostsForDate = (date) => {\r\n    // Format date as YYYY-MM-DD using local date parts\r\n    const yyyy = date.getFullYear();\r\n    const mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    const dd = String(date.getDate()).padStart(2, '0');\r\n    const dateString = `${yyyy}-${mm}-${dd}`;\r\n    return composerRows.filter(row => row.scheduledDate === dateString);\r\n  };\r\n\r\n  const handleRemoveCarouselImages = (rowId) => {\r\n    setComposerRows(prev => \r\n      prev.map(r => \r\n        r.id === rowId\r\n          ? {\r\n              ...r, \r\n              carouselImages: [],\r\n              status: 'draft' // Always reset to draft when removing images\r\n            }\r\n          : r\r\n      )\r\n    );\r\n    console.log(`🗑️ Removed carousel images for row ${rowId}`);\r\n  };\r\n\r\n  // --- RENDER ---\r\n  return (\r\n    <div className=\"ig-bulk-composer\">\r\n      <div className=\"ig-bulk-composer-header\">\r\n        <h2>Instagram Bulk Composer</h2>\r\n        </div>\r\n\r\n      <div className=\"ig-bulk-composer-content\">\r\n        {/* Strategy Step */}\r\n        <div className=\"ig-strategy-step\">\r\n          <h3>Step 1: Strategy & Schedule</h3>\r\n          <div className=\"ig-strategy-form\">\r\n            \r\n            {/* Post Type Selection */}\r\n            <div className=\"ig-form-group\">\r\n              <label>Post Type</label>\r\n              <div className=\"ig-post-type-toggle\">\r\n                <button \r\n                  className={postType === 'photo' ? 'active' : ''} \r\n                  onClick={() => handlePostTypeChange('photo')}\r\n                >\r\n                  📸 Photo\r\n                </button>\r\n                <button \r\n                  className={postType === 'carousel' ? 'active' : ''} \r\n                  onClick={() => handlePostTypeChange('carousel')}\r\n                >\r\n                  🖼️ Carousel\r\n                </button>\r\n                <button \r\n                  className={postType === 'reel' ? 'active' : ''} \r\n                  onClick={() => handlePostTypeChange('reel')}\r\n                >\r\n                  🎬 Reel\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Carousel Image Count */}\r\n              {postType === 'carousel' && (\r\n                <div className=\"ig-form-group\">\r\n                  <label>Number of Images: {carouselImageCount}</label>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"3\"\r\n                    max=\"7\"\r\n                    value={carouselImageCount}\r\n                    onChange={(e) => handleCarouselImageCountChange(parseInt(e.target.value))}\r\n                    className=\"ig-slider\"\r\n                  />\r\n                  <div className=\"ig-slider-labels\">\r\n                    <span>3</span>\r\n                    <span>4</span>\r\n                    <span>5</span>\r\n                    <span>6</span>\r\n                    <span>7</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* AI Image Prompt */}\r\n              {(postType === 'photo' || postType === 'carousel') && (\r\n                <div className=\"ig-form-group\">\r\n                  <label>AI Image Prompt (Optional)</label>\r\n                  <textarea\r\n                    value={strategyData.imagePrompt || ''}\r\n                    onChange={(e) => handleStrategyChange('imagePrompt', e.target.value)}\r\n                    placeholder=\"Describe the images you want AI to generate (e.g., 'modern office setup', 'colorful abstract art')\"\r\n                    className=\"ig-form-input\"\r\n                    rows=\"2\"\r\n                  />\r\n                  <small className=\"ig-form-help\">\r\n                    Leave empty to use captions as image prompts, or specify custom prompts for AI image generation.\r\n                  </small>\r\n                </div>\r\n              )}\r\n            </div>\r\n          <div className=\"ig-form-group\">\r\n              <label>Strategy Template</label>\r\n                  <select\r\n                value={strategyData.promptTemplate}\r\n                onChange={(e) => handleStrategyChange('promptTemplate', e.target.value)}\r\n                    className=\"ig-form-select\"\r\n                  >\r\n                <option value=\"\">Select a template...</option>\r\n                {promptTemplates.map(template => (\r\n                  <option key={template.id} value={template.prompt}>\r\n                    {template.name}\r\n                  </option>\r\n                ))}\r\n                  </select>\r\n                </div>\r\n            {strategyData.promptTemplate === 'custom' && (\r\n              <div className=\"ig-form-group\">\r\n                <label>Brand Information</label>\r\n                <div className=\"ig-form-row\">\r\n                  <div className=\"ig-form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={strategyData.brandName}\r\n                      onChange={(e) => handleStrategyChange('brandName', e.target.value)}\r\n                      placeholder=\"Brand Name\"\r\n                      className=\"ig-form-input\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"ig-form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={strategyData.hookIdea}\r\n                      onChange={(e) => handleStrategyChange('hookIdea', e.target.value)}\r\n                      placeholder=\"Hook Idea (e.g., Tired of the shore?)\"\r\n                      className=\"ig-form-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"ig-form-group\">\r\n                  <label>Features (one per line)</label>\r\n                  <textarea\r\n                    value={strategyData.features}\r\n                    onChange={(e) => handleStrategyChange('features', e.target.value)}\r\n                    placeholder=\"✅ Feature 1\\n✅ Feature 2\\n✅ Feature 3\"\r\n                    className=\"ig-form-input\"\r\n                    rows=\"3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"ig-form-row\">\r\n                  <div className=\"ig-form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={strategyData.location}\r\n                      onChange={(e) => handleStrategyChange('location', e.target.value)}\r\n                      placeholder=\"Location\"\r\n                      className=\"ig-form-input\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"ig-form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={strategyData.phone}\r\n                      onChange={(e) => handleStrategyChange('phone', e.target.value)}\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"ig-form-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"ig-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={strategyData.website}\r\n                    onChange={(e) => handleStrategyChange('website', e.target.value)}\r\n                    placeholder=\"Website URL\"\r\n                    className=\"ig-form-input\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"ig-form-group\">\r\n                  <textarea\r\n                    value={strategyData.callToAction}\r\n                    onChange={(e) => handleStrategyChange('callToAction', e.target.value)}\r\n                    placeholder=\"Call to Action (e.g., Book your appointment today!)\"\r\n                    className=\"ig-form-input\"\r\n                    rows=\"2\"\r\n                  />\r\n                </div>\r\n\r\n                <small className=\"ig-form-help\">\r\n                  This information will be used to generate captions that follow your brand's style and approach.\r\n                </small>\r\n              </div>\r\n            )}\r\n            <div className=\"ig-form-row\">\r\n                <div className=\"ig-form-group\">\r\n                  <label>Start Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                  value={strategyData.startDate}\r\n                  onChange={(e) => handleStrategyChange('startDate', e.target.value)}\r\n                    className=\"ig-form-input\"\r\n                  />\r\n                </div>\r\n                <div className=\"ig-form-group\">\r\n                <label>End Date (Optional)</label>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={strategyData.endDate}\r\n                    onChange={(e) => handleStrategyChange('endDate', e.target.value)}\r\n                    className=\"ig-form-input\"\r\n                    min={strategyData.startDate}\r\n                    disabled={!strategyData.startDate}\r\n                  />\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => handleStrategyChange('endDate', '')}\r\n                    className=\"ig-btn ig-btn-secondary ig-btn-small\"\r\n                    disabled={!strategyData.endDate}\r\n                    title=\"Clear end date (single day schedule)\"\r\n                  >\r\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\r\n                      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\r\n                      </svg>\r\n                    Clear\r\n                </button>\r\n              </div>\r\n                <small className=\"ig-form-help\">\r\n                  Leave empty for single day schedule\r\n                </small>\r\n            </div>\r\n                  <div className=\"ig-form-group\">\r\n                    <label>Frequency</label>\r\n                    <select\r\n                      value={strategyData.frequency}\r\n                      onChange={(e) => handleStrategyChange('frequency', e.target.value)}\r\n                      className=\"ig-form-select\"\r\n                    >\r\n                      <option value=\"daily\">Daily</option>\r\n                      <option value=\"weekly\">Weekly</option>\r\n                      <option value=\"monthly\">Monthly</option>\r\n                      <option value=\"custom\">Custom Cron</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"ig-form-group\">\r\n                    <label>Time Slot</label>\r\n                    <input\r\n                      type=\"time\"\r\n                      value={strategyData.timeSlot}\r\n                      onChange={(e) => handleStrategyChange('timeSlot', e.target.value)}\r\n                      className=\"ig-form-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {strategyData.frequency === 'custom' && (\r\n                  <div className=\"ig-form-group\">\r\n                    <label>Custom Cron Expression</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={strategyData.customCron}\r\n                      onChange={(e) => handleStrategyChange('customCron', e.target.value)}\r\n                      placeholder=\"0 9 * * * (daily at 9 AM)\"\r\n                      className=\"ig-form-input\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n        </div>\r\n\r\n        {/* Calendar Preview */}\r\n        <div className=\"ig-calendar-preview-section\">\r\n          <h3>Calendar Preview</h3>\r\n          <div className=\"ig-calendar-container\">\r\n            <div className=\"ig-calendar-header\">\r\n              <button\r\n                onClick={() => setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() - 1))}\r\n                className=\"ig-btn ig-btn-secondary ig-btn-small\"\r\n              >\r\n                ←\r\n              </button>\r\n              <h4>{currentMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}</h4>\r\n              <button\r\n                onClick={() => setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() + 1))}\r\n                className=\"ig-btn ig-btn-secondary ig-btn-small\"\r\n              >\r\n                →\r\n              </button>\r\n            </div>\r\n            <div className=\"ig-calendar-grid\">\r\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n                <div key={day} className=\"ig-calendar-day-header\">{day}</div>\r\n              ))}\r\n              {generateCalendarDays(currentMonth.getFullYear(), currentMonth.getMonth()).map((day, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`ig-calendar-day ${day.date ? 'clickable' : ''} ${day.date && getPostsForDate(day.date).length > 0 ? 'has-posts' : ''}`}\r\n                  onClick={() => day.date && handleCalendarDateSelect(day.date)}\r\n                >\r\n                  <span className=\"ig-day-number\">{day.day}</span>\r\n                  {day.date && getPostsForDate(day.date).length > 0 && (\r\n                    <div className=\"ig-post-indicators\">\r\n                      {getPostsForDate(day.date).map((post, postIndex) => (\r\n                        <div\r\n                          key={postIndex}\r\n                          className=\"ig-post-dot\"\r\n                          title={`${post.scheduledTime} - ${(post.caption || '').substring(0, 30)}...`}\r\n                        />\r\n                      ))}\r\n            </div>\r\n          )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Composer Grid */}\r\n        <div className=\"ig-composer-grid-section\">\r\n          <div className=\"ig-composer-header\">\r\n            <h3>Step 2: Content Grid</h3>\r\n            <div className=\"ig-composer-controls\">\r\n              <button\r\n                onClick={() => {\r\n                  const newRow = {\r\n                    id: `row-${Date.now()}-${Math.random()}`,\r\n                    caption: '',\r\n                    postType: postType.toLowerCase(),\r\n                    mediaFile: null,\r\n                    mediaPreview: null,\r\n                    carouselImages: postType === 'carousel' ? [] : null,\r\n                    carouselImageCount: postType === 'carousel' ? carouselImageCount : null,\r\n                    scheduledDate: new Date().toISOString().split('T')[0],\r\n                    scheduledTime: strategyData.timeSlot,\r\n                    status: 'draft',\r\n                    isSelected: false\r\n                  };\r\n                  setComposerRows(prev => [...prev, newRow]);\r\n                }}\r\n                className=\"ig-btn ig-btn-primary ig-btn-small\"\r\n              >\r\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                  <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\r\n                  <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\r\n                </svg>\r\n                Add Row\r\n              </button>\r\n              <button\r\n                onClick={handleSelectAll}\r\n                className=\"ig-btn ig-btn-secondary ig-btn-small\"\r\n              >\r\n                {selectedRows.length === composerRows.length ? 'Deselect All' : 'Select All'}\r\n              </button>\r\n              <button\r\n                onClick={handleBulkDelete}\r\n                disabled={selectedRows.length === 0}\r\n                className=\"ig-btn ig-btn-danger ig-btn-small\"\r\n              >\r\n                Delete Selected\r\n              </button>\r\n              <button\r\n                className=\"ig-btn ig-btn-primary\"\r\n                onClick={handleGenerateAllCaptions}\r\n                disabled={composerRows.length === 0 || selectedRows.length === 0}\r\n              >\r\n                Generate Captions\r\n              </button>\r\n              <button\r\n                className=\"ig-btn ig-btn-secondary\"\r\n                onClick={handleGenerateAllImages}\r\n                disabled={composerRows.length === 0 || selectedRows.length === 0}\r\n              >\r\n                Generate Images\r\n              </button>\r\n              <div className=\"ig-time-shift-controls\">\r\n                <button\r\n                  onClick={() => handleTimeShift('backward')}\r\n                  disabled={selectedRows.length === 0}\r\n                  className=\"ig-btn ig-btn-secondary ig-btn-small\"\r\n                >\r\n                  ← -1h\r\n                </button>\r\n                <button\r\n                  onClick={() => handleTimeShift('forward')}\r\n                  disabled={selectedRows.length === 0}\r\n                  className=\"ig-btn ig-btn-secondary ig-btn-small\"\r\n                >\r\n                  +1h →\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ig-composer-grid-container\">\r\n            <div className=\"ig-composer-grid\" ref={gridRef}>\r\n              <div className=\"ig-grid-header ig-grid-row\">\r\n                <div className=\"ig-grid-cell ig-header-cell\"></div>\r\n                <div className=\"ig-grid-cell ig-header-cell\">Caption</div>\r\n                <div className=\"ig-grid-cell ig-header-cell\">Media</div>\r\n                <div className=\"ig-grid-cell ig-header-cell\">Date</div>\r\n                <div className=\"ig-grid-cell ig-header-cell\">Time</div>\r\n                <div className=\"ig-grid-cell ig-header-cell\">Status</div>\r\n              </div>\r\n              <div className=\"ig-grid-body\">\r\n                {composerRows.map((row, index) => (\r\n                  <div\r\n                    key={row.id}\r\n                    className={`ig-grid-row ${row.isSelected ? 'selected' : ''}`}\r\n                    draggable\r\n                    onDragStart={() => handleDragStart(row.id)}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={() => handleDrop(row.id)}\r\n                  >\r\n                    <div className=\"ig-grid-cell\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedRows.includes(row.id)}\r\n                        onChange={() => handleRowSelect(row.id)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"ig-grid-cell ig-caption-cell\">\r\n                      <div className=\"caption-container\">\r\n                      <textarea\r\n                        value={row.caption}\r\n                        onChange={(e) => handleCellEdit(row.id, 'caption', e.target.value)}\r\n                        placeholder=\"Enter your Instagram post caption...\"\r\n                        className=\"ig-caption-input\"\r\n                        rows=\"3\"\r\n                      />\r\n                        <button\r\n                          onClick={() => handleExpandCaption(row.id)}\r\n                          className=\"expand-btn\"\r\n                          title=\"Expand caption\"\r\n                        >\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <path d=\"M15 3h6v6\"/>\r\n                            <path d=\"M9 21H3v-6\"/>\r\n                            <path d=\"M21 3l-7 7\"/>\r\n                            <path d=\"M3 21l7-7\"/>\r\n                          </svg>\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"ig-grid-cell ig-media-cell\">\r\n                      <div className=\"ig-media-options\">\r\n                        {!row.mediaPreview && !row.mediaFile && (!row.carouselImages || row.carouselImages.length === 0) ? (\r\n                        <div className=\"ig-media-option-group\">\r\n                          {/* Photo/Reel Upload */}\r\n                          {(row.postType === 'photo' || row.postType === 'reel') && (\r\n                            <>\r\n                          <input\r\n                            type=\"file\"\r\n                                accept={row.postType === 'photo' ? \"image/*\" : \"video/*\"}\r\n                            onChange={(e) => handleMediaUpload(row.id, e)}\r\n                            className=\"ig-media-input\"\r\n                            id={`ig-media-upload-${row.id}`}\r\n                          />\r\n                          <label htmlFor={`ig-media-upload-${row.id}`} className=\"ig-media-option-btn upload-btn\">\r\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\r\n                              <polyline points=\"7,10 12,15 17,10\"/>\r\n                              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\r\n                            </svg>\r\n                                Upload {row.postType === 'photo' ? 'Image' : 'Video'}\r\n                          </label>\r\n                            </>\r\n                          )}\r\n                          \r\n                          {/* AI Generation for Photo */}\r\n                          {row.postType === 'photo' && (\r\n                          <button\r\n                            onClick={() => handleGenerateMedia(row.id)}\r\n                            className=\"ig-media-option-btn generate-btn\"\r\n                          >\r\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                              <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                            </svg>\r\n                            Generate\r\n                          </button>\r\n                          )}\r\n                          \r\n                          {/* AI Generation for Reel */}\r\n                          {row.postType === 'reel' && (\r\n                            <button\r\n                              onClick={() => handleGenerateMedia(row.id)}\r\n                              className=\"ig-media-option-btn generate-btn\"\r\n                              disabled={true}\r\n                              title=\"AI video generation not yet available\"\r\n                            >\r\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                              </svg>\r\n                              Generate (Coming Soon)\r\n                            </button>\r\n                          )}\r\n                          \r\n                          {/* Carousel Options */}\r\n                          {row.postType === 'carousel' && (\r\n                            <>\r\n                              <button\r\n                                onClick={() => handleGenerateCarousel(row.id)}\r\n                                className=\"ig-media-option-btn generate-btn\"\r\n                              >\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                                </svg>\r\n                                Generate {row.carouselImageCount || 3} Images\r\n                              </button>\r\n                              <input\r\n                                key={`ig-carousel-upload-${row.id}`}\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                multiple\r\n                                ref={el => carouselInputRefs.current[row.id] = el}\r\n                                onChange={(e) => handleCarouselUpload(row.id, e)}\r\n                                className=\"ig-media-input\"\r\n                                id={`ig-carousel-upload-${row.id}`}\r\n                              />\r\n                              <label htmlFor={`ig-carousel-upload-${row.id}`} className=\"ig-media-option-btn upload-btn\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\r\n                                  <polyline points=\"7,10 12,15 17,10\"/>\r\n                                  <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\r\n                                </svg>\r\n                                Upload {row.carouselImageCount || 3} Images\r\n                              </label>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        ) : (\r\n                          <div className=\"ig-media-preview\">\r\n                            {/* Carousel Preview */}\r\n                            {row.postType === 'carousel' && row.carouselImages && row.carouselImages.length > 0 ? (\r\n                              <div className=\"ig-carousel-preview\">\r\n                                <div className=\"ig-carousel-grid\">\r\n                                  {row.carouselImages.slice(0, row.carouselImageCount || 3).map((url, index) => (\r\n                                    <div key={index} className=\"ig-carousel-item\">\r\n                                      <img src={url} alt={`Carousel ${index + 1}`} />\r\n                                      <span className=\"ig-carousel-number\">{index + 1}</span>\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                                <div className=\"ig-carousel-info\">\r\n                                  <div className=\"ig-carousel-status\">\r\n                                    {row.carouselImages.length} / {row.carouselImageCount || 3} images\r\n                                    {row.carouselImages.length < 3 && (\r\n                                      <span className=\"ig-carousel-warning\">⚠️ Need at least 3 images</span>\r\n                                    )}\r\n                                    {row.carouselImages.length >= 3 && (\r\n                                      <span className=\"ig-carousel-success\">✅ Ready</span>\r\n                                    )}\r\n                                  </div>\r\n                                  <button\r\n                                    onClick={() => handleRemoveCarouselImages(row.id)}\r\n                                    className=\"ig-btn ig-btn-danger ig-btn-small\"\r\n                                    disabled={row.carouselImages.length === 0}\r\n                                    title=\"Remove all carousel images\"\r\n                                  >\r\n                                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\r\n                                      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\r\n                                    </svg>\r\n                                    Remove All\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              /* Single Media Preview */\r\n                              <>\r\n                            {row.mediaFile?.type?.startsWith('image/') ? (\r\n                              <img src={row.mediaPreview} alt=\"Preview\" />\r\n                            ) : (\r\n                              <video src={row.mediaPreview} controls />\r\n                                )}\r\n                              </>\r\n                            )}\r\n                            <button\r\n                              onClick={() => handleViewMedia(row.id)}\r\n                              className=\"view-media-btn\"\r\n                              title=\"View media\"\r\n                            >\r\n                              <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\r\n                                <circle cx=\"12\" cy=\"12\" r=\"3\"/>\r\n                              </svg>\r\n                            </button>\r\n                            <button\r\n                              onClick={() => handleRemoveMedia(row.id)}\r\n                              className=\"remove-media-btn\"\r\n                              title=\"Remove media\"\r\n                            >\r\n                              <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\r\n                                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ig-grid-cell ig-date-cell\">\r\n                      <input\r\n                        type=\"date\"\r\n                        value={row.scheduledDate}\r\n                        onChange={(e) => handleCellEdit(row.id, 'scheduledDate', e.target.value)}\r\n                        className=\"ig-date-input\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"ig-grid-cell ig-time-cell\">\r\n                      <input\r\n                        type=\"time\"\r\n                        value={row.scheduledTime}\r\n                        onChange={(e) => handleCellEdit(row.id, 'scheduledTime', e.target.value)}\r\n                        className=\"ig-time-input\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"ig-grid-cell ig-status-cell\">\r\n                      <span className={`ig-status-badge ${getStatusClass(row.status)}`}>\r\n                        {getStatusIcon(row.status)} {row.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Queue Confirmation */}\r\n        <div className=\"ig-queue-confirmation\">\r\n          <h3>Step 3: Schedule & Publish</h3>\r\n          <div className=\"ig-confirmation-stats\">\r\n            <div className=\"ig-stat-item\">\r\n              <span className=\"ig-stat-label\">Total Posts:</span>\r\n              <span className=\"ig-stat-value\">{composerRows.length}</span>\r\n            </div>\r\n            <div className=\"ig-stat-item\">\r\n              <span className=\"ig-stat-label\">With Captions:</span>\r\n              <span className=\"ig-stat-value\">{composerRows.filter(row => (row.caption || '').trim()).length}</span>\r\n            </div>\r\n            <div className=\"ig-stat-item\">\r\n              <span className=\"ig-stat-label\">Ready to Schedule:</span>\r\n              <span className=\"ig-stat-value\">{composerRows.filter(row => row.status === 'ready').length}</span>\r\n            </div>\r\n            <div className=\"ig-stat-item\">\r\n              <span className=\"ig-stat-label\">With Media:</span>\r\n              <span className=\"ig-stat-value\">{composerRows.filter(row => row.mediaFile || row.mediaPreview).length}</span>\r\n            </div>\r\n              </div>\r\n          {isScheduling && (\r\n            <div className=\"ig-schedule-progress\">\r\n              <div className=\"ig-progress-bar\">\r\n                <div \r\n                  className=\"ig-progress-fill\" \r\n                  style={{ width: `${scheduleProgress}%` }}\r\n                />\r\n              </div>\r\n              <span className=\"ig-progress-text\">Scheduling Instagram posts... {Math.round(scheduleProgress)}%</span>\r\n            </div>\r\n          )}\r\n          <div className=\"ig-confirmation-actions\">\r\n            <button\r\n              onClick={handleScheduleAll}\r\n              disabled={isScheduling || composerRows.filter(row => row.status === 'ready').length === 0}\r\n              className=\"ig-btn ig-btn-primary ig-btn-large\"\r\n            >\r\n              {isScheduling ? (\r\n                <>\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                    <path d=\"M21 12a9 9 0 11-6.219-8.56\"/>\r\n                  </svg>\r\n                  Scheduling...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n                    <polyline points=\"12,6 12,12 16,14\"/>\r\n                  </svg>\r\n                  Schedule Ready Posts ({composerRows.filter(row => row.status === 'ready').length})\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Expanded Caption Modal */}\r\n      {expandedCaption && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>Edit Caption</h3>\r\n              <button\r\n                onClick={() => setExpandedCaption(null)}\r\n                className=\"modal-close\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"caption-info\">\r\n                <p><strong>Scheduled:</strong> {expandedCaption.scheduledDate} at {expandedCaption.scheduledTime}</p>\r\n              </div>\r\n              <textarea\r\n                value={expandedCaption.caption}\r\n                onChange={(e) => setExpandedCaption(prev => ({ ...prev, caption: e.target.value }))}\r\n                className=\"expanded-caption-textarea\"\r\n                rows=\"10\"\r\n                placeholder=\"Enter your caption...\"\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                onClick={() => setExpandedCaption(null)}\r\n                className=\"ig-btn ig-btn-secondary\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={() => handleSaveExpandedCaption(expandedCaption.id, expandedCaption.caption)}\r\n                className=\"ig-btn ig-btn-primary\"\r\n              >\r\n                Save Changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Media Preview Modal */}\r\n      {mediaPreviewModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content media-preview-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>Media Preview</h3>\r\n              <button\r\n                onClick={() => setMediaPreviewModal(null)}\r\n                className=\"modal-close\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {mediaPreviewModal.mediaFile?.type?.startsWith('image/') || (!mediaPreviewModal.mediaFile && mediaPreviewModal.mediaPreview) ? (\r\n                <img\r\n                  src={mediaPreviewModal.mediaPreview}\r\n                  alt=\"Media preview\"\r\n                  className=\"modal-media\"\r\n                />\r\n              ) : (\r\n                <video\r\n                  src={mediaPreviewModal.mediaPreview}\r\n                  controls\r\n                  className=\"modal-media\"\r\n                />\r\n              )}\r\n              {mediaPreviewModal.caption && (\r\n                <div className=\"modal-caption\">\r\n                  <h4>Caption:</h4>\r\n                  <p>{mediaPreviewModal.caption}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                onClick={() => setMediaPreviewModal(null)}\r\n                className=\"ig-btn ig-btn-primary\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IgBulkComposer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}