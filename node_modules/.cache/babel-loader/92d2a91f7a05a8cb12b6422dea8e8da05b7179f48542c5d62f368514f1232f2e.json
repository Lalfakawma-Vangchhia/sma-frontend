{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THORSIGNIA\\\\Projects\\\\automation-dash\\\\frontend\\\\src\\\\components\\\\LinkedInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport apiClient from '../services/apiClient';\nimport './LinkedInPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LinkedInPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated,\n    logout\n  } = useAuth();\n\n  // State management\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [linkedInConnected, setLinkedInConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Ready to connect LinkedIn');\n  const [linkedInAccounts, setLinkedInAccounts] = useState([]);\n  const [linkedInConfig, setLinkedInConfig] = useState(null);\n\n  // LinkedIn configuration - will be fetched from backend\n  const LINKEDIN_REDIRECT_URI = process.env.REACT_APP_LINKEDIN_REDIRECT_URI || 'http://localhost:3000/linkedin';\n\n  // Check authentication on component mount\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    checkLinkedInStatus();\n    handleOAuthCallback();\n    fetchLinkedInConfig();\n  }, [isAuthenticated, navigate]);\n\n  // Fetch LinkedIn configuration from backend\n  const fetchLinkedInConfig = async () => {\n    try {\n      const response = await apiClient.getLinkedInConfig();\n      setLinkedInConfig(response);\n    } catch (error) {\n      console.error('Error fetching LinkedIn config:', error);\n      setMessage('Failed to load LinkedIn configuration');\n    }\n  };\n\n  // Handle OAuth callback from LinkedIn\n  const handleOAuthCallback = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n    const error = urlParams.get('error');\n    if (error) {\n      setMessage(`LinkedIn authorization failed: ${error}`);\n      return;\n    }\n    if (code && state) {\n      const storedState = localStorage.getItem('linkedin_oauth_state');\n      if (state === storedState) {\n        setLoading(true);\n        setMessage('Processing LinkedIn authorization...');\n\n        // Exchange code for access token via backend\n        exchangeCodeForToken(code);\n\n        // Clean up URL\n        window.history.replaceState({}, document.title, window.location.pathname);\n        localStorage.removeItem('linkedin_oauth_state');\n      } else {\n        setMessage('LinkedIn authorization state mismatch');\n      }\n    }\n  };\n\n  // Exchange authorization code for access token\n  const exchangeCodeForToken = async code => {\n    try {\n      const response = await apiClient.exchangeLinkedInCode(code);\n      if (response.success) {\n        setLinkedInConnected(true);\n        setLinkedInAccounts([{\n          id: response.profile.id,\n          name: `${response.profile.firstName} ${response.profile.lastName}`,\n          profilePicture: response.profile.profilePicture\n        }]);\n        setConnectionStatus('LinkedIn account connected successfully!');\n        setMessage('LinkedIn account connected successfully!');\n      }\n    } catch (error) {\n      console.error('Error exchanging code for token:', error);\n      setMessage(`Failed to connect LinkedIn: ${error.message}`);\n      setConnectionStatus('Connection failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check LinkedIn connection status\n  const checkLinkedInStatus = async () => {\n    try {\n      const response = await apiClient.getLinkedInStatus();\n      if (response.connected) {\n        setLinkedInConnected(true);\n        setLinkedInAccounts(response.accounts || []);\n        setConnectionStatus('LinkedIn account already connected');\n      }\n    } catch (error) {\n      console.log('LinkedIn not connected yet:', error.message);\n    }\n  };\n\n  // Handle LinkedIn login\n  const handleLinkedInLogin = () => {\n    if (!linkedInConfig || !linkedInConfig.client_id) {\n      setMessage('LinkedIn Client ID not configured');\n      return;\n    }\n    setLoading(true);\n    setMessage('Redirecting to LinkedIn...');\n    try {\n      // Use direct OAuth 2.0 flow instead of SDK\n      const state = Math.random().toString(36).substring(7);\n      const scope = 'r_liteprofile r_emailaddress w_member_social';\n      const authUrl = `https://www.linkedin.com/oauth/v2/authorization?` + `response_type=code&` + `client_id=${linkedInConfig.client_id}&` + `redirect_uri=${encodeURIComponent(LINKEDIN_REDIRECT_URI)}&` + `state=${state}&` + `scope=${encodeURIComponent(scope)}`;\n\n      // Store state for verification\n      localStorage.setItem('linkedin_oauth_state', state);\n\n      // Redirect to LinkedIn\n      window.location.href = authUrl;\n    } catch (error) {\n      console.error('Error in LinkedIn login:', error);\n      setMessage('LinkedIn login error occurred');\n      setLoading(false);\n    }\n  };\n\n  // Connect LinkedIn account to backend\n  const handleConnectLinkedIn = async () => {\n    try {\n      setConnectionStatus('Connecting to backend...');\n      const response = await apiClient.connectLinkedIn({\n        access_token: null,\n        // No access token in this simplified flow\n        user_id: null,\n        // No user_id in this simplified flow\n        profile: null // No profile in this simplified flow\n      });\n      if (response.success) {\n        setLinkedInConnected(true);\n        setLinkedInAccounts([{\n          id: null,\n          // No user_id in this simplified flow\n          name: null,\n          // No profile name in this simplified flow\n          profilePicture: null // No profile picture in this simplified flow\n        }]);\n        setConnectionStatus('LinkedIn account connected successfully!');\n        setMessage('LinkedIn account connected successfully!');\n      }\n    } catch (error) {\n      console.error('Backend connection error:', error);\n      setMessage(`Failed to connect LinkedIn account: ${error.message}`);\n      setConnectionStatus('Connection failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Disconnect LinkedIn account\n  const disconnectLinkedIn = async () => {\n    try {\n      setLoading(true);\n      await apiClient.disconnectLinkedIn();\n      setLinkedInConnected(false);\n      setLinkedInAccounts([]);\n      setConnectionStatus('LinkedIn account disconnected');\n      setMessage('LinkedIn account disconnected successfully!');\n\n      // Logout from LinkedIn SDK\n      // No SDK logout in this simplified flow\n    } catch (error) {\n      console.error('Error disconnecting LinkedIn:', error);\n      setMessage(`Failed to disconnect LinkedIn: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get status card class based on connection status\n  const getStatusCardClass = () => {\n    if (connectionStatus.includes('Failed') || connectionStatus.includes('error') || connectionStatus.includes('Error')) {\n      return 'status-card error';\n    } else if (connectionStatus.includes('successful') || connectionStatus.includes('Connected') || connectionStatus.includes('completed')) {\n      return 'status-card success';\n    } else {\n      return 'status-card info';\n    }\n  };\n\n  // Show login form if not authenticated with our system\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-required\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Please login to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You need to be logged in to use LinkedIn automation features.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"btn primary\",\n          children: \"Go to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linkedin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"platform-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"platform-icon linkedin\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"48\",\n              height: \"48\",\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"platform-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"LinkedIn Integration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Connect your LinkedIn account to automate posts and engagement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: getStatusCardClass(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-icon\",\n              children: linkedInConnected ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: linkedInConnected ? 'LinkedIn Connected' : 'LinkedIn Not Connected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: connectionStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), !linkedInConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLinkedInLogin,\n            disabled: loading || !linkedInConfig,\n            className: \"btn primary linkedin-btn\",\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), \"Connecting...\"]\n            }, void 0, true) : !linkedInConfig ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), \"Loading...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), \"Connect LinkedIn\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connected-accounts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Connected Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), linkedInAccounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account-info\",\n              children: [account.profilePicture && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: account.profilePicture,\n                alt: account.name,\n                className: \"profile-picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: account.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"LinkedIn Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnectLinkedIn,\n              disabled: loading,\n              className: \"btn secondary disconnect-btn\",\n              children: loading ? 'Disconnecting...' : 'Disconnect'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, account.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.includes('Error') || message.includes('Failed') ? 'error' : 'success'}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"features-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"LinkedIn Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Auto-Posting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Schedule and automate LinkedIn posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Comment Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Automatically respond to comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Analytics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Track post performance and engagement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(LinkedInPage, \"NDlEdYM9MM52toLiaumWgDg1dB4=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LinkedInPage;\nexport default LinkedInPage;\nvar _c;\n$RefreshReg$(_c, \"LinkedInPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useAuth","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkedInPage","_s","navigate","isAuthenticated","logout","loading","setLoading","message","setMessage","linkedInConnected","setLinkedInConnected","connectionStatus","setConnectionStatus","linkedInAccounts","setLinkedInAccounts","linkedInConfig","setLinkedInConfig","LINKEDIN_REDIRECT_URI","process","env","REACT_APP_LINKEDIN_REDIRECT_URI","checkLinkedInStatus","handleOAuthCallback","fetchLinkedInConfig","response","getLinkedInConfig","error","console","urlParams","URLSearchParams","window","location","search","code","get","state","storedState","localStorage","getItem","exchangeCodeForToken","history","replaceState","document","title","pathname","removeItem","exchangeLinkedInCode","success","id","profile","name","firstName","lastName","profilePicture","getLinkedInStatus","connected","accounts","log","handleLinkedInLogin","client_id","Math","random","toString","substring","scope","authUrl","encodeURIComponent","setItem","href","handleConnectLinkedIn","connectLinkedIn","access_token","user_id","disconnectLinkedIn","getStatusCardClass","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","height","viewBox","fill","d","disabled","map","account","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/THORSIGNIA/Projects/automation-dash/frontend/src/components/LinkedInPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport apiClient from '../services/apiClient';\r\nimport './LinkedInPage.css';\r\n\r\nconst LinkedInPage = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, logout } = useAuth();\r\n  \r\n  // State management\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [linkedInConnected, setLinkedInConnected] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('Ready to connect LinkedIn');\r\n  const [linkedInAccounts, setLinkedInAccounts] = useState([]);\r\n  const [linkedInConfig, setLinkedInConfig] = useState(null);\r\n\r\n  // LinkedIn configuration - will be fetched from backend\r\n  const LINKEDIN_REDIRECT_URI = process.env.REACT_APP_LINKEDIN_REDIRECT_URI || 'http://localhost:3000/linkedin';\r\n\r\n  // Check authentication on component mount\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    checkLinkedInStatus();\r\n    handleOAuthCallback();\r\n    fetchLinkedInConfig();\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  // Fetch LinkedIn configuration from backend\r\n  const fetchLinkedInConfig = async () => {\r\n    try {\r\n      const response = await apiClient.getLinkedInConfig();\r\n      setLinkedInConfig(response);\r\n    } catch (error) {\r\n      console.error('Error fetching LinkedIn config:', error);\r\n      setMessage('Failed to load LinkedIn configuration');\r\n    }\r\n  };\r\n\r\n  // Handle OAuth callback from LinkedIn\r\n  const handleOAuthCallback = () => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const code = urlParams.get('code');\r\n    const state = urlParams.get('state');\r\n    const error = urlParams.get('error');\r\n    \r\n    if (error) {\r\n      setMessage(`LinkedIn authorization failed: ${error}`);\r\n      return;\r\n    }\r\n    \r\n    if (code && state) {\r\n      const storedState = localStorage.getItem('linkedin_oauth_state');\r\n      if (state === storedState) {\r\n        setLoading(true);\r\n        setMessage('Processing LinkedIn authorization...');\r\n        \r\n        // Exchange code for access token via backend\r\n        exchangeCodeForToken(code);\r\n        \r\n        // Clean up URL\r\n        window.history.replaceState({}, document.title, window.location.pathname);\r\n        localStorage.removeItem('linkedin_oauth_state');\r\n      } else {\r\n        setMessage('LinkedIn authorization state mismatch');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Exchange authorization code for access token\r\n  const exchangeCodeForToken = async (code) => {\r\n    try {\r\n      const response = await apiClient.exchangeLinkedInCode(code);\r\n      if (response.success) {\r\n        setLinkedInConnected(true);\r\n        setLinkedInAccounts([{\r\n          id: response.profile.id,\r\n          name: `${response.profile.firstName} ${response.profile.lastName}`,\r\n          profilePicture: response.profile.profilePicture\r\n        }]);\r\n        setConnectionStatus('LinkedIn account connected successfully!');\r\n        setMessage('LinkedIn account connected successfully!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error exchanging code for token:', error);\r\n      setMessage(`Failed to connect LinkedIn: ${error.message}`);\r\n      setConnectionStatus('Connection failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check LinkedIn connection status\r\n  const checkLinkedInStatus = async () => {\r\n    try {\r\n      const response = await apiClient.getLinkedInStatus();\r\n      if (response.connected) {\r\n        setLinkedInConnected(true);\r\n        setLinkedInAccounts(response.accounts || []);\r\n        setConnectionStatus('LinkedIn account already connected');\r\n      }\r\n    } catch (error) {\r\n      console.log('LinkedIn not connected yet:', error.message);\r\n    }\r\n  };\r\n\r\n  // Handle LinkedIn login\r\n  const handleLinkedInLogin = () => {\r\n    if (!linkedInConfig || !linkedInConfig.client_id) {\r\n      setMessage('LinkedIn Client ID not configured');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('Redirecting to LinkedIn...');\r\n    \r\n    try {\r\n      // Use direct OAuth 2.0 flow instead of SDK\r\n      const state = Math.random().toString(36).substring(7);\r\n      const scope = 'r_liteprofile r_emailaddress w_member_social';\r\n      \r\n      const authUrl = `https://www.linkedin.com/oauth/v2/authorization?` +\r\n        `response_type=code&` +\r\n        `client_id=${linkedInConfig.client_id}&` +\r\n        `redirect_uri=${encodeURIComponent(LINKEDIN_REDIRECT_URI)}&` +\r\n        `state=${state}&` +\r\n        `scope=${encodeURIComponent(scope)}`;\r\n      \r\n      // Store state for verification\r\n      localStorage.setItem('linkedin_oauth_state', state);\r\n      \r\n      // Redirect to LinkedIn\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error in LinkedIn login:', error);\r\n      setMessage('LinkedIn login error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Connect LinkedIn account to backend\r\n  const handleConnectLinkedIn = async () => {\r\n    try {\r\n      setConnectionStatus('Connecting to backend...');\r\n      \r\n      const response = await apiClient.connectLinkedIn({\r\n        access_token: null, // No access token in this simplified flow\r\n        user_id: null, // No user_id in this simplified flow\r\n        profile: null // No profile in this simplified flow\r\n      });\r\n\r\n      if (response.success) {\r\n        setLinkedInConnected(true);\r\n        setLinkedInAccounts([{\r\n          id: null, // No user_id in this simplified flow\r\n          name: null, // No profile name in this simplified flow\r\n          profilePicture: null // No profile picture in this simplified flow\r\n        }]);\r\n        setConnectionStatus('LinkedIn account connected successfully!');\r\n        setMessage('LinkedIn account connected successfully!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Backend connection error:', error);\r\n      setMessage(`Failed to connect LinkedIn account: ${error.message}`);\r\n      setConnectionStatus('Connection failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Disconnect LinkedIn account\r\n  const disconnectLinkedIn = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await apiClient.disconnectLinkedIn();\r\n      setLinkedInConnected(false);\r\n      setLinkedInAccounts([]);\r\n      setConnectionStatus('LinkedIn account disconnected');\r\n      setMessage('LinkedIn account disconnected successfully!');\r\n      \r\n      // Logout from LinkedIn SDK\r\n      // No SDK logout in this simplified flow\r\n    } catch (error) {\r\n      console.error('Error disconnecting LinkedIn:', error);\r\n      setMessage(`Failed to disconnect LinkedIn: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Get status card class based on connection status\r\n  const getStatusCardClass = () => {\r\n    if (connectionStatus.includes('Failed') || connectionStatus.includes('error') || connectionStatus.includes('Error')) {\r\n      return 'status-card error';\r\n    } else if (connectionStatus.includes('successful') || connectionStatus.includes('Connected') || connectionStatus.includes('completed')) {\r\n      return 'status-card success';\r\n    } else {\r\n      return 'status-card info';\r\n    }\r\n  };\r\n\r\n  // Show login form if not authenticated with our system\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"page-container\">\r\n        <div className=\"auth-required\">\r\n          <h1>Please login to continue</h1>\r\n          <p>You need to be logged in to use LinkedIn automation features.</p>\r\n          <button onClick={() => navigate('/')} className=\"btn primary\">\r\n            Go to Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"linkedin-page\">\r\n      <div className=\"page-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"platform-info\">\r\n            <div className=\"platform-icon linkedin\">\r\n              <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\r\n              </svg>\r\n            </div>\r\n            <div className=\"platform-details\">\r\n              <h1>LinkedIn Integration</h1>\r\n              <p>Connect your LinkedIn account to automate posts and engagement</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"page-content\">\r\n        <div className=\"connection-section\">\r\n          <div className={getStatusCardClass()}>\r\n            <div className=\"status-content\">\r\n              <div className=\"status-icon\">\r\n                {linkedInConnected ? (\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\r\n                  </svg>\r\n                ) : (\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className=\"status-text\">\r\n                <h3>{linkedInConnected ? 'LinkedIn Connected' : 'LinkedIn Not Connected'}</h3>\r\n                <p>{connectionStatus}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {!linkedInConnected ? (\r\n            <div className=\"connection-actions\">\r\n              <button\r\n                onClick={handleLinkedInLogin}\r\n                disabled={loading || !linkedInConfig}\r\n                className=\"btn primary linkedin-btn\"\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"spinner\"></div>\r\n                    Connecting...\r\n                  </>\r\n                ) : !linkedInConfig ? (\r\n                  <>\r\n                    <div className=\"spinner\"></div>\r\n                    Loading...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                      <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\r\n                    </svg>\r\n                    Connect LinkedIn\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"connected-accounts\">\r\n              <h3>Connected Accounts</h3>\r\n              {linkedInAccounts.map((account) => (\r\n                <div key={account.id} className=\"account-card\">\r\n                  <div className=\"account-info\">\r\n                    {account.profilePicture && (\r\n                      <img \r\n                        src={account.profilePicture} \r\n                        alt={account.name}\r\n                        className=\"profile-picture\"\r\n                      />\r\n                    )}\r\n                    <div className=\"account-details\">\r\n                      <h4>{account.name}</h4>\r\n                      <p>LinkedIn Profile</p>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={disconnectLinkedIn}\r\n                    disabled={loading}\r\n                    className=\"btn secondary disconnect-btn\"\r\n                  >\r\n                    {loading ? 'Disconnecting...' : 'Disconnect'}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className={`message ${message.includes('Error') || message.includes('Failed') ? 'error' : 'success'}`}>\r\n              {message}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"features-section\">\r\n          <h3>LinkedIn Features</h3>\r\n          <div className=\"features-grid\">\r\n            <div className=\"feature-card\">\r\n              <div className=\"feature-icon\">\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\r\n                </svg>\r\n              </div>\r\n              <h4>Auto-Posting</h4>\r\n              <p>Schedule and automate LinkedIn posts</p>\r\n            </div>\r\n            <div className=\"feature-card\">\r\n              <div className=\"feature-icon\">\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\r\n                </svg>\r\n              </div>\r\n              <h4>Comment Management</h4>\r\n              <p>Automatically respond to comments</p>\r\n            </div>\r\n            <div className=\"feature-card\">\r\n              <div className=\"feature-icon\">\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n                </svg>\r\n              </div>\r\n              <h4>Analytics</h4>\r\n              <p>Track post performance and engagement</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkedInPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,eAAe;IAAEC;EAAO,CAAC,GAAGV,OAAO,CAAC,CAAC;;EAE7C;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,2BAA2B,CAAC;EACrF,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAM2B,qBAAqB,GAAGC,OAAO,CAACC,GAAG,CAACC,+BAA+B,IAAI,gCAAgC;;EAE7G;EACA7B,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,eAAe,EAAE;MACpBD,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEAmB,mBAAmB,CAAC,CAAC;IACrBC,mBAAmB,CAAC,CAAC;IACrBC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACpB,eAAe,EAAED,QAAQ,CAAC,CAAC;;EAE/B;EACA,MAAMqB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7B,SAAS,CAAC8B,iBAAiB,CAAC,CAAC;MACpDT,iBAAiB,CAACQ,QAAQ,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDlB,UAAU,CAAC,uCAAuC,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMM,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,IAAI,GAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;IAClC,MAAMC,KAAK,GAAGP,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IACpC,MAAMR,KAAK,GAAGE,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IAEpC,IAAIR,KAAK,EAAE;MACTlB,UAAU,CAAC,kCAAkCkB,KAAK,EAAE,CAAC;MACrD;IACF;IAEA,IAAIO,IAAI,IAAIE,KAAK,EAAE;MACjB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;MAChE,IAAIH,KAAK,KAAKC,WAAW,EAAE;QACzB9B,UAAU,CAAC,IAAI,CAAC;QAChBE,UAAU,CAAC,sCAAsC,CAAC;;QAElD;QACA+B,oBAAoB,CAACN,IAAI,CAAC;;QAE1B;QACAH,MAAM,CAACU,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEb,MAAM,CAACC,QAAQ,CAACa,QAAQ,CAAC;QACzEP,YAAY,CAACQ,UAAU,CAAC,sBAAsB,CAAC;MACjD,CAAC,MAAM;QACLrC,UAAU,CAAC,uCAAuC,CAAC;MACrD;IACF;EACF,CAAC;;EAED;EACA,MAAM+B,oBAAoB,GAAG,MAAON,IAAI,IAAK;IAC3C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAM7B,SAAS,CAACmD,oBAAoB,CAACb,IAAI,CAAC;MAC3D,IAAIT,QAAQ,CAACuB,OAAO,EAAE;QACpBrC,oBAAoB,CAAC,IAAI,CAAC;QAC1BI,mBAAmB,CAAC,CAAC;UACnBkC,EAAE,EAAExB,QAAQ,CAACyB,OAAO,CAACD,EAAE;UACvBE,IAAI,EAAE,GAAG1B,QAAQ,CAACyB,OAAO,CAACE,SAAS,IAAI3B,QAAQ,CAACyB,OAAO,CAACG,QAAQ,EAAE;UAClEC,cAAc,EAAE7B,QAAQ,CAACyB,OAAO,CAACI;QACnC,CAAC,CAAC,CAAC;QACHzC,mBAAmB,CAAC,0CAA0C,CAAC;QAC/DJ,UAAU,CAAC,0CAA0C,CAAC;MACxD;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDlB,UAAU,CAAC,+BAA+BkB,KAAK,CAACnB,OAAO,EAAE,CAAC;MAC1DK,mBAAmB,CAAC,mBAAmB,CAAC;IAC1C,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAM7B,SAAS,CAAC2D,iBAAiB,CAAC,CAAC;MACpD,IAAI9B,QAAQ,CAAC+B,SAAS,EAAE;QACtB7C,oBAAoB,CAAC,IAAI,CAAC;QAC1BI,mBAAmB,CAACU,QAAQ,CAACgC,QAAQ,IAAI,EAAE,CAAC;QAC5C5C,mBAAmB,CAAC,oCAAoC,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAAC8B,GAAG,CAAC,6BAA6B,EAAE/B,KAAK,CAACnB,OAAO,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,MAAMmD,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAAC3C,cAAc,IAAI,CAACA,cAAc,CAAC4C,SAAS,EAAE;MAChDnD,UAAU,CAAC,mCAAmC,CAAC;MAC/C;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,4BAA4B,CAAC;IAExC,IAAI;MACF;MACA,MAAM2B,KAAK,GAAGyB,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;MACrD,MAAMC,KAAK,GAAG,8CAA8C;MAE5D,MAAMC,OAAO,GAAG,kDAAkD,GAChE,qBAAqB,GACrB,aAAalD,cAAc,CAAC4C,SAAS,GAAG,GACxC,gBAAgBO,kBAAkB,CAACjD,qBAAqB,CAAC,GAAG,GAC5D,SAASkB,KAAK,GAAG,GACjB,SAAS+B,kBAAkB,CAACF,KAAK,CAAC,EAAE;;MAEtC;MACA3B,YAAY,CAAC8B,OAAO,CAAC,sBAAsB,EAAEhC,KAAK,CAAC;;MAEnD;MACAL,MAAM,CAACC,QAAQ,CAACqC,IAAI,GAAGH,OAAO;IAChC,CAAC,CAAC,OAAOvC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDlB,UAAU,CAAC,+BAA+B,CAAC;MAC3CF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM+D,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACFzD,mBAAmB,CAAC,0BAA0B,CAAC;MAE/C,MAAMY,QAAQ,GAAG,MAAM7B,SAAS,CAAC2E,eAAe,CAAC;QAC/CC,YAAY,EAAE,IAAI;QAAE;QACpBC,OAAO,EAAE,IAAI;QAAE;QACfvB,OAAO,EAAE,IAAI,CAAC;MAChB,CAAC,CAAC;MAEF,IAAIzB,QAAQ,CAACuB,OAAO,EAAE;QACpBrC,oBAAoB,CAAC,IAAI,CAAC;QAC1BI,mBAAmB,CAAC,CAAC;UACnBkC,EAAE,EAAE,IAAI;UAAE;UACVE,IAAI,EAAE,IAAI;UAAE;UACZG,cAAc,EAAE,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACHzC,mBAAmB,CAAC,0CAA0C,CAAC;QAC/DJ,UAAU,CAAC,0CAA0C,CAAC;MACxD;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDlB,UAAU,CAAC,uCAAuCkB,KAAK,CAACnB,OAAO,EAAE,CAAC;MAClEK,mBAAmB,CAAC,mBAAmB,CAAC;IAC1C,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMmE,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACFnE,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMX,SAAS,CAAC8E,kBAAkB,CAAC,CAAC;MACpC/D,oBAAoB,CAAC,KAAK,CAAC;MAC3BI,mBAAmB,CAAC,EAAE,CAAC;MACvBF,mBAAmB,CAAC,+BAA+B,CAAC;MACpDJ,UAAU,CAAC,6CAA6C,CAAC;;MAEzD;MACA;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDlB,UAAU,CAAC,kCAAkCkB,KAAK,CAACnB,OAAO,EAAE,CAAC;IAC/D,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMoE,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI/D,gBAAgB,CAACgE,QAAQ,CAAC,QAAQ,CAAC,IAAIhE,gBAAgB,CAACgE,QAAQ,CAAC,OAAO,CAAC,IAAIhE,gBAAgB,CAACgE,QAAQ,CAAC,OAAO,CAAC,EAAE;MACnH,OAAO,mBAAmB;IAC5B,CAAC,MAAM,IAAIhE,gBAAgB,CAACgE,QAAQ,CAAC,YAAY,CAAC,IAAIhE,gBAAgB,CAACgE,QAAQ,CAAC,WAAW,CAAC,IAAIhE,gBAAgB,CAACgE,QAAQ,CAAC,WAAW,CAAC,EAAE;MACtI,OAAO,qBAAqB;IAC9B,CAAC,MAAM;MACL,OAAO,kBAAkB;IAC3B;EACF,CAAC;;EAED;EACA,IAAI,CAACxE,eAAe,EAAE;IACpB,oBACEN,OAAA;MAAK+E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BhF,OAAA;QAAK+E,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhF,OAAA;UAAAgF,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCpF,OAAA;UAAAgF,QAAA,EAAG;QAA6D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpEpF,OAAA;UAAQqF,OAAO,EAAEA,CAAA,KAAMhF,QAAQ,CAAC,GAAG,CAAE;UAAC0E,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAE9D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEpF,OAAA;IAAK+E,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhF,OAAA;MAAK+E,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BhF,OAAA;QAAK+E,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BhF,OAAA;UAAK+E,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BhF,OAAA;YAAK+E,SAAS,EAAC,wBAAwB;YAAAC,QAAA,eACrChF,OAAA;cAAKsF,KAAK,EAAC,IAAI;cAACC,MAAM,EAAC,IAAI;cAACC,OAAO,EAAC,WAAW;cAACC,IAAI,EAAC,cAAc;cAAAT,QAAA,eACjEhF,OAAA;gBAAM0F,CAAC,EAAC;cAAof;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3f;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNpF,OAAA;YAAK+E,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BhF,OAAA;cAAAgF,QAAA,EAAI;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BpF,OAAA;cAAAgF,QAAA,EAAG;YAA8D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENpF,OAAA;MAAK+E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhF,OAAA;QAAK+E,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjChF,OAAA;UAAK+E,SAAS,EAAEF,kBAAkB,CAAC,CAAE;UAAAG,QAAA,eACnChF,OAAA;YAAK+E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BhF,OAAA;cAAK+E,SAAS,EAAC,aAAa;cAAAC,QAAA,EACzBpE,iBAAiB,gBAChBZ,OAAA;gBAAKsF,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAAT,QAAA,eACjEhF,OAAA;kBAAM0F,CAAC,EAAC;gBAAmD;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,gBAENpF,OAAA;gBAAKsF,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAAT,QAAA,eACjEhF,OAAA;kBAAM0F,CAAC,EAAC;gBAAuH;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9H;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNpF,OAAA;cAAK+E,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BhF,OAAA;gBAAAgF,QAAA,EAAKpE,iBAAiB,GAAG,oBAAoB,GAAG;cAAwB;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9EpF,OAAA;gBAAAgF,QAAA,EAAIlE;cAAgB;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEL,CAACxE,iBAAiB,gBACjBZ,OAAA;UAAK+E,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjChF,OAAA;YACEqF,OAAO,EAAExB,mBAAoB;YAC7B8B,QAAQ,EAAEnF,OAAO,IAAI,CAACU,cAAe;YACrC6D,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAEnCxE,OAAO,gBACNR,OAAA,CAAAE,SAAA;cAAA8E,QAAA,gBACEhF,OAAA;gBAAK+E,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,iBAEjC;YAAA,eAAE,CAAC,GACD,CAAClE,cAAc,gBACjBlB,OAAA,CAAAE,SAAA;cAAA8E,QAAA,gBACEhF,OAAA;gBAAK+E,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,cAEjC;YAAA,eAAE,CAAC,gBAEHpF,OAAA,CAAAE,SAAA;cAAA8E,QAAA,gBACEhF,OAAA;gBAAKsF,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAAT,QAAA,eACjEhF,OAAA;kBAAM0F,CAAC,EAAC;gBAAof;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3f,CAAC,oBAER;YAAA,eAAE;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAENpF,OAAA;UAAK+E,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjChF,OAAA;YAAAgF,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC1BpE,gBAAgB,CAAC4E,GAAG,CAAEC,OAAO,iBAC5B7F,OAAA;YAAsB+E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC5ChF,OAAA;cAAK+E,SAAS,EAAC,cAAc;cAAAC,QAAA,GAC1Ba,OAAO,CAACrC,cAAc,iBACrBxD,OAAA;gBACE8F,GAAG,EAAED,OAAO,CAACrC,cAAe;gBAC5BuC,GAAG,EAAEF,OAAO,CAACxC,IAAK;gBAClB0B,SAAS,EAAC;cAAiB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CACF,eACDpF,OAAA;gBAAK+E,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9BhF,OAAA;kBAAAgF,QAAA,EAAKa,OAAO,CAACxC;gBAAI;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvBpF,OAAA;kBAAAgF,QAAA,EAAG;gBAAgB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNpF,OAAA;cACEqF,OAAO,EAAET,kBAAmB;cAC5Be,QAAQ,EAAEnF,OAAQ;cAClBuE,SAAS,EAAC,8BAA8B;cAAAC,QAAA,EAEvCxE,OAAO,GAAG,kBAAkB,GAAG;YAAY;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC;UAAA,GApBDS,OAAO,CAAC1C,EAAE;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBf,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EAEA1E,OAAO,iBACNV,OAAA;UAAK+E,SAAS,EAAE,WAAWrE,OAAO,CAACoE,QAAQ,CAAC,OAAO,CAAC,IAAIpE,OAAO,CAACoE,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,SAAS,EAAG;UAAAE,QAAA,EACxGtE;QAAO;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENpF,OAAA;QAAK+E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BhF,OAAA;UAAAgF,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BpF,OAAA;UAAK+E,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BhF,OAAA;YAAK+E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhF,OAAA;cAAK+E,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BhF,OAAA;gBAAKsF,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAAT,QAAA,eACjEhF,OAAA;kBAAM0F,CAAC,EAAC;gBAAqC;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNpF,OAAA;cAAAgF,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBpF,OAAA;cAAAgF,QAAA,EAAG;YAAoC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACNpF,OAAA;YAAK+E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhF,OAAA;cAAK+E,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BhF,OAAA;gBAAKsF,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAAT,QAAA,eACjEhF,OAAA;kBAAM0F,CAAC,EAAC;gBAAwH;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/H;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNpF,OAAA;cAAAgF,QAAA,EAAI;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3BpF,OAAA;cAAAgF,QAAA,EAAG;YAAiC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACNpF,OAAA;YAAK+E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhF,OAAA;cAAK+E,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BhF,OAAA;gBAAKsF,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAAT,QAAA,eACjEhF,OAAA;kBAAM0F,CAAC,EAAC;gBAAuH;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9H;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNpF,OAAA;cAAAgF,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBpF,OAAA;cAAAgF,QAAA,EAAG;YAAqC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChF,EAAA,CAlWID,YAAY;EAAA,QACCP,WAAW,EACQC,OAAO;AAAA;AAAAmG,EAAA,GAFvC7F,YAAY;AAoWlB,eAAeA,YAAY;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}