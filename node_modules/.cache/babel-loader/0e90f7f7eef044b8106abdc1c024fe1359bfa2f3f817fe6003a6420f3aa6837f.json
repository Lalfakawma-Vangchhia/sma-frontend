{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THORSIGNIA\\\\Projects\\\\automation-dash\\\\frontend\\\\src\\\\components\\\\FacebookPage.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-undef */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport apiClient from '../services/apiClient';\nimport { fileToBase64, loadFacebookSDK } from './FacebookUtils';\nimport BulkComposer from './BulkComposer';\nimport './FacebookPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FacebookPage() {\n  _s();\n  var _selectedPage$followe, _autoReplyMessageRule;\n  const navigate = useNavigate();\n  const {\n    logout\n  } = useAuth();\n\n  // Core state\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [selectedPage, setSelectedPage] = useState(null);\n  const [availablePages, setAvailablePages] = useState([]);\n  const [facebookConnected, setFacebookConnected] = useState(false);\n  const [activeTab, setActiveTab] = useState('auto');\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n  const [isCheckingStatus, setIsCheckingStatus] = useState(true);\n\n  // Form states\n  const [autoFormData, setAutoFormData] = useState({\n    prompt: '',\n    mediaType: 'none',\n    mediaFile: null,\n    generatedContent: '',\n    isGenerating: false,\n    imagePrompt: '',\n    generatedImageUrl: null,\n    generatedImageFilename: null,\n    isGeneratingImage: false\n  });\n  const [manualFormData, setManualFormData] = useState({\n    message: '',\n    mediaType: 'none',\n    mediaFile: null\n  });\n\n  // UI states\n  const [isPublishing, setIsPublishing] = useState(false);\n  const [autoPostHistory, setAutoPostHistory] = useState([]);\n  const [manualPostHistory, setManualPostHistory] = useState([]);\n  const [isLoadingPosts, setIsLoadingPosts] = useState(false);\n  const [showBulkComposer, setShowBulkComposer] = useState(false);\n  const [showAutomate, setShowAutomate] = useState(false); // <-- Add this line\n  const [autoReplyMessagesEnabled, setAutoReplyMessagesEnabled] = useState(true); // Default ON\n  const [autoReplyMessagesLoading, setAutoReplyMessagesLoading] = useState(false);\n  const [autoReplyMessagesError, setAutoReplyMessagesError] = useState(null);\n\n  // File picker modal states\n  const [showFilePicker, setShowFilePicker] = useState(false);\n  const [filePickerType, setFilePickerType] = useState(''); // 'photo' or 'video'\n  const [filePickerFormType, setFilePickerFormType] = useState(''); // 'auto' or 'manual'\n  const [isLoadingGoogleDrive, setIsLoadingGoogleDrive] = useState(false);\n  const [googleDriveAvailable, setGoogleDriveAvailable] = useState(false);\n\n  // Add this state for scheduleData\n  const [scheduleData, setScheduleData] = useState({\n    prompt: '',\n    time: '',\n    frequency: 'daily',\n    customDate: '',\n    isActive: false,\n    scheduleId: null\n  });\n\n  // Add new state for auto-reply message rule\n  const [autoReplyMessageRule, setAutoReplyMessageRule] = useState(null);\n\n  // Add missing autoReplySettings state\n  // eslint-disable-next-line no-unused-vars\n  const [autoReplySettings, setAutoReplySettings] = useState({\n    enabled: false,\n    template: 'Thank you for your comment! We appreciate your engagement. 😊',\n    ruleId: null,\n    selectedPostIds: []\n  });\n  const FACEBOOK_APP_ID = process.env.REACT_APP_FACEBOOK_APP_ID || '697225659875731';\n\n  // Mobile detection utility\n  const isMobile = () => window.innerWidth <= 768;\n  const loadAutoReplySettings = useCallback(async () => {\n    if (!selectedPage) return;\n    try {\n      console.log('🔄 Loading auto-reply settings for page:', selectedPage.id, selectedPage.name);\n\n      // Get automation rules for Facebook auto-reply\n      const rules = await apiClient.getAutomationRules('facebook', 'AUTO_REPLY');\n      console.log('📋 Found automation rules:', rules);\n\n      // Get social accounts to match with the selected page\n      const socialAccounts = await apiClient.getSocialAccounts();\n      const facebookAccounts = socialAccounts.filter(acc => acc.platform === 'facebook' && acc.is_connected);\n      console.log('👥 Facebook accounts:', facebookAccounts);\n\n      // Find the social account that matches the selected page\n      const matchingAccount = facebookAccounts.find(acc => acc.platform_user_id === selectedPage.id);\n      console.log('🎯 Matching account:', matchingAccount);\n      if (matchingAccount) {\n        // Find the auto-reply rule for this specific social account\n        const autoReplyRule = rules.find(rule => rule.social_account_id === matchingAccount.id);\n        console.log('🤖 Auto-reply rule found:', autoReplyRule);\n        if (autoReplyRule) {\n          var _autoReplyRule$action3, _autoReplyRule$action4;\n          setAutoReplySettings(prev => {\n            var _autoReplyRule$action, _autoReplyRule$action2;\n            return {\n              ...prev,\n              enabled: autoReplyRule.is_active,\n              template: ((_autoReplyRule$action = autoReplyRule.actions) === null || _autoReplyRule$action === void 0 ? void 0 : _autoReplyRule$action.response_template) || prev.template,\n              ruleId: autoReplyRule.id,\n              selectedPostIds: ((_autoReplyRule$action2 = autoReplyRule.actions) === null || _autoReplyRule$action2 === void 0 ? void 0 : _autoReplyRule$action2.selected_post_ids) || []\n            };\n          });\n          console.log('✅ Auto-reply settings loaded:', {\n            enabled: autoReplyRule.is_active,\n            template: (_autoReplyRule$action3 = autoReplyRule.actions) === null || _autoReplyRule$action3 === void 0 ? void 0 : _autoReplyRule$action3.response_template,\n            ruleId: autoReplyRule.id,\n            selectedPostIds: (_autoReplyRule$action4 = autoReplyRule.actions) === null || _autoReplyRule$action4 === void 0 ? void 0 : _autoReplyRule$action4.selected_post_ids\n          });\n        } else {\n          // Reset to default state if no rule found\n          setAutoReplySettings(prev => ({\n            ...prev,\n            enabled: false,\n            template: 'Thank you for your comment! We appreciate your engagement. 😊',\n            ruleId: null,\n            selectedPostIds: []\n          }));\n          console.log('❌ No auto-reply rule found, using defaults');\n        }\n      } else {\n        // No matching account found, reset to default\n        setAutoReplySettings(prev => ({\n          ...prev,\n          enabled: false,\n          template: 'Thank you for your comment! We appreciate your engagement. 😊',\n          ruleId: null,\n          selectedPostIds: []\n        }));\n        console.log('❌ No matching account found, using defaults');\n      }\n    } catch (error) {\n      console.error('❌ Error loading auto-reply settings:', error);\n      // Keep current state on error\n    }\n  }, [selectedPage]);\n  const checkExistingFacebookConnections = useCallback(async () => {\n    try {\n      setIsCheckingStatus(true);\n      const response = await apiClient.getFacebookStatus();\n      if (response.connected) {\n        setFacebookConnected(true);\n        let socialAccounts = [];\n        let facebookAccounts = [];\n        try {\n          socialAccounts = await apiClient.getSocialAccounts();\n          facebookAccounts = socialAccounts.filter(acc => acc.platform === 'facebook' && acc.is_connected);\n        } catch (accountsError) {\n          console.warn('Failed to fetch social accounts:', accountsError);\n        }\n        const pagesFromBackend = response.accounts.pages.map(page => {\n          const matchingAccount = facebookAccounts.find(acc => acc.platform_user_id === page.platform_id);\n          return {\n            id: page.platform_id,\n            internalId: matchingAccount === null || matchingAccount === void 0 ? void 0 : matchingAccount.id,\n            name: page.name,\n            category: page.category,\n            access_token: '',\n            profilePicture: page.profile_picture || '',\n            canPost: page.can_post,\n            canComment: page.can_comment,\n            followerCount: page.follower_count\n          };\n        });\n        setAvailablePages(pagesFromBackend);\n        if (pagesFromBackend.length === 1) {\n          setSelectedPage(pagesFromBackend[0]);\n          // Auto-reply settings will be loaded by the useEffect when selectedPage changes\n        }\n        setConnectionStatus(`Connected! ${response.pages_count} Facebook page(s) available.`);\n      } else {\n        setConnectionStatus('Ready to connect your Facebook account');\n      }\n    } catch (error) {\n      console.error('Error checking Facebook status:', error);\n      setConnectionStatus('Unable to check Facebook connection status');\n    } finally {\n      setIsCheckingStatus(false);\n    }\n  }, []);\n\n  // Check for existing Facebook connections on component mount\n  useEffect(() => {\n    checkExistingFacebookConnections();\n    checkGoogleDriveAvailability();\n\n    // Add mobile-specific event listeners\n    const handleResize = () => {\n      // Force re-render on resize for mobile responsiveness\n      setConnectionStatus(prev => prev);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [checkExistingFacebookConnections]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      setIsConnecting(false);\n      setIsPublishing(false);\n      setIsLoggingOut(false);\n      setIsCheckingStatus(false);\n    };\n  }, []);\n  const checkGoogleDriveAvailability = async () => {\n    try {\n      const {\n        authenticated\n      } = await apiClient.getGoogleDriveStatus();\n      setGoogleDriveAvailable(authenticated);\n    } catch (error) {\n      console.warn('Drive status check failed:', error.message);\n      setGoogleDriveAvailable(false);\n    }\n  };\n  const debugGoogleDrive = async () => {\n    try {\n      console.log('🔍 Testing Google Drive connectivity...');\n      const debugInfo = await apiClient.debugGoogleDrive();\n      console.log('🔍 Google Drive Debug Info:', debugInfo);\n      setConnectionStatus(`Google Drive Debug: ${debugInfo.message} - Found ${debugInfo.total_files_found} files`);\n    } catch (error) {\n      console.error('🔍 Google Drive Debug Error:', error);\n      setConnectionStatus(`Google Drive Debug Error: ${error.message}`);\n    }\n  };\n  const testGoogleDriveImages = async () => {\n    try {\n      console.log('🖼️ Testing Google Drive images/videos...');\n      const testInfo = await apiClient.testGoogleDriveImages();\n      console.log('🖼️ Google Drive Image/Video Test:', testInfo);\n      setConnectionStatus(`Image/Video Test: ${testInfo.image_count} images, ${testInfo.video_count} videos found`);\n    } catch (error) {\n      console.error('🖼️ Google Drive Image/Video Test Error:', error);\n      setConnectionStatus(`Image/Video Test Error: ${error.message}`);\n    }\n  };\n  const disconnectGoogleDrive = async () => {\n    try {\n      await apiClient.disconnectGoogleDrive();\n      setGoogleDriveAvailable(false);\n      setConnectionStatus('Google Drive disconnected successfully!');\n    } catch (error) {\n      console.error('Error disconnecting Google Drive:', error);\n      setConnectionStatus(`Failed to disconnect Google Drive: ${error.message}`);\n    }\n  };\n  const clearGoogleDriveTokens = async () => {\n    try {\n      await apiClient.clearGoogleDriveTokens();\n      setGoogleDriveAvailable(false);\n      setConnectionStatus('Google Drive tokens cleared successfully! Please reconnect.');\n    } catch (error) {\n      console.error('Error clearing Google Drive tokens:', error);\n      setConnectionStatus(`Failed to clear Google Drive tokens: ${error.message}`);\n    }\n  };\n  const openDriveAuthPopup = authUrl => {\n    return new Promise((resolve, reject) => {\n      // Mobile-friendly popup sizing\n      const isMobile = window.innerWidth <= 768;\n      const w = isMobile ? Math.min(400, window.innerWidth - 40) : 500;\n      const h = isMobile ? Math.min(600, window.innerHeight - 40) : 600;\n      const left = (window.outerWidth - w) / 2;\n      const top = (window.outerHeight - h) / 2;\n      const popup = window.open(authUrl, 'DriveAuth', `width=${w},height=${h},left=${left},top=${top},scrollbars=yes,resizable=yes`);\n      if (!popup) {\n        reject(new Error('Popup blocked'));\n        return;\n      }\n      let resolved = false;\n\n      // Listen for messages from the popup\n      const messageHandler = event => {\n        // Be more permissive with origins due to Google's OAuth flow\n        if (!event.data || resolved) return;\n        if (event.data.success) {\n          resolved = true;\n          window.removeEventListener('message', messageHandler);\n          clearInterval(timer);\n          resolve();\n        } else if (event.data.error) {\n          resolved = true;\n          window.removeEventListener('message', messageHandler);\n          clearInterval(timer);\n          reject(new Error(event.data.error));\n        }\n      };\n      window.addEventListener('message', messageHandler);\n\n      // Poll for popup closure as fallback (with Cross-Origin-Opener-Policy handling)\n      const timer = setInterval(() => {\n        try {\n          if (popup.closed) {\n            if (!resolved) {\n              resolved = true;\n              clearInterval(timer);\n              window.removeEventListener('message', messageHandler);\n              // Don't assume success immediately - let the main function handle retries\n              resolve();\n            }\n          }\n        } catch (e) {\n          // Cross-Origin-Opener-Policy may prevent accessing popup.closed\n          // In this case, assume the popup process is ongoing\n          console.warn('Cannot check popup status due to Cross-Origin-Opener-Policy:', e);\n        }\n      }, 1000); // Increased interval to 1 second\n\n      // Timeout after 60 seconds\n      setTimeout(() => {\n        if (!resolved) {\n          resolved = true;\n          clearInterval(timer);\n          window.removeEventListener('message', messageHandler);\n          try {\n            popup.close();\n          } catch (e) {\n            // Ignore errors when closing popup\n          }\n          reject(new Error('Authentication timeout. Please try again.'));\n        }\n      }, 60000);\n    });\n  };\n  const loadPostHistory = useCallback(async () => {\n    if (!selectedPage) return;\n    try {\n      setIsLoadingPosts(true);\n      // Pass selectedPage.internalId to filter by page/account\n      const response = await apiClient.getSocialPosts('facebook', 50, selectedPage.internalId);\n      // Sort posts by created_at or next_execution descending (newest first)\n      const posts = response.slice(0, 50).sort((a, b) => new Date(b.created_at || b.next_execution) - new Date(a.created_at || a.next_execution));\n      const topPosts = posts.slice(0, 10);\n      setAutoPostHistory(topPosts.filter((_, index) => index % 2 === 0));\n      setManualPostHistory(topPosts.filter((_, index) => index % 2 === 1));\n      // Note: schedulePostHistory is now managed by loadScheduledPosts()\n    } catch (error) {\n      console.error('Error loading post history:', error);\n    } finally {\n      setIsLoadingPosts(false);\n    }\n  }, [selectedPage]);\n\n  // Load posts when page is selected or tab changes\n  useEffect(() => {\n    if (selectedPage && facebookConnected) {\n      loadPostHistory();\n      loadAutoReplySettings(); // Load auto-reply settings when page is selected\n    }\n  }, [selectedPage, facebookConnected, activeTab, loadPostHistory, loadAutoReplySettings]);\n  const handleFacebookLogout = async () => {\n    try {\n      // Ensure scheduleData is always defined\n      const safeScheduleData = scheduleData || {};\n\n      // Check for active schedules before disconnecting\n      if (selectedPage && safeScheduleData.isActive) {\n        const confirmDisconnect = window.confirm(`⚠️ Warning: You have an active schedule for \"${selectedPage.name}\". Disconnecting will deactivate this schedule. Do you want to continue?`);\n        if (!confirmDisconnect) {\n          return;\n        }\n\n        // Deactivate the schedule before disconnecting\n        try {\n          await apiClient.deleteScheduledPost(safeScheduleData.scheduleId);\n          console.log('✅ Schedule deactivated before disconnect');\n        } catch (scheduleError) {\n          console.warn('Failed to deactivate schedule before disconnect:', scheduleError);\n        }\n      }\n      setIsLoggingOut(true);\n      setConnectionStatus('Disconnecting from Facebook...');\n      await apiClient.logoutFacebook();\n      setFacebookConnected(false);\n      setAvailablePages([]);\n      setSelectedPage(null);\n      setAutoPostHistory([]);\n      setManualPostHistory([]);\n\n      // Reset schedule data\n      setScheduleData({\n        prompt: '',\n        time: '',\n        frequency: 'daily',\n        customDate: '',\n        isActive: false,\n        scheduleId: null\n      });\n      setConnectionStatus('Successfully disconnected from Facebook');\n      setTimeout(() => {\n        setConnectionStatus('Ready to connect your Facebook account');\n      }, 3000);\n    } catch (error) {\n      console.error('Error logging out from Facebook:', error);\n      setConnectionStatus('Failed to disconnect from Facebook: ' + error.message);\n    } finally {\n      setIsLoggingOut(false);\n    }\n  };\n  const fetchPages = async accessToken => {\n    if (!accessToken) {\n      setConnectionStatus('No Facebook access token found. Please try reconnecting.');\n      setIsConnecting(false);\n      setFacebookConnected(false);\n      return {\n        mappedPages: [],\n        userInfo: null\n      };\n    }\n    try {\n      var _permissionsResponse$;\n      const permissionsResponse = await new Promise((resolve, reject) => {\n        window.FB.api('/me/permissions', {\n          access_token: accessToken\n        }, response => {\n          if (response.error) reject(new Error(response.error.message));else resolve(response);\n        });\n      });\n      const grantedPermissions = ((_permissionsResponse$ = permissionsResponse.data) === null || _permissionsResponse$ === void 0 ? void 0 : _permissionsResponse$.filter(p => p.status === 'granted').map(p => p.permission)) || [];\n      const requiredPermissions = ['pages_show_list', 'pages_manage_posts'];\n      const missingPermissions = requiredPermissions.filter(p => !grantedPermissions.includes(p));\n      if (missingPermissions.length > 0) {\n        setConnectionStatus(`Missing permissions: ${missingPermissions.join(', ')}. Your app needs \"Pages API\" permissions.`);\n      }\n      const userInfo = await new Promise((resolve, reject) => {\n        window.FB.api('/me', {\n          access_token: accessToken,\n          fields: 'id,name,email'\n        }, response => {\n          if (response.error) reject(new Error(response.error.message));else resolve(response);\n        });\n      });\n      const pagesResponse = await new Promise((resolve, reject) => {\n        window.FB.api('/me/accounts', {\n          access_token: accessToken,\n          fields: 'id,name,category,access_token,picture,fan_count,tasks'\n        }, response => {\n          if (response.error) {\n            reject(new Error(`${response.error.message} (Code: ${response.error.code})`));\n          } else {\n            resolve(response);\n          }\n        });\n      });\n      const pages = pagesResponse.data || [];\n      const mappedPages = pages.map(page => {\n        var _page$picture, _page$picture$data;\n        const tasks = page.tasks || [];\n        const canPost = tasks.includes('CREATE_CONTENT') || tasks.includes('MANAGE');\n        const canComment = tasks.includes('MODERATE') || tasks.includes('MANAGE');\n        return {\n          id: page.id,\n          internalId: null,\n          name: page.name,\n          category: page.category || 'Page',\n          access_token: page.access_token,\n          profilePicture: ((_page$picture = page.picture) === null || _page$picture === void 0 ? void 0 : (_page$picture$data = _page$picture.data) === null || _page$picture$data === void 0 ? void 0 : _page$picture$data.url) || '',\n          canPost: canPost,\n          canComment: canComment,\n          followerCount: page.fan_count || 0\n        };\n      });\n      setAvailablePages(mappedPages);\n      if (mappedPages.length === 1) {\n        setSelectedPage(mappedPages[0]);\n        setConnectionStatus(`Connected successfully! 1 page found.`);\n        // Load auto-reply settings for the single page\n        setTimeout(() => loadAutoReplySettings(), 500);\n      } else if (mappedPages.length > 1) {\n        setSelectedPage(null);\n        setConnectionStatus(`Connected successfully! ${mappedPages.length} pages found. Please select a page below.`);\n      } else {\n        setSelectedPage({\n          id: userInfo.id,\n          internalId: null,\n          name: userInfo.name,\n          access_token: accessToken,\n          category: 'Personal Profile',\n          profilePicture: '',\n          canPost: true,\n          canComment: true,\n          followerCount: 0\n        });\n        setConnectionStatus('Connected as personal profile (no pages found).');\n        // Load auto-reply settings for personal profile\n        setTimeout(() => loadAutoReplySettings(), 500);\n      }\n      setFacebookConnected(true);\n      setIsConnecting(false);\n      return {\n        mappedPages,\n        userInfo\n      };\n    } catch (error) {\n      console.error('Facebook API error:', error);\n      setConnectionStatus('Failed to get Facebook data: ' + (error.message || 'Unknown error'));\n      setIsConnecting(false);\n      setFacebookConnected(false);\n      return {\n        mappedPages: [],\n        userInfo: null\n      };\n    }\n  };\n  const connectToBackend = async (accessToken, userInfo, pages) => {\n    try {\n      var _response$data, _response$data$data;\n      const response = await apiClient.connectFacebook(accessToken, userInfo.id, pages);\n      if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.token_type) === 'long_lived_user_token') {\n        const expiresAt = response.data.data.token_expires_at;\n        if (expiresAt) {\n          const expiryDate = new Date(expiresAt);\n          setConnectionStatus(`Connected with long-lived token (expires: ${expiryDate.toLocaleDateString()})`);\n        } else {\n          setConnectionStatus('Connected with long-lived token');\n        }\n      }\n      setTimeout(async () => {\n        try {\n          const socialAccounts = await apiClient.getSocialAccounts();\n          const facebookAccounts = socialAccounts.filter(acc => acc.platform === 'facebook' && acc.is_connected);\n          const updatedPages = availablePages.map(page => {\n            const matchingAccount = facebookAccounts.find(acc => acc.platform_user_id === page.id);\n            return {\n              ...page,\n              internalId: matchingAccount === null || matchingAccount === void 0 ? void 0 : matchingAccount.id\n            };\n          });\n          setAvailablePages(updatedPages);\n          if (selectedPage) {\n            const matchingAccount = facebookAccounts.find(acc => acc.platform_user_id === selectedPage.id);\n            if (matchingAccount) {\n              setSelectedPage(prev => ({\n                ...prev,\n                internalId: matchingAccount.id\n              }));\n            }\n          }\n        } catch (error) {\n          console.error('Error updating page data with internal IDs:', error);\n          setConnectionStatus('Warning: Unable to get account details. You may need to reconnect Facebook for scheduling to work.');\n        }\n      }, 2000);\n      return response;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response2$data2;\n      console.error('Backend connection error:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        setConnectionStatus('Your session has expired. Please log out and log back in to connect Facebook.');\n        setTimeout(() => {\n          logout();\n          navigate('/');\n        }, 3000);\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && (_error$response2$data2 = _error$response2$data.detail) !== null && _error$response2$data2 !== void 0 && _error$response2$data2.includes('long-lived token')) {\n        setConnectionStatus('Failed to get long-lived Facebook token. Please try reconnecting.');\n      } else {\n        var _error$response3, _error$response3$data;\n        setConnectionStatus('Failed to connect to backend: ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message));\n      }\n      throw error;\n    }\n  };\n  const handleAutoInputChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    setAutoFormData(prev => ({\n      ...prev,\n      [name]: files ? files[0] : value\n    }));\n  };\n  const handleManualInputChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    setManualFormData(prev => ({\n      ...prev,\n      [name]: files ? files[0] : value\n    }));\n  };\n  const handleMediaTypeChange = (type, formType) => {\n    // If it's a file upload type, open the file picker\n    if (type === 'photo' || type === 'video') {\n      openFilePicker(type, formType);\n      return;\n    }\n\n    // For other types (none, ai_image), set directly\n    if (formType === 'auto') {\n      setAutoFormData(prev => ({\n        ...prev,\n        mediaType: type,\n        mediaFile: null,\n        generatedImageUrl: type === 'ai_image' ? prev.generatedImageUrl : null,\n        generatedImageFilename: type === 'ai_image' ? prev.generatedImageFilename : null,\n        imagePrompt: type === 'ai_image' ? prev.imagePrompt : ''\n      }));\n    } else {\n      setManualFormData(prev => ({\n        ...prev,\n        mediaType: type,\n        mediaFile: null,\n        generatedImageUrl: type === 'ai_image' ? prev.generatedImageUrl : null,\n        generatedImageFilename: type === 'ai_image' ? prev.generatedImageFilename : null,\n        imagePrompt: type === 'ai_image' ? prev.imagePrompt : ''\n      }));\n    }\n  };\n\n  // File picker functions\n  const openFilePicker = (type, formType) => {\n    setFilePickerType(type);\n    setFilePickerFormType(formType);\n    setShowFilePicker(true);\n  };\n  const closeFilePicker = () => {\n    setShowFilePicker(false);\n    setFilePickerType('');\n    setFilePickerFormType('');\n    setIsLoadingGoogleDrive(false);\n  };\n  const handleLocalFileSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const setFormData = filePickerFormType === 'auto' ? setAutoFormData : setManualFormData;\n      setFormData(prev => ({\n        ...prev,\n        mediaFile: file,\n        mediaType: filePickerType // Set the media type based on what was selected\n      }));\n      closeFilePicker();\n    }\n  };\n  const handleGoogleDriveSelect = async () => {\n    setIsLoadingGoogleDrive(true);\n    try {\n      // 1️⃣ Check if already authenticated\n      const status = await apiClient.getGoogleDriveStatus();\n      if (!status.authenticated) {\n        // 2️⃣ Get consent URL for popup\n        const authResponse = await apiClient.getGoogleDriveAuthorizeUrl();\n        if (authResponse.consent_url) {\n          // 3️⃣ Open popup and wait for completion\n          await openDriveAuthPopup(authResponse.consent_url);\n\n          // 4️⃣ Wait a bit for the OAuth callback to complete\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      }\n\n      // 5️⃣ After popup closes, re-check authentication status with retries\n      let finalStatus = null;\n      let retries = 3;\n      while (retries > 0) {\n        finalStatus = await apiClient.getGoogleDriveStatus();\n        if (finalStatus.authenticated) {\n          break;\n        }\n        retries--;\n        if (retries > 0) {\n          // Wait before retrying\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n      if (!finalStatus.authenticated) {\n        throw new Error('Authentication was not completed successfully. Please try again.');\n      }\n\n      // 6️⃣ Update state and proceed with Google Drive picker\n      setGoogleDriveAvailable(true);\n\n      // Initialize Google Drive API\n      await loadGoogleDriveAPI();\n\n      // Check if google object is available\n      if (typeof window.google === 'undefined' || !window.google.picker) {\n        throw new Error('Google Picker API failed to load');\n      }\n\n      // Get fresh token for picker\n      const tokenResponse = await apiClient.getGoogleDriveToken();\n      if (!tokenResponse.access_token) {\n        throw new Error('Failed to get Google Drive access token');\n      }\n\n      // Configure MIME types based on file picker type\n      const mimeTypes = filePickerType === 'photo' ? ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/bmp'] : ['video/mp4', 'video/avi', 'video/mov', 'video/wmv', 'video/flv', 'video/webm'];\n\n      // Create the main view for Drive files\n      const docsView = new window.google.picker.DocsView(window.google.picker.ViewId.DOCS).setIncludeFolders(false).setSelectFolderEnabled(false).setMode(window.google.picker.DocsViewMode.LIST);\n\n      // Set MIME types for filtering\n      if (filePickerType === 'photo') {\n        docsView.setMimeTypes('image/jpeg,image/png,image/gif,image/webp,image/bmp');\n      } else {\n        docsView.setMimeTypes('video/mp4,video/avi,video/mov,video/wmv,video/flv,video/webm');\n      }\n\n      // Create picker with proper configuration\n      const picker = new window.google.picker.PickerBuilder().addView(docsView).setOAuthToken(tokenResponse.access_token).setDeveloperKey(process.env.REACT_APP_GOOGLE_DEVELOPER_KEY || '').setCallback(handleGoogleDriveCallback).setTitle(`Select a ${filePickerType === 'photo' ? 'photo' : 'video'} from Google Drive`).setOrigin(window.location.origin).setSize(1051, 650) // Set a reasonable size\n      .build();\n      console.log('🔍 Google Picker configuration:', {\n        mimeTypes: filePickerType === 'photo' ? 'image/*' : 'video/*',\n        accessToken: tokenResponse.access_token ? 'Present' : 'Missing',\n        developerKey: process.env.REACT_APP_GOOGLE_DEVELOPER_KEY ? 'Present' : 'Missing'\n      });\n      picker.setVisible(true);\n    } catch (error) {\n      console.error('Error with Google Drive selection:', error);\n\n      // Handle scope conflicts specifically\n      if (error.message && error.message.includes('Scope has changed')) {\n        setConnectionStatus('Google Drive scope conflict detected. Clearing tokens and retrying...');\n        try {\n          await apiClient.clearGoogleDriveTokens();\n          setGoogleDriveAvailable(false);\n          setConnectionStatus('Google Drive tokens cleared. Please try connecting again.');\n        } catch (clearError) {\n          console.error('Error clearing tokens:', clearError);\n          setConnectionStatus('Failed to clear Google Drive tokens. Please disconnect and reconnect.');\n        }\n      } else {\n        setConnectionStatus(`Google Drive error: ${error.message}`);\n      }\n    } finally {\n      setIsLoadingGoogleDrive(false);\n    }\n  };\n  const loadGoogleDriveAPI = () => {\n    return new Promise((resolve, reject) => {\n      // Check if Google Picker is already loaded\n      if (window.google && window.google.picker && window.google.picker.PickerBuilder) {\n        console.log('Google Picker API already loaded');\n        resolve();\n        return;\n      }\n      console.log('Loading Google Picker API...');\n\n      // Load the Google API script\n      const script = document.createElement('script');\n      script.src = 'https://apis.google.com/js/api.js';\n      script.onload = () => {\n        if (window.gapi) {\n          console.log('Google API loaded, loading picker...');\n          window.gapi.load('picker', {\n            callback: () => {\n              if (window.google && window.google.picker) {\n                console.log('Google Picker loaded successfully');\n                resolve();\n              } else {\n                reject(new Error('Google Picker failed to initialize'));\n              }\n            },\n            onerror: () => {\n              reject(new Error('Failed to load Google Picker'));\n            }\n          });\n        } else {\n          reject(new Error('Google API (gapi) failed to load'));\n        }\n      };\n      script.onerror = () => {\n        reject(new Error('Failed to load Google API script'));\n      };\n\n      // Only add script if it doesn't already exist\n      if (!document.querySelector('script[src=\"https://apis.google.com/js/api.js\"]')) {\n        document.head.appendChild(script);\n      } else {\n        // Script exists but API might not be loaded yet\n        setTimeout(() => {\n          if (window.gapi) {\n            window.gapi.load('picker', {\n              callback: resolve,\n              onerror: () => reject(new Error('Failed to load Google Picker'))\n            });\n          } else {\n            reject(new Error('Google API script loaded but gapi not available'));\n          }\n        }, 100);\n      }\n    });\n  };\n  const handleGoogleDriveCallback = async data => {\n    console.log('🔍 Google Drive Picker Callback:', data);\n    if (data.action === window.google.picker.Action.PICKED) {\n      const file = data.docs[0];\n      console.log('📁 Selected file:', {\n        id: file.id,\n        name: file.name,\n        mimeType: file.mimeType,\n        size: file.sizeBytes,\n        url: file.url\n      });\n      try {\n        setConnectionStatus('Downloading file from Google Drive...');\n\n        // Download the file from Google Drive\n        const fileResponse = await downloadGoogleDriveFile(file.id);\n        console.log('📥 File download response:', {\n          success: fileResponse.success,\n          fileName: fileResponse.fileName,\n          mimeType: fileResponse.mimeType,\n          size: fileResponse.size\n        });\n        if (!fileResponse.success || !fileResponse.fileContent) {\n          throw new Error('Invalid file response from server');\n        }\n\n        // Decode base64 content\n        const binaryString = atob(fileResponse.fileContent);\n        const bytes = new Uint8Array(binaryString.length);\n        for (let i = 0; i < binaryString.length; i++) {\n          bytes[i] = binaryString.charCodeAt(i);\n        }\n\n        // Create a File object from the downloaded content\n        const blob = new Blob([bytes], {\n          type: fileResponse.mimeType || file.mimeType\n        });\n        const fileObj = new File([blob], fileResponse.fileName || file.name, {\n          type: fileResponse.mimeType || file.mimeType\n        });\n        console.log('📄 Created file object:', {\n          name: fileObj.name,\n          type: fileObj.type,\n          size: fileObj.size\n        });\n\n        // Update the form data\n        const setFormData = filePickerFormType === 'auto' ? setAutoFormData : setManualFormData;\n        setFormData(prev => ({\n          ...prev,\n          mediaFile: fileObj,\n          mediaType: filePickerType // Set the media type based on what was selected\n        }));\n        closeFilePicker();\n        setConnectionStatus(`File \"${fileObj.name}\" selected from Google Drive successfully!`);\n      } catch (error) {\n        console.error('❌ Error downloading file from Google Drive:', error);\n        setConnectionStatus('Failed to download file from Google Drive: ' + error.message);\n      }\n    } else if (data.action === window.google.picker.Action.CANCEL) {\n      console.log('❌ Google Drive Picker cancelled');\n      closeFilePicker();\n    } else if (data.action === window.google.picker.Action.LOADED) {\n      console.log('✅ Google Drive Picker loaded');\n    } else {\n      console.log('🔍 Google Drive Picker action:', data.action);\n    }\n  };\n  const downloadGoogleDriveFile = async fileId => {\n    // This would typically be handled by your backend\n    // For now, we'll use a placeholder implementation\n    try {\n      const response = await apiClient.downloadGoogleDriveFile(fileId);\n      return response.fileContent;\n    } catch (error) {\n      throw new Error('Failed to download file from Google Drive');\n    }\n  };\n  const generatePostContent = async () => {\n    if (!autoFormData.prompt.trim()) {\n      setConnectionStatus('Please enter a prompt for AI generation');\n      return;\n    }\n    setAutoFormData(prev => ({\n      ...prev,\n      isGenerating: true\n    }));\n    setConnectionStatus('Generating content with AI...');\n    try {\n      const response = await apiClient.generateContent(autoFormData.prompt);\n      setAutoFormData(prev => ({\n        ...prev,\n        generatedContent: response.content,\n        isGenerating: false\n      }));\n      setConnectionStatus('Content generated successfully!');\n    } catch (error) {\n      console.error('Content generation error:', error);\n      setConnectionStatus('Failed to generate content: ' + (error.message || 'Unknown error'));\n      setAutoFormData(prev => ({\n        ...prev,\n        isGenerating: false\n      }));\n    }\n  };\n  const generateImage = async formType => {\n    const currentData = formType === 'auto' ? autoFormData : manualFormData;\n    const setFormData = formType === 'auto' ? setAutoFormData : setManualFormData;\n    const imagePrompt = currentData.imagePrompt || currentData.prompt || (formType === 'manual' ? currentData.message : '');\n    if (!imagePrompt.trim()) {\n      setConnectionStatus('Please enter an image prompt or description');\n      return;\n    }\n    setFormData(prev => ({\n      ...prev,\n      isGeneratingImage: true\n    }));\n    setConnectionStatus('Generating image with AI...');\n    try {\n      const response = await apiClient.generateFacebookImage(imagePrompt, 'feed');\n      if (response.success) {\n        setFormData(prev => ({\n          ...prev,\n          generatedImageUrl: response.data.image_url,\n          generatedImageFilename: response.data.filename,\n          isGeneratingImage: false\n        }));\n        setConnectionStatus('Image generated successfully!');\n      } else {\n        throw new Error(response.error || 'Image generation failed');\n      }\n    } catch (error) {\n      console.error('Image generation error:', error);\n      setConnectionStatus('Failed to generate image: ' + (error.message || 'Unknown error'));\n      setFormData(prev => ({\n        ...prev,\n        isGeneratingImage: false\n      }));\n    }\n  };\n  const generateImageWithCaption = async () => {\n    if (!autoFormData.prompt.trim()) {\n      setConnectionStatus('Please enter a prompt for generation');\n      return;\n    }\n    setAutoFormData(prev => ({\n      ...prev,\n      isGenerating: true,\n      isGeneratingImage: true\n    }));\n    setConnectionStatus('Generating image and caption with AI...');\n    try {\n      const textResponse = await apiClient.generateContent(autoFormData.prompt);\n      if (!textResponse.content) {\n        throw new Error('Failed to generate text content');\n      }\n      const imagePrompt = autoFormData.imagePrompt || autoFormData.prompt;\n      const imageResponse = await apiClient.generateFacebookImage(imagePrompt, 'feed');\n      if (!imageResponse.success) {\n        throw new Error(imageResponse.error || 'Image generation failed');\n      }\n      setAutoFormData(prev => ({\n        ...prev,\n        generatedContent: textResponse.content,\n        generatedImageUrl: imageResponse.data.image_url,\n        generatedImageFilename: imageResponse.data.filename,\n        isGenerating: false,\n        isGeneratingImage: false\n      }));\n      setConnectionStatus('Image and caption generated successfully!');\n    } catch (error) {\n      console.error('Image with caption generation error:', error);\n      setConnectionStatus('Failed to generate image and caption: ' + (error.message || 'Unknown error'));\n      setAutoFormData(prev => ({\n        ...prev,\n        isGenerating: false,\n        isGeneratingImage: false\n      }));\n    }\n  };\n  const publishPost = async () => {\n    if (!selectedPage) {\n      setConnectionStatus('Please select a page first');\n      return;\n    }\n    const isAutoMode = activeTab === 'auto';\n    const content = isAutoMode ? autoFormData.generatedContent : manualFormData.message;\n    const mediaType = isAutoMode ? autoFormData.mediaType : manualFormData.mediaType;\n    const mediaFile = isAutoMode ? autoFormData.mediaFile : manualFormData.mediaFile;\n    const generatedImageUrl = isAutoMode ? autoFormData.generatedImageUrl : manualFormData.generatedImageUrl;\n    const generatedImageFilename = isAutoMode ? autoFormData.generatedImageFilename : manualFormData.generatedImageFilename;\n\n    // Debug: Log key info\n    console.log('Publish attempt - Tab:', activeTab, 'Content:', (content === null || content === void 0 ? void 0 : content.substring(0, 50)) + '...');\n    console.log('Media type:', mediaType);\n    console.log('Media file:', mediaFile);\n    console.log('Selected page:', selectedPage);\n\n    // Allow video-only posts (no text required for video posts)\n    if (!content || content.trim() === '') {\n      if (mediaType !== 'video') {\n        setConnectionStatus('Please enter some content for your post');\n        return;\n      }\n    }\n    if (mediaType === 'photo' && !mediaFile) {\n      setConnectionStatus('Please select a media file to upload');\n      return;\n    }\n    if (mediaType === 'video' && !mediaFile) {\n      setConnectionStatus('Please select a video file to upload');\n      return;\n    }\n    if (mediaType === 'ai_image' && (!generatedImageUrl || !generatedImageFilename)) {\n      setConnectionStatus('Please generate an image first');\n      return;\n    }\n    try {\n      var _postOptions$textCont;\n      setIsPublishing(true);\n      setConnectionStatus('Publishing post to Facebook...');\n      let postResult;\n\n      // Use the unified Facebook post creation endpoint\n      const postOptions = {\n        postType: 'feed'\n      };\n\n      // Handle content based on mode\n      if (isAutoMode) {\n        // In auto mode, we might want to use AI generation\n        if (autoFormData.generatedContent) {\n          // Use pre-generated content\n          postOptions.textContent = autoFormData.generatedContent;\n        } else if (autoFormData.prompt) {\n          // Use prompt for AI generation\n          postOptions.contentPrompt = autoFormData.prompt;\n          postOptions.useAIText = true;\n        } else {\n          // Fallback to any content we have\n          postOptions.textContent = content;\n        }\n      } else {\n        // In manual mode, use the provided text content if available\n        if (content && content.trim()) {\n          postOptions.textContent = content;\n        }\n      }\n\n      // Debug: Log what we're sending\n      console.log('Post options:', {\n        ...postOptions,\n        textContent: ((_postOptions$textCont = postOptions.textContent) === null || _postOptions$textCont === void 0 ? void 0 : _postOptions$textCont.substring(0, 50)) + '...'\n      });\n      if (mediaType === 'ai_image' && generatedImageUrl && generatedImageFilename) {\n        // Post with pre-generated image\n        postOptions.imageUrl = generatedImageUrl;\n        postOptions.imageFilename = generatedImageFilename;\n      } else if (mediaType === 'ai_image' && (autoFormData.imagePrompt || manualFormData.imagePrompt)) {\n        // Generate image using AI\n        const imagePrompt = isAutoMode ? autoFormData.imagePrompt : manualFormData.imagePrompt;\n        postOptions.imagePrompt = imagePrompt;\n        postOptions.useAIImage = true;\n      } else if (mediaType === 'photo' && mediaFile) {\n        // Post with uploaded image (convert to base64)\n        const imageData = await fileToBase64(mediaFile);\n        postOptions.imageUrl = imageData;\n      } else if (mediaType === 'video' && mediaFile) {\n        // Post with uploaded video (convert to base64)\n        try {\n          console.log('Converting video to base64...');\n          const videoData = await fileToBase64(mediaFile);\n          console.log('Video converted successfully, length:', videoData.length);\n          postOptions.videoUrl = videoData;\n          postOptions.videoFilename = mediaFile.name;\n        } catch (error) {\n          console.error('Error converting video to base64:', error);\n          throw new Error('Failed to process video file: ' + error.message);\n        }\n      }\n\n      // Validate that we have at least one required field\n      if (!postOptions.textContent && !postOptions.contentPrompt && !postOptions.imageUrl && !postOptions.imagePrompt && !postOptions.videoUrl) {\n        throw new Error('No content provided. Please add text content, generate content, or add media.');\n      }\n\n      // Debug: Log final options being sent to API\n      console.log('Final post options being sent to API:', postOptions);\n      console.log('Selected page ID:', selectedPage.id);\n      console.log('Post options keys:', Object.keys(postOptions));\n      console.log('Has video URL:', !!postOptions.videoUrl);\n      console.log('Has image URL:', !!postOptions.imageUrl);\n      console.log('Has text content:', !!postOptions.textContent);\n      console.log('Calling API with page ID:', selectedPage.id);\n      postResult = await apiClient.createFacebookPost(selectedPage.id, postOptions);\n      console.log('API response:', postResult);\n      if (!postResult.success) {\n        throw new Error(postResult.error || 'Failed to create post via backend');\n      }\n      setConnectionStatus('Post published successfully!');\n      setTimeout(() => {\n        loadPostHistory();\n      }, 1000);\n      if (isAutoMode) {\n        setAutoFormData(prev => ({\n          ...prev,\n          prompt: '',\n          generatedContent: '',\n          mediaFile: null,\n          mediaType: 'none',\n          imagePrompt: '',\n          generatedImageUrl: null,\n          generatedImageFilename: null\n        }));\n      } else {\n        setManualFormData(prev => ({\n          ...prev,\n          message: '',\n          mediaFile: null,\n          mediaType: 'none',\n          imagePrompt: '',\n          generatedImageUrl: null,\n          generatedImageFilename: null\n        }));\n      }\n    } catch (error) {\n      console.error('Post publishing error:', error);\n      setConnectionStatus('Failed to publish post: ' + (error.message || 'Unknown error'));\n    } finally {\n      setIsPublishing(false);\n    }\n  };\n  const loginWithFacebook = async () => {\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n      setConnectionStatus('Facebook login requires HTTPS. Please use https://localhost:3001 or deploy with HTTPS');\n      return;\n    }\n    try {\n      await apiClient.getCurrentUser();\n    } catch (error) {\n      setConnectionStatus('Your session has expired. Please log out and log back in to connect Facebook.');\n      setTimeout(() => {\n        logout();\n        navigate('/');\n      }, 3000);\n      return;\n    }\n    setIsConnecting(true);\n    setConnectionStatus('Loading Facebook SDK...');\n    try {\n      await loadFacebookSDK(FACEBOOK_APP_ID);\n      if (!window.FB || typeof window.FB.login !== 'function') {\n        setConnectionStatus('Facebook SDK failed to load. Please refresh the page and try again.');\n        setIsConnecting(false);\n        return;\n      }\n      setConnectionStatus('Connecting to Facebook...');\n      window.FB.login(response => {\n        if (response.authResponse && response.authResponse.accessToken) {\n          setConnectionStatus('Facebook login successful! Fetching pages...');\n          (async () => {\n            try {\n              const {\n                mappedPages,\n                userInfo\n              } = await fetchPages(response.authResponse.accessToken);\n              if (mappedPages.length > 0) {\n                var _backendResponse$data;\n                setConnectionStatus('Connecting to backend...');\n                const backendResponse = await connectToBackend(response.authResponse.accessToken, userInfo, mappedPages);\n                if (backendResponse !== null && backendResponse !== void 0 && (_backendResponse$data = backendResponse.data) !== null && _backendResponse$data !== void 0 && _backendResponse$data.pages) {\n                  setAvailablePages(mappedPages);\n                  setConnectionStatus(`Connected successfully! ${backendResponse.data.pages_connected} pages synchronized with backend.`);\n                }\n              } else {\n                setConnectionStatus('No pages found in Facebook API. Connecting to backend to check for existing connections...');\n                try {\n                  await connectToBackend(response.authResponse.accessToken, userInfo, []);\n                  const existingAccounts = await apiClient.getSocialAccounts();\n                  const facebookPages = existingAccounts.filter(acc => acc.platform === 'facebook' && acc.account_type === 'page' && acc.is_connected);\n                  if (facebookPages.length > 0) {\n                    const backendMappedPages = facebookPages.map(page => {\n                      var _page$platform_data, _page$platform_data2, _page$platform_data3;\n                      return {\n                        id: page.platform_user_id,\n                        internalId: page.id,\n                        name: page.display_name,\n                        category: ((_page$platform_data = page.platform_data) === null || _page$platform_data === void 0 ? void 0 : _page$platform_data.category) || 'Page',\n                        access_token: page.access_token || response.authResponse.accessToken,\n                        profilePicture: page.profile_picture_url || '',\n                        canPost: ((_page$platform_data2 = page.platform_data) === null || _page$platform_data2 === void 0 ? void 0 : _page$platform_data2.can_post) !== false,\n                        canComment: ((_page$platform_data3 = page.platform_data) === null || _page$platform_data3 === void 0 ? void 0 : _page$platform_data3.can_comment) !== false,\n                        followerCount: page.follower_count || 0\n                      };\n                    });\n                    setAvailablePages(backendMappedPages);\n                    setConnectionStatus(`Found ${facebookPages.length} existing page(s) from previous connections!`);\n                  } else {\n                    setConnectionStatus('No pages found. You may need to grant page permissions or create a Facebook page first.');\n                  }\n                } catch (backendError) {\n                  console.error('[FB.login] Backend check failed:', backendError);\n                  setConnectionStatus('No pages found. You may need to grant page permissions or create a Facebook page first.');\n                }\n              }\n            } catch (error) {\n              console.error('[FB.login] Error in page fetching or backend connection:', error);\n              setConnectionStatus('Error during setup: ' + (error.message || 'Unknown error'));\n              setIsConnecting(false);\n              setFacebookConnected(false);\n            }\n          })();\n        } else {\n          if (response.status === 'not_authorized') {\n            setConnectionStatus('Please authorize the app to continue and select at least one page.');\n          } else {\n            setConnectionStatus('Facebook login cancelled or failed');\n          }\n          setIsConnecting(false);\n        }\n      }, {\n        scope: ['public_profile', 'pages_show_list', 'pages_read_engagement', 'pages_manage_posts', 'pages_manage_engagement', 'pages_read_user_content', 'pages_manage_metadata'].join(','),\n        enable_profile_selector: true,\n        return_scopes: true,\n        auth_type: 'rerequest',\n        display: 'popup'\n      });\n    } catch (error) {\n      console.error('Facebook login error:', error);\n      setConnectionStatus('Facebook login failed: ' + error.message);\n    }\n  };\n  const getStatusCardClass = () => {\n    if (connectionStatus.includes('Failed') || connectionStatus.includes('error') || connectionStatus.includes('Error')) {\n      return 'status-card error';\n    } else if (connectionStatus.includes('successful') || connectionStatus.includes('Connected') || connectionStatus.includes('completed')) {\n      return 'status-card success';\n    } else {\n      return 'status-card info';\n    }\n  };\n\n  // Fetch AUTO_REPLY_MESSAGE rule for selected page\n  const loadAutoReplyMessageRule = useCallback(async () => {\n    if (!selectedPage) return;\n    setAutoReplyMessagesLoading(true);\n    setAutoReplyMessagesError(null);\n    try {\n      const rules = await apiClient.getAutomationRules('facebook', 'AUTO_REPLY_MESSAGE');\n      // Find the rule for this page\n      const socialAccounts = await apiClient.getSocialAccounts();\n      const matchingAccount = socialAccounts.find(acc => acc.platform === 'facebook' && acc.platform_user_id === selectedPage.id);\n      const rule = rules.find(r => r.social_account_id === (matchingAccount === null || matchingAccount === void 0 ? void 0 : matchingAccount.id));\n      if (rule) {\n        setAutoReplyMessageRule(rule);\n        setAutoReplyMessagesEnabled(rule.is_active !== false); // Default ON if undefined\n      } else {\n        setAutoReplyMessageRule(null);\n        setAutoReplyMessagesEnabled(true); // Default ON if no rule\n      }\n    } catch (err) {\n      setAutoReplyMessagesError('Failed to load auto-reply message rule.');\n    } finally {\n      setAutoReplyMessagesLoading(false);\n    }\n  }, [selectedPage]);\n\n  // Call on page load and when selectedPage changes\n  useEffect(() => {\n    loadAutoReplyMessageRule();\n  }, [selectedPage, loadAutoReplyMessageRule]);\n\n  // Handler for toggling auto-reply messages\n  const handleAutoReplyMessagesToggle = async () => {\n    if (!autoReplyMessageRule) return;\n    setAutoReplyMessagesLoading(true);\n    setAutoReplyMessagesError(null);\n    try {\n      const updated = await apiClient.updateAutomationRule(autoReplyMessageRule.id, {\n        is_active: !autoReplyMessagesEnabled\n      });\n      setAutoReplyMessagesEnabled(updated.is_active);\n      setAutoReplyMessageRule(updated);\n    } catch (err) {\n      setAutoReplyMessagesError('Failed to update auto-reply message rule.');\n    } finally {\n      setAutoReplyMessagesLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facebook-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"facebook-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"facebook-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `facebook-icon-container ${facebookConnected ? 'connected' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"#1877f2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1420,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"facebook-title\",\n            children: facebookConnected ? selectedPage ? `${selectedPage.name}` : 'Facebook Manager' : 'Facebook Manager'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"facebook-subtitle\",\n            children: facebookConnected ? selectedPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-indicator connected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1434,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [selectedPage.category, \" \\u2022 \", selectedPage.followerCount || 0, \" followers\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1435,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-indicator connecting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1441,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Connected \\u2022 Select a page to continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1442,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-indicator disconnected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Not connected \\u2022 Ready to link your account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1448,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"facebook-header-right\",\n        children: [facebookConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFacebookLogout,\n          disabled: isLoggingOut,\n          className: \"btn btn-danger\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n              points: \"16,17 21,12 16,7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"21\",\n              y1: \"12\",\n              x2: \"9\",\n              y2: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1462,\n            columnNumber: 15\n          }, this), isLoggingOut ? 'Disconnecting...' : 'Disconnect']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"btn btn-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"m12 19-7-7 7-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M19 12H5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1477,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 13\n          }, this), \"Dashboard\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `facebook-main-content ${!facebookConnected ? 'centered' : ''}`,\n      children: [connectionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getStatusCardClass(),\n        children: connectionStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `facebook-main-card ${!facebookConnected ? 'connect-mode' : ''}`,\n        children: !facebookConnected ?\n        /*#__PURE__*/\n        /* Connect Card */\n        _jsxDEV(\"div\", {\n          className: \"connect-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connect-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"64\",\n              height: \"64\",\n              viewBox: \"0 0 24 24\",\n              fill: \"#1877f2\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"connect-title\",\n            children: \"Connect Your Facebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loginWithFacebook,\n            disabled: isConnecting || isCheckingStatus,\n            className: \"connect-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"white\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1514,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1513,\n              columnNumber: 17\n            }, this), isCheckingStatus ? 'Checking Connection...' : isConnecting ? 'Connecting...' : 'Connect Facebook']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1497,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        /* Connected Content */\n        _jsxDEV(\"div\", {\n          className: \"facebook-connected-content\",\n          children: [availablePages.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-selector-enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-selector-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-avatar\",\n                children: selectedPage && selectedPage.profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selectedPage.profilePicture,\n                  alt: selectedPage.name,\n                  className: \"page-avatar-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1528,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"page-avatar-placeholder\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"24\",\n                    height: \"24\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1536,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1535,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1534,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1526,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-selector-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"page-selector-title\",\n                  children: \"Select a Page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1542,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"page-selector-subtitle\",\n                  children: \"Choose which Facebook page to manage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1543,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1541,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1525,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-selector-dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"page-dropdown\",\n                className: \"page-dropdown-enhanced\",\n                value: (selectedPage === null || selectedPage === void 0 ? void 0 : selectedPage.id) || '',\n                onChange: e => {\n                  const page = availablePages.find(p => p.id === e.target.value);\n                  if (page && (selectedPage === null || selectedPage === void 0 ? void 0 : selectedPage.id) !== page.id) {\n                    setSelectedPage(page);\n                    setAutoPostHistory([]);\n                    setManualPostHistory([]);\n                    setShowBulkComposer(false);\n                    setActiveTab('auto');\n                    setConnectionStatus('');\n                    setScheduleData({\n                      prompt: '',\n                      time: '',\n                      frequency: 'daily',\n                      customDate: '',\n                      isActive: false,\n                      scheduleId: null\n                    });\n                    setAutoReplyMessagesEnabled(true);\n                    setAutoReplyMessagesLoading(false);\n                    setAutoReplyMessagesError(null);\n                    setTimeout(() => {\n                      loadAutoReplySettings();\n                      loadPostHistory();\n                    }, 100);\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Choose a page...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1579,\n                  columnNumber: 23\n                }, this), availablePages.map(page => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: page.id,\n                  children: [page.name, \" (\", page.category, \")\"]\n                }, page.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1581,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1548,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-selector-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"6,9 12,15 18,9\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1589,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1588,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1587,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 19\n            }, this), selectedPage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-selector-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-info-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1598,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                    cx: \"9\",\n                    cy: \"7\",\n                    r: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1599,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M23 21v-2a4 4 0 0 0-3-3.87\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1600,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M16 3.13a4 4 0 0 1 0 7.75\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1601,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1597,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [((_selectedPage$followe = selectedPage.followerCount) === null || _selectedPage$followe === void 0 ? void 0 : _selectedPage$followe.toLocaleString()) || 0, \" followers\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1603,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1596,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-info-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-dot connected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1606,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Connected & Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1607,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1605,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1595,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 17\n          }, this), selectedPage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"facebook-content-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab-navigation\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${activeTab === 'auto' ? 'active' : ''}`,\n                onClick: () => {\n                  setActiveTab('auto');\n                  setShowAutomate(false);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1627,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1626,\n                  columnNumber: 23\n                }, this), isMobile() ? 'AI' : 'AI Generate']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1619,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${activeTab === 'manual' ? 'active' : ''}`,\n                onClick: () => {\n                  setActiveTab('manual');\n                  setShowAutomate(false);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1639,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1640,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1638,\n                  columnNumber: 23\n                }, this), isMobile() ? 'Manual' : 'Manual Post']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1631,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${activeTab === 'bulk' ? 'active' : ''}`,\n                onClick: () => {\n                  setActiveTab('bulk');\n                  setShowBulkComposer(true);\n                  setShowAutomate(false);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M3 3h18v18H3z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1653,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M9 9h6v6H9z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1654,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M15 3v18\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1655,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M9 3v18\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1656,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1652,\n                  columnNumber: 23\n                }, this), isMobile() ? 'Bulk' : 'Bulk Composer']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1644,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${activeTab === 'automate' ? 'active' : ''}`,\n                onClick: () => {\n                  setActiveTab('automate');\n                  setShowAutomate(true);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1668,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1667,\n                  columnNumber: 23\n                }, this), isMobile() ? 'Automate' : 'Automate']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1660,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1618,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab-content\",\n              children: [activeTab === 'automate' && showAutomate && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"automate-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Automate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1679,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"automate-toggles\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"automate-toggle\",\n                    style: {\n                      alignItems: 'center',\n                      gap: 8\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"auto-reply-comments-toggle\",\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 4\n                      },\n                      children: [\"Auto-Reply Comments\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        title: \"Auto-reply to comments is always enabled for all posts. Every new post will automatically have AI-powered comment replies.\",\n                        \"aria-label\": \"Info: Auto-reply to comments is always enabled for all posts.\",\n                        style: {\n                          cursor: 'pointer',\n                          display: 'inline-flex',\n                          alignItems: 'center'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                          style: {\n                            marginLeft: 2,\n                            verticalAlign: 'middle'\n                          },\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"#888\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                            cx: \"12\",\n                            cy: \"12\",\n                            r: \"10\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1690,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                            x1: \"12\",\n                            y1: \"8\",\n                            x2: \"12\",\n                            y2: \"12\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1691,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                            cx: \"12\",\n                            cy: \"16\",\n                            r: \"1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1692,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1689,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1684,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1682,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"auto-reply-comments-toggle\",\n                      type: \"checkbox\",\n                      checked: true,\n                      disabled: true,\n                      style: {\n                        accentColor: '#28a745',\n                        cursor: 'not-allowed'\n                      },\n                      \"aria-label\": \"Auto-Reply Comments Always On\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1696,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"automate-toggle-status enabled\",\n                      style: {\n                        color: '#28a745',\n                        fontWeight: 600\n                      },\n                      children: \"Always On\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1704,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1681,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"automate-toggle-row\",\n                    style: {\n                      marginTop: 16\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"auto-reply-messages-toggle\",\n                      children: \"Auto-Reply Messages\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1707,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"auto-reply-messages-toggle\",\n                      type: \"checkbox\",\n                      checked: autoReplyMessagesEnabled,\n                      disabled: autoReplyMessagesLoading || !autoReplyMessageRule,\n                      onChange: handleAutoReplyMessagesToggle,\n                      \"aria-label\": \"Toggle Auto-Reply Messages\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1708,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `automate-toggle-status ${autoReplyMessagesEnabled ? 'enabled' : 'disabled'}`,\n                      children: autoReplyMessagesEnabled ? 'On' : 'Off'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1716,\n                      columnNumber: 29\n                    }, this), autoReplyMessagesLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"automate-loading\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1717,\n                      columnNumber: 58\n                    }, this), autoReplyMessagesError && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"automate-error\",\n                      children: autoReplyMessagesError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1718,\n                      columnNumber: 56\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1706,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1680,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"automate-info\",\n                  style: {\n                    background: '#f5f7fa',\n                    borderRadius: 6,\n                    padding: 12,\n                    marginTop: 16,\n                    display: 'flex',\n                    alignItems: 'flex-start',\n                    gap: 8\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"18\",\n                    height: \"18\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"#1877f2\",\n                    strokeWidth: \"2\",\n                    style: {\n                      verticalAlign: 'middle',\n                      marginTop: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1723,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"12\",\n                      y1: \"8\",\n                      x2: \"12\",\n                      y2: \"12\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1724,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"12\",\n                      cy: \"16\",\n                      r: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1725,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1722,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Auto-reply to comments is always enabled for all posts.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1728,\n                      columnNumber: 29\n                    }, this), \" Every new post will automatically have AI-powered comment replies.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1727,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1721,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"automate-message-template\",\n                  style: {\n                    marginTop: 16\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Message Template:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1732,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"automate-message-template-box\",\n                    style: {\n                      background: '#f5f7fa',\n                      borderRadius: 4,\n                      padding: 8,\n                      color: '#888',\n                      fontStyle: 'italic'\n                    },\n                    children: (autoReplyMessageRule === null || autoReplyMessageRule === void 0 ? void 0 : (_autoReplyMessageRule = autoReplyMessageRule.actions) === null || _autoReplyMessageRule === void 0 ? void 0 : _autoReplyMessageRule.message_template) || \"Thank you for your message! We'll get back to you soon.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1733,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#888',\n                      fontSize: '0.95em',\n                      marginTop: 4\n                    },\n                    children: \"(To change the auto-reply template or logic, contact your admin.)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1736,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1731,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1678,\n                columnNumber: 23\n              }, this), activeTab === 'auto' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"auto-post-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"AI Content Generation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1746,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Content Prompt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1750,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      name: \"prompt\",\n                      value: autoFormData.prompt,\n                      onChange: handleAutoInputChange,\n                      placeholder: \"Describe what you want to post about...\",\n                      className: \"form-textarea\",\n                      rows: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1751,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1749,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: generatePostContent,\n                      disabled: !autoFormData.prompt.trim() || autoFormData.isGenerating,\n                      className: \"btn btn-primary\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"16\",\n                        height: \"16\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1769,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1768,\n                        columnNumber: 31\n                      }, this), autoFormData.isGenerating ? 'Generating...' : 'Generate Content']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1763,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1762,\n                    columnNumber: 27\n                  }, this), autoFormData.generatedContent && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Generated Content\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1778,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      value: autoFormData.generatedContent,\n                      readOnly: true,\n                      className: \"form-textarea generated-content\",\n                      rows: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1779,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1777,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Media Options\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1790,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"media-options\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: `media-option ${autoFormData.mediaType === 'none' ? 'active' : ''}`,\n                        onClick: () => handleMediaTypeChange('none', 'auto'),\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1798,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                            points: \"14,2 14,8 20,8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1799,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                            x1: \"16\",\n                            y1: \"13\",\n                            x2: \"8\",\n                            y2: \"13\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1800,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                            x1: \"16\",\n                            y1: \"17\",\n                            x2: \"8\",\n                            y2: \"17\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1801,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                            points: \"10,9 9,9 8,9\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1802,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1797,\n                          columnNumber: 33\n                        }, this), \"Text Only\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1792,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: `media-option ${autoFormData.mediaType === 'ai_image' ? 'active' : ''}`,\n                        onClick: () => handleMediaTypeChange('ai_image', 'auto'),\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: /*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1812,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1811,\n                          columnNumber: 33\n                        }, this), \"AI Image\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1806,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1791,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1789,\n                    columnNumber: 27\n                  }, this), autoFormData.mediaType === 'ai_image' && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ai-image-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Image Prompt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1823,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"imagePrompt\",\n                        value: autoFormData.imagePrompt,\n                        onChange: handleAutoInputChange,\n                        placeholder: \"Describe the image you want to generate...\",\n                        className: \"form-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1824,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1822,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => generateImage('auto'),\n                        disabled: !autoFormData.imagePrompt.trim() || autoFormData.isGeneratingImage,\n                        className: \"btn btn-secondary\",\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                            x: \"3\",\n                            y: \"3\",\n                            width: \"18\",\n                            height: \"18\",\n                            rx: \"2\",\n                            ry: \"2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1840,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                            cx: \"8.5\",\n                            cy: \"8.5\",\n                            r: \"1.5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1841,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                            points: \"21,15 16,10 5,21\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1842,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1839,\n                          columnNumber: 35\n                        }, this), autoFormData.isGeneratingImage ? 'Generating...' : 'Generate Image']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1834,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1833,\n                      columnNumber: 31\n                    }, this), autoFormData.generatedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Generated Image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1849,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"image-preview\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: autoFormData.generatedImageUrl,\n                          alt: \"Generated\",\n                          className: \"preview-image\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1851,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1850,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1848,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1821,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: generateImageWithCaption,\n                      disabled: !autoFormData.prompt.trim() || autoFormData.isGenerating || autoFormData.isGeneratingImage,\n                      className: \"btn btn-success\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"16\",\n                        height: \"16\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1870,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1869,\n                        columnNumber: 31\n                      }, this), \"Generate Content + Image\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1864,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1863,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: publishPost,\n                      disabled: !autoFormData.generatedContent || isPublishing,\n                      className: \"btn btn-primary btn-large\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"16\",\n                        height: \"16\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M22 2L11 13\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1884,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n                          points: \"22,2 15,22 11,13 2,9\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1885,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1883,\n                        columnNumber: 31\n                      }, this), isPublishing ? 'Publishing...' : 'Publish Post']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1878,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1877,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1745,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-history\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"post-history-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: [\"AI Generated Posts (\", autoPostHistory.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1894,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: loadPostHistory,\n                      disabled: isLoadingPosts,\n                      className: \"btn btn-secondary btn-small\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"14\",\n                        height: \"14\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M23 4v6h-6\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1901,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1902,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1900,\n                        columnNumber: 31\n                      }, this), \"Refresh\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1895,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1893,\n                    columnNumber: 27\n                  }, this), isLoadingPosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"loading-posts\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"24\",\n                      height: \"24\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M21 12a9 9 0 11-6.219-8.56\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1910,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1909,\n                      columnNumber: 31\n                    }, this), \"Loading posts...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1908,\n                    columnNumber: 29\n                  }, this) : autoPostHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"posts-list\",\n                    children: autoPostHistory.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"post-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"post-content\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: post.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1919,\n                          columnNumber: 37\n                        }, this), post.media_urls && post.media_urls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"post-media\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: post.media_urls[0],\n                            alt: \"Post media\",\n                            className: \"post-image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1922,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1921,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1918,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"post-meta\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"post-date\",\n                          children: new Date(post.created_at || post.next_execution).toLocaleDateString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1927,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `post-status ${post.status}`,\n                          children: post.status\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1930,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1926,\n                        columnNumber: 35\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1917,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1915,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-posts\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"48\",\n                      height: \"48\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"1\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1938,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1937,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No AI generated posts yet. Create your first post!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1940,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1936,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1892,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), activeTab === 'manual' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"manual-post-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Manual Post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1950,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Post Message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1954,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      name: \"message\",\n                      value: manualFormData.message,\n                      onChange: handleManualInputChange,\n                      placeholder: \"What's on your mind?\",\n                      className: \"form-textarea\",\n                      rows: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1955,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1953,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Media Options\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1967,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"media-options\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: `media-option ${manualFormData.mediaType === 'none' ? 'active' : ''}`,\n                        onClick: () => handleMediaTypeChange('none', 'manual'),\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1975,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                            points: \"14,2 14,8 20,8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1976,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                            x1: \"16\",\n                            y1: \"13\",\n                            x2: \"8\",\n                            y2: \"13\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1977,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                            x1: \"16\",\n                            y1: \"17\",\n                            x2: \"8\",\n                            y2: \"17\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1978,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                            points: \"10,9 9,9 8,9\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1979,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1974,\n                          columnNumber: 33\n                        }, this), \"Text Only\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1969,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: `media-option ${manualFormData.mediaType === 'photo' ? 'active' : ''}`,\n                        onClick: () => handleMediaTypeChange('photo', 'manual'),\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                            x: \"3\",\n                            y: \"3\",\n                            width: \"18\",\n                            height: \"18\",\n                            rx: \"2\",\n                            ry: \"2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1989,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                            cx: \"8.5\",\n                            cy: \"8.5\",\n                            r: \"1.5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1990,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                            points: \"21,15 16,10 5,21\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1991,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1988,\n                          columnNumber: 33\n                        }, this), \"Upload Photo\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1983,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: `media-option ${manualFormData.mediaType === 'video' ? 'active' : ''}`,\n                        onClick: () => handleMediaTypeChange('video', 'manual'),\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          width: \"16\",\n                          height: \"16\",\n                          viewBox: \"0 0 24 24\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n                            points: \"23,7 16,12 23,17 23,7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2001,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                            x: \"1\",\n                            y: \"5\",\n                            width: \"15\",\n                            height: \"14\",\n                            rx: \"2\",\n                            ry: \"2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2002,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2000,\n                          columnNumber: 33\n                        }, this), \"Upload Video\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1995,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1968,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1966,\n                    columnNumber: 27\n                  }, this), manualFormData.mediaType === 'photo' && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Upload Photo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2012,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      name: \"mediaFile\",\n                      accept: \"image/*\",\n                      onChange: handleManualInputChange,\n                      className: \"form-file-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2013,\n                      columnNumber: 31\n                    }, this), manualFormData.mediaFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"image-preview\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: URL.createObjectURL(manualFormData.mediaFile),\n                        alt: \"Preview\",\n                        className: \"preview-image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2022,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2021,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2011,\n                    columnNumber: 29\n                  }, this), manualFormData.mediaType === 'video' && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Upload Video\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2035,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      name: \"mediaFile\",\n                      accept: \"video/*\",\n                      onChange: handleManualInputChange,\n                      className: \"form-file-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2036,\n                      columnNumber: 31\n                    }, this), manualFormData.mediaFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"video-preview\",\n                      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                        src: URL.createObjectURL(manualFormData.mediaFile),\n                        controls: true,\n                        className: \"preview-video\",\n                        style: {\n                          maxWidth: '100%',\n                          maxHeight: '300px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2045,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"video-info\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"File: \", manualFormData.mediaFile.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2052,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Size: \", (manualFormData.mediaFile.size / (1024 * 1024)).toFixed(2), \" MB\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2053,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2051,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2044,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2034,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: publishPost,\n                      disabled: !manualFormData.message.trim() || isPublishing,\n                      className: \"btn btn-primary btn-large\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"16\",\n                        height: \"16\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M22 2L11 13\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2068,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n                          points: \"22,2 15,22 11,13 2,9\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2069,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2067,\n                        columnNumber: 31\n                      }, this), isPublishing ? 'Publishing...' : 'Publish Post']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2062,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2061,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1949,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-history\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"post-history-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: [\"Manual Posts (\", manualPostHistory.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2078,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: loadPostHistory,\n                      disabled: isLoadingPosts,\n                      className: \"btn btn-secondary btn-small\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        width: \"14\",\n                        height: \"14\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M23 4v6h-6\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2085,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2086,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2084,\n                        columnNumber: 31\n                      }, this), \"Refresh\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2079,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2077,\n                    columnNumber: 27\n                  }, this), isLoadingPosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"loading-posts\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"24\",\n                      height: \"24\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M21 12a9 9 0 11-6.219-8.56\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2094,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2093,\n                      columnNumber: 31\n                    }, this), \"Loading posts...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2092,\n                    columnNumber: 29\n                  }, this) : manualPostHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"posts-list\",\n                    children: manualPostHistory.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"post-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"post-content\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: post.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2103,\n                          columnNumber: 37\n                        }, this), post.media_urls && post.media_urls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"post-media\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: post.media_urls[0],\n                            alt: \"Post media\",\n                            className: \"post-image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2106,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2105,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2102,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"post-meta\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"post-date\",\n                          children: new Date(post.created_at || post.next_execution).toLocaleDateString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2111,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `post-status ${post.status}`,\n                          children: post.status\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2114,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2110,\n                        columnNumber: 35\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2101,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2099,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-posts\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"48\",\n                      height: \"48\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"1\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2122,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2121,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No manual posts yet. Create your first post!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2124,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2120,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2076,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), activeTab === 'bulk' && showBulkComposer && /*#__PURE__*/_jsxDEV(BulkComposer, {\n                selectedPage: selectedPage,\n                availablePages: availablePages,\n                onPageChange: setSelectedPage,\n                onClose: () => {\n                  setShowBulkComposer(false);\n                  setActiveTab('auto');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2132,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1675,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1616,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1494,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 7\n    }, this), showFilePicker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: closeFilePicker,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Select \", filePickerType === 'photo' ? 'Photo' : 'Video']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeFilePicker,\n            className: \"modal-close\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"18\",\n                y1: \"6\",\n                x2: \"6\",\n                y2: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"6\",\n                y1: \"6\",\n                x2: \"18\",\n                y2: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-picker-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-option\",\n              onClick: () => document.getElementById('local-file-input').click(),\n              onTouchStart: e => e.preventDefault(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"32\",\n                  height: \"32\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2172,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"14,2 14,8 20,8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2173,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"16\",\n                    y1: \"13\",\n                    x2: \"8\",\n                    y2: \"13\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2174,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"16\",\n                    y1: \"17\",\n                    x2: \"8\",\n                    y2: \"17\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"10,9 9,9 8,9\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2176,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Local System\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select a file from your computer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2181,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `file-option ${!googleDriveAvailable ? 'disabled' : ''}`,\n              onClick: handleGoogleDriveSelect,\n              onTouchStart: e => {\n                if (!googleDriveAvailable) {\n                  e.preventDefault();\n                  return;\n                }\n                e.preventDefault();\n                handleGoogleDriveSelect();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"32\",\n                  height: \"32\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2199,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"9,22 9,12 15,12 15,22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2200,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2198,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-option-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Google Drive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: googleDriveAvailable ? 'Select a file from your Google Drive' : 'Google Drive not configured. See setup guide.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2205,\n                  columnNumber: 21\n                }, this), isLoadingGoogleDrive && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 12a9 9 0 11-6.219-8.56\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2214,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2213,\n                    columnNumber: 25\n                  }, this), \"Loading...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2212,\n                  columnNumber: 23\n                }, this), !googleDriveAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unavailable-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2222,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"15\",\n                      y1: \"9\",\n                      x2: \"9\",\n                      y2: \"15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2223,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"9\",\n                      y1: \"9\",\n                      x2: \"15\",\n                      y2: \"15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2224,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2221,\n                    columnNumber: 25\n                  }, this), \"Not Available\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2220,\n                  columnNumber: 23\n                }, this), googleDriveAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"drive-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"debug-drive-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      debugGoogleDrive();\n                    },\n                    title: \"Debug Google Drive\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"14\",\n                      height: \"14\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"12\",\n                        cy: \"12\",\n                        r: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2240,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"12\",\n                        y1: \"8\",\n                        x2: \"12\",\n                        y2: \"12\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2241,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"12\",\n                        cy: \"16\",\n                        r: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2242,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2239,\n                      columnNumber: 27\n                    }, this), \"Debug\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2231,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"test-images-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      testGoogleDriveImages();\n                    },\n                    title: \"Test Images/Videos\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"14\",\n                      height: \"14\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                        x: \"3\",\n                        y: \"3\",\n                        width: \"18\",\n                        height: \"18\",\n                        rx: \"2\",\n                        ry: \"2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2255,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"8.5\",\n                        cy: \"8.5\",\n                        r: \"1.5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2256,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                        points: \"21,15 16,10 5,21\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2257,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2254,\n                      columnNumber: 27\n                    }, this), \"Test Images\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2246,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"clear-tokens-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      clearGoogleDriveTokens();\n                    },\n                    title: \"Clear Google Drive Tokens\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"14\",\n                      height: \"14\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M3 6h18\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2270,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2271,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2272,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2269,\n                      columnNumber: 27\n                    }, this), \"Clear\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2261,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"disconnect-drive-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      disconnectGoogleDrive();\n                    },\n                    title: \"Disconnect Google Drive\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"14\",\n                      height: \"14\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"18\",\n                        y1: \"6\",\n                        x2: \"6\",\n                        y2: \"18\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2285,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"6\",\n                        y1: \"6\",\n                        x2: \"18\",\n                        y2: \"18\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2286,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2284,\n                      columnNumber: 27\n                    }, this), \"Disconnect\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2276,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2230,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2203,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"local-file-input\",\n            type: \"file\",\n            accept: filePickerType === 'photo' ? 'image/*' : 'video/*',\n            onChange: handleLocalFileSelect,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1414,\n    columnNumber: 5\n  }, this);\n}\n_s(FacebookPage, \"Qh1Joh7kVzH7OG6QjFBlZApKJCw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = FacebookPage;\nexport default FacebookPage;\nvar _c;\n$RefreshReg$(_c, \"FacebookPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useAuth","apiClient","fileToBase64","loadFacebookSDK","BulkComposer","jsxDEV","_jsxDEV","Fragment","_Fragment","FacebookPage","_s","_selectedPage$followe","_autoReplyMessageRule","navigate","logout","isConnecting","setIsConnecting","connectionStatus","setConnectionStatus","selectedPage","setSelectedPage","availablePages","setAvailablePages","facebookConnected","setFacebookConnected","activeTab","setActiveTab","isLoggingOut","setIsLoggingOut","isCheckingStatus","setIsCheckingStatus","autoFormData","setAutoFormData","prompt","mediaType","mediaFile","generatedContent","isGenerating","imagePrompt","generatedImageUrl","generatedImageFilename","isGeneratingImage","manualFormData","setManualFormData","message","isPublishing","setIsPublishing","autoPostHistory","setAutoPostHistory","manualPostHistory","setManualPostHistory","isLoadingPosts","setIsLoadingPosts","showBulkComposer","setShowBulkComposer","showAutomate","setShowAutomate","autoReplyMessagesEnabled","setAutoReplyMessagesEnabled","autoReplyMessagesLoading","setAutoReplyMessagesLoading","autoReplyMessagesError","setAutoReplyMessagesError","showFilePicker","setShowFilePicker","filePickerType","setFilePickerType","filePickerFormType","setFilePickerFormType","isLoadingGoogleDrive","setIsLoadingGoogleDrive","googleDriveAvailable","setGoogleDriveAvailable","scheduleData","setScheduleData","time","frequency","customDate","isActive","scheduleId","autoReplyMessageRule","setAutoReplyMessageRule","autoReplySettings","setAutoReplySettings","enabled","template","ruleId","selectedPostIds","FACEBOOK_APP_ID","process","env","REACT_APP_FACEBOOK_APP_ID","isMobile","window","innerWidth","loadAutoReplySettings","console","log","id","name","rules","getAutomationRules","socialAccounts","getSocialAccounts","facebookAccounts","filter","acc","platform","is_connected","matchingAccount","find","platform_user_id","autoReplyRule","rule","social_account_id","_autoReplyRule$action3","_autoReplyRule$action4","prev","_autoReplyRule$action","_autoReplyRule$action2","is_active","actions","response_template","selected_post_ids","error","checkExistingFacebookConnections","response","getFacebookStatus","connected","accountsError","warn","pagesFromBackend","accounts","pages","map","page","platform_id","internalId","category","access_token","profilePicture","profile_picture","canPost","can_post","canComment","can_comment","followerCount","follower_count","length","pages_count","checkGoogleDriveAvailability","handleResize","addEventListener","removeEventListener","authenticated","getGoogleDriveStatus","debugGoogleDrive","debugInfo","total_files_found","testGoogleDriveImages","testInfo","image_count","video_count","disconnectGoogleDrive","clearGoogleDriveTokens","openDriveAuthPopup","authUrl","Promise","resolve","reject","w","Math","min","h","innerHeight","left","outerWidth","top","outerHeight","popup","open","Error","resolved","messageHandler","event","data","success","clearInterval","timer","setInterval","closed","e","setTimeout","close","loadPostHistory","getSocialPosts","posts","slice","sort","a","b","Date","created_at","next_execution","topPosts","_","index","handleFacebookLogout","safeScheduleData","confirmDisconnect","confirm","deleteScheduledPost","scheduleError","logoutFacebook","fetchPages","accessToken","mappedPages","userInfo","_permissionsResponse$","permissionsResponse","FB","api","grantedPermissions","p","status","permission","requiredPermissions","missingPermissions","includes","join","fields","pagesResponse","code","_page$picture","_page$picture$data","tasks","picture","url","fan_count","connectToBackend","_response$data","_response$data$data","connectFacebook","token_type","expiresAt","token_expires_at","expiryDate","toLocaleDateString","updatedPages","_error$response","_error$response2","_error$response2$data","_error$response2$data2","detail","_error$response3","_error$response3$data","handleAutoInputChange","value","files","target","handleManualInputChange","handleMediaTypeChange","type","formType","openFilePicker","closeFilePicker","handleLocalFileSelect","file","setFormData","handleGoogleDriveSelect","authResponse","getGoogleDriveAuthorizeUrl","consent_url","finalStatus","retries","loadGoogleDriveAPI","google","picker","tokenResponse","getGoogleDriveToken","mimeTypes","docsView","DocsView","ViewId","DOCS","setIncludeFolders","setSelectFolderEnabled","setMode","DocsViewMode","LIST","setMimeTypes","PickerBuilder","addView","setOAuthToken","setDeveloperKey","REACT_APP_GOOGLE_DEVELOPER_KEY","setCallback","handleGoogleDriveCallback","setTitle","setOrigin","location","origin","setSize","build","developerKey","setVisible","clearError","script","document","createElement","src","onload","gapi","load","callback","onerror","querySelector","head","appendChild","action","Action","PICKED","docs","mimeType","size","sizeBytes","fileResponse","downloadGoogleDriveFile","fileName","fileContent","binaryString","atob","bytes","Uint8Array","i","charCodeAt","blob","Blob","fileObj","File","CANCEL","LOADED","fileId","generatePostContent","trim","generateContent","content","generateImage","currentData","generateFacebookImage","image_url","filename","generateImageWithCaption","textResponse","imageResponse","publishPost","isAutoMode","substring","_postOptions$textCont","postResult","postOptions","postType","textContent","contentPrompt","useAIText","imageUrl","imageFilename","useAIImage","imageData","videoData","videoUrl","videoFilename","Object","keys","createFacebookPost","loginWithFacebook","protocol","hostname","getCurrentUser","login","_backendResponse$data","backendResponse","pages_connected","existingAccounts","facebookPages","account_type","backendMappedPages","_page$platform_data","_page$platform_data2","_page$platform_data3","display_name","platform_data","profile_picture_url","backendError","scope","enable_profile_selector","return_scopes","auth_type","display","getStatusCardClass","loadAutoReplyMessageRule","r","err","handleAutoReplyMessagesToggle","updated","updateAutomationRule","className","children","width","height","viewBox","fill","d","_jsxFileName","lineNumber","columnNumber","onClick","disabled","stroke","strokeWidth","points","x1","y1","x2","y2","alt","onChange","cx","cy","toLocaleString","style","alignItems","gap","htmlFor","title","cursor","marginLeft","verticalAlign","checked","accentColor","color","fontWeight","marginTop","background","borderRadius","padding","fontStyle","message_template","fontSize","placeholder","rows","readOnly","x","y","rx","ry","post","media_urls","accept","URL","createObjectURL","controls","maxWidth","maxHeight","toFixed","onPageChange","onClose","stopPropagation","getElementById","click","onTouchStart","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/THORSIGNIA/Projects/automation-dash/frontend/src/components/FacebookPage.js"],"sourcesContent":["/* eslint-disable no-undef */\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport apiClient from '../services/apiClient';\r\nimport { fileToBase64, loadFacebookSDK } from './FacebookUtils';\r\nimport BulkComposer from './BulkComposer';\r\nimport './FacebookPage.css';\r\n\r\nfunction FacebookPage() {\r\n  const navigate = useNavigate();\r\n  const { logout } = useAuth();\r\n  \r\n  // Core state\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('');\r\n  const [selectedPage, setSelectedPage] = useState(null);\r\n  const [availablePages, setAvailablePages] = useState([]);\r\n  const [facebookConnected, setFacebookConnected] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('auto');\r\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n  const [isCheckingStatus, setIsCheckingStatus] = useState(true);\r\n  \r\n  // Form states\r\n  const [autoFormData, setAutoFormData] = useState({\r\n    prompt: '',\r\n    mediaType: 'none',\r\n    mediaFile: null,\r\n    generatedContent: '',\r\n    isGenerating: false,\r\n    imagePrompt: '',\r\n    generatedImageUrl: null,\r\n    generatedImageFilename: null,\r\n    isGeneratingImage: false\r\n  });\r\n  \r\n  const [manualFormData, setManualFormData] = useState({\r\n    message: '',\r\n    mediaType: 'none',\r\n    mediaFile: null\r\n  });\r\n\r\n  // UI states\r\n  const [isPublishing, setIsPublishing] = useState(false);\r\n  const [autoPostHistory, setAutoPostHistory] = useState([]);\r\n  const [manualPostHistory, setManualPostHistory] = useState([]);\r\n  const [isLoadingPosts, setIsLoadingPosts] = useState(false);\r\n\r\n  const [showBulkComposer, setShowBulkComposer] = useState(false);\r\n  const [showAutomate, setShowAutomate] = useState(false); // <-- Add this line\r\n  const [autoReplyMessagesEnabled, setAutoReplyMessagesEnabled] = useState(true); // Default ON\r\n  const [autoReplyMessagesLoading, setAutoReplyMessagesLoading] = useState(false);\r\n  const [autoReplyMessagesError, setAutoReplyMessagesError] = useState(null);\r\n\r\n  // File picker modal states\r\n  const [showFilePicker, setShowFilePicker] = useState(false);\r\n  const [filePickerType, setFilePickerType] = useState(''); // 'photo' or 'video'\r\n  const [filePickerFormType, setFilePickerFormType] = useState(''); // 'auto' or 'manual'\r\n  const [isLoadingGoogleDrive, setIsLoadingGoogleDrive] = useState(false);\r\n  const [googleDriveAvailable, setGoogleDriveAvailable] = useState(false);\r\n\r\n  // Add this state for scheduleData\r\n  const [scheduleData, setScheduleData] = useState({\r\n    prompt: '',\r\n    time: '',\r\n    frequency: 'daily',\r\n    customDate: '',\r\n    isActive: false,\r\n    scheduleId: null\r\n  });\r\n\r\n  // Add new state for auto-reply message rule\r\n  const [autoReplyMessageRule, setAutoReplyMessageRule] = useState(null);\r\n\r\n  // Add missing autoReplySettings state\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [autoReplySettings, setAutoReplySettings] = useState({\r\n    enabled: false,\r\n    template: 'Thank you for your comment! We appreciate your engagement. 😊',\r\n    ruleId: null,\r\n    selectedPostIds: []\r\n  });\r\n\r\n  const FACEBOOK_APP_ID = process.env.REACT_APP_FACEBOOK_APP_ID || '697225659875731';\r\n\r\n  // Mobile detection utility\r\n  const isMobile = () => window.innerWidth <= 768;\r\n\r\n  const loadAutoReplySettings = useCallback(async () => {\r\n    if (!selectedPage) return;\r\n    \r\n    try {\r\n      console.log('🔄 Loading auto-reply settings for page:', selectedPage.id, selectedPage.name);\r\n      \r\n      // Get automation rules for Facebook auto-reply\r\n      const rules = await apiClient.getAutomationRules('facebook', 'AUTO_REPLY');\r\n      console.log('📋 Found automation rules:', rules);\r\n      \r\n      // Get social accounts to match with the selected page\r\n      const socialAccounts = await apiClient.getSocialAccounts();\r\n      const facebookAccounts = socialAccounts.filter(acc => \r\n        acc.platform === 'facebook' && acc.is_connected\r\n      );\r\n      console.log('👥 Facebook accounts:', facebookAccounts);\r\n      \r\n      // Find the social account that matches the selected page\r\n      const matchingAccount = facebookAccounts.find(acc => \r\n        acc.platform_user_id === selectedPage.id\r\n      );\r\n      console.log('🎯 Matching account:', matchingAccount);\r\n      \r\n      if (matchingAccount) {\r\n        // Find the auto-reply rule for this specific social account\r\n        const autoReplyRule = rules.find(rule => \r\n          rule.social_account_id === matchingAccount.id\r\n        );\r\n        console.log('🤖 Auto-reply rule found:', autoReplyRule);\r\n        \r\n        if (autoReplyRule) {\r\n          setAutoReplySettings(prev => ({\r\n            ...prev,\r\n            enabled: autoReplyRule.is_active,\r\n            template: autoReplyRule.actions?.response_template || prev.template,\r\n            ruleId: autoReplyRule.id,\r\n            selectedPostIds: autoReplyRule.actions?.selected_post_ids || []\r\n          }));\r\n          console.log('✅ Auto-reply settings loaded:', {\r\n            enabled: autoReplyRule.is_active,\r\n            template: autoReplyRule.actions?.response_template,\r\n            ruleId: autoReplyRule.id,\r\n            selectedPostIds: autoReplyRule.actions?.selected_post_ids\r\n          });\r\n        } else {\r\n          // Reset to default state if no rule found\r\n          setAutoReplySettings(prev => ({\r\n            ...prev,\r\n            enabled: false,\r\n            template: 'Thank you for your comment! We appreciate your engagement. 😊',\r\n            ruleId: null,\r\n            selectedPostIds: []\r\n          }));\r\n          console.log('❌ No auto-reply rule found, using defaults');\r\n        }\r\n      } else {\r\n        // No matching account found, reset to default\r\n        setAutoReplySettings(prev => ({\r\n          ...prev,\r\n          enabled: false,\r\n          template: 'Thank you for your comment! We appreciate your engagement. 😊',\r\n          ruleId: null,\r\n          selectedPostIds: []\r\n        }));\r\n        console.log('❌ No matching account found, using defaults');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error loading auto-reply settings:', error);\r\n      // Keep current state on error\r\n    }\r\n  }, [selectedPage]);\r\n\r\n  const checkExistingFacebookConnections = useCallback(async () => {\r\n    try {\r\n      setIsCheckingStatus(true);\r\n      const response = await apiClient.getFacebookStatus();\r\n      \r\n      if (response.connected) {\r\n        setFacebookConnected(true);\r\n        \r\n        let socialAccounts = [];\r\n        let facebookAccounts = [];\r\n        \r\n        try {\r\n          socialAccounts = await apiClient.getSocialAccounts();\r\n          facebookAccounts = socialAccounts.filter(acc => \r\n            acc.platform === 'facebook' && acc.is_connected\r\n          );\r\n        } catch (accountsError) {\r\n          console.warn('Failed to fetch social accounts:', accountsError);\r\n        }\r\n        \r\n        const pagesFromBackend = response.accounts.pages.map(page => {\r\n          const matchingAccount = facebookAccounts.find(acc => \r\n            acc.platform_user_id === page.platform_id\r\n          );\r\n          \r\n          return {\r\n            id: page.platform_id,\r\n            internalId: matchingAccount?.id,\r\n            name: page.name,\r\n            category: page.category,\r\n            access_token: '',\r\n            profilePicture: page.profile_picture || '',\r\n            canPost: page.can_post,\r\n            canComment: page.can_comment,\r\n            followerCount: page.follower_count\r\n          };\r\n        });\r\n        \r\n        setAvailablePages(pagesFromBackend);\r\n        \r\n        if (pagesFromBackend.length === 1) {\r\n          setSelectedPage(pagesFromBackend[0]);\r\n          // Auto-reply settings will be loaded by the useEffect when selectedPage changes\r\n        }\r\n        \r\n        setConnectionStatus(`Connected! ${response.pages_count} Facebook page(s) available.`);\r\n      } else {\r\n        setConnectionStatus('Ready to connect your Facebook account');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking Facebook status:', error);\r\n      setConnectionStatus('Unable to check Facebook connection status');\r\n    } finally {\r\n      setIsCheckingStatus(false);\r\n    }\r\n  }, []);\r\n\r\n  // Check for existing Facebook connections on component mount\r\n  useEffect(() => {\r\n    checkExistingFacebookConnections();\r\n    checkGoogleDriveAvailability();\r\n    \r\n    // Add mobile-specific event listeners\r\n    const handleResize = () => {\r\n      // Force re-render on resize for mobile responsiveness\r\n      setConnectionStatus(prev => prev);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [checkExistingFacebookConnections]);\r\n\r\n  // Cleanup on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsConnecting(false);\r\n      setIsPublishing(false);\r\n      setIsLoggingOut(false);\r\n      setIsCheckingStatus(false);\r\n    };\r\n  }, []);\r\n\r\n  const checkGoogleDriveAvailability = async () => {\r\n    try {\r\n      const { authenticated } = await apiClient.getGoogleDriveStatus();\r\n      setGoogleDriveAvailable(authenticated);\r\n    } catch (error) {\r\n      console.warn('Drive status check failed:', error.message);\r\n      setGoogleDriveAvailable(false);\r\n    }\r\n  };\r\n\r\n  const debugGoogleDrive = async () => {\r\n    try {\r\n      console.log('🔍 Testing Google Drive connectivity...');\r\n      const debugInfo = await apiClient.debugGoogleDrive();\r\n      console.log('🔍 Google Drive Debug Info:', debugInfo);\r\n      setConnectionStatus(`Google Drive Debug: ${debugInfo.message} - Found ${debugInfo.total_files_found} files`);\r\n    } catch (error) {\r\n      console.error('🔍 Google Drive Debug Error:', error);\r\n      setConnectionStatus(`Google Drive Debug Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const testGoogleDriveImages = async () => {\r\n    try {\r\n      console.log('🖼️ Testing Google Drive images/videos...');\r\n      const testInfo = await apiClient.testGoogleDriveImages();\r\n      console.log('🖼️ Google Drive Image/Video Test:', testInfo);\r\n      setConnectionStatus(`Image/Video Test: ${testInfo.image_count} images, ${testInfo.video_count} videos found`);\r\n    } catch (error) {\r\n      console.error('🖼️ Google Drive Image/Video Test Error:', error);\r\n      setConnectionStatus(`Image/Video Test Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const disconnectGoogleDrive = async () => {\r\n    try {\r\n      await apiClient.disconnectGoogleDrive();\r\n      setGoogleDriveAvailable(false);\r\n      setConnectionStatus('Google Drive disconnected successfully!');\r\n    } catch (error) {\r\n      console.error('Error disconnecting Google Drive:', error);\r\n      setConnectionStatus(`Failed to disconnect Google Drive: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const clearGoogleDriveTokens = async () => {\r\n    try {\r\n      await apiClient.clearGoogleDriveTokens();\r\n      setGoogleDriveAvailable(false);\r\n      setConnectionStatus('Google Drive tokens cleared successfully! Please reconnect.');\r\n    } catch (error) {\r\n      console.error('Error clearing Google Drive tokens:', error);\r\n      setConnectionStatus(`Failed to clear Google Drive tokens: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const openDriveAuthPopup = (authUrl) => {\r\n    return new Promise((resolve, reject) => {\r\n      // Mobile-friendly popup sizing\r\n      const isMobile = window.innerWidth <= 768;\r\n      const w = isMobile ? Math.min(400, window.innerWidth - 40) : 500;\r\n      const h = isMobile ? Math.min(600, window.innerHeight - 40) : 600;\r\n      const left = (window.outerWidth - w) / 2;\r\n      const top = (window.outerHeight - h) / 2;\r\n\r\n      const popup = window.open(\r\n        authUrl,\r\n        'DriveAuth',\r\n        `width=${w},height=${h},left=${left},top=${top},scrollbars=yes,resizable=yes`\r\n      );\r\n\r\n      if (!popup) {\r\n        reject(new Error('Popup blocked'));\r\n        return;\r\n      }\r\n\r\n      let resolved = false;\r\n      \r\n      // Listen for messages from the popup\r\n      const messageHandler = (event) => {\r\n        // Be more permissive with origins due to Google's OAuth flow\r\n        if (!event.data || resolved) return;\r\n        \r\n        if (event.data.success) {\r\n          resolved = true;\r\n          window.removeEventListener('message', messageHandler);\r\n          clearInterval(timer);\r\n          resolve();\r\n        } else if (event.data.error) {\r\n          resolved = true;\r\n          window.removeEventListener('message', messageHandler);\r\n          clearInterval(timer);\r\n          reject(new Error(event.data.error));\r\n        }\r\n      };\r\n\r\n      window.addEventListener('message', messageHandler);\r\n\r\n      // Poll for popup closure as fallback (with Cross-Origin-Opener-Policy handling)\r\n      const timer = setInterval(() => {\r\n        try {\r\n          if (popup.closed) {\r\n            if (!resolved) {\r\n              resolved = true;\r\n              clearInterval(timer);\r\n              window.removeEventListener('message', messageHandler);\r\n              // Don't assume success immediately - let the main function handle retries\r\n              resolve();\r\n            }\r\n          }\r\n        } catch (e) {\r\n          // Cross-Origin-Opener-Policy may prevent accessing popup.closed\r\n          // In this case, assume the popup process is ongoing\r\n          console.warn('Cannot check popup status due to Cross-Origin-Opener-Policy:', e);\r\n        }\r\n      }, 1000); // Increased interval to 1 second\r\n\r\n      // Timeout after 60 seconds\r\n      setTimeout(() => {\r\n        if (!resolved) {\r\n          resolved = true;\r\n          clearInterval(timer);\r\n          window.removeEventListener('message', messageHandler);\r\n          try {\r\n            popup.close();\r\n          } catch (e) {\r\n            // Ignore errors when closing popup\r\n          }\r\n          reject(new Error('Authentication timeout. Please try again.'));\r\n        }\r\n      }, 60000);\r\n    });\r\n  };\r\n\r\n  const loadPostHistory = useCallback(async () => {\r\n    if (!selectedPage) return;\r\n    try {\r\n      setIsLoadingPosts(true);\r\n      // Pass selectedPage.internalId to filter by page/account\r\n      const response = await apiClient.getSocialPosts('facebook', 50, selectedPage.internalId);\r\n      // Sort posts by created_at or next_execution descending (newest first)\r\n      const posts = response\r\n        .slice(0, 50)\r\n        .sort((a, b) => new Date(b.created_at || b.next_execution) - new Date(a.created_at || a.next_execution));\r\n      const topPosts = posts.slice(0, 10);\r\n      setAutoPostHistory(topPosts.filter((_, index) => index % 2 === 0));\r\n      setManualPostHistory(topPosts.filter((_, index) => index % 2 === 1));\r\n      // Note: schedulePostHistory is now managed by loadScheduledPosts()\r\n    } catch (error) {\r\n      console.error('Error loading post history:', error);\r\n    } finally {\r\n      setIsLoadingPosts(false);\r\n    }\r\n  }, [selectedPage]);\r\n\r\n  // Load posts when page is selected or tab changes\r\n  useEffect(() => {\r\n    if (selectedPage && facebookConnected) {\r\n      loadPostHistory();\r\n      loadAutoReplySettings(); // Load auto-reply settings when page is selected\r\n    }\r\n  }, [selectedPage, facebookConnected, activeTab, loadPostHistory, loadAutoReplySettings]);\r\n\r\n\r\n\r\n  const handleFacebookLogout = async () => {\r\n    try {\r\n      // Ensure scheduleData is always defined\r\n      const safeScheduleData = scheduleData || {};\r\n\r\n      // Check for active schedules before disconnecting\r\n      if (selectedPage && safeScheduleData.isActive) {\r\n        const confirmDisconnect = window.confirm(\r\n          `⚠️ Warning: You have an active schedule for \"${selectedPage.name}\". Disconnecting will deactivate this schedule. Do you want to continue?`\r\n        );\r\n        \r\n        if (!confirmDisconnect) {\r\n          return;\r\n        }\r\n        \r\n        // Deactivate the schedule before disconnecting\r\n        try {\r\n          await apiClient.deleteScheduledPost(safeScheduleData.scheduleId);\r\n          console.log('✅ Schedule deactivated before disconnect');\r\n        } catch (scheduleError) {\r\n          console.warn('Failed to deactivate schedule before disconnect:', scheduleError);\r\n        }\r\n      }\r\n      \r\n      setIsLoggingOut(true);\r\n      setConnectionStatus('Disconnecting from Facebook...');\r\n      \r\n      await apiClient.logoutFacebook();\r\n      \r\n      setFacebookConnected(false);\r\n      setAvailablePages([]);\r\n      setSelectedPage(null);\r\n      setAutoPostHistory([]);\r\n      setManualPostHistory([]);\r\n      \r\n      // Reset schedule data\r\n      setScheduleData({\r\n        prompt: '',\r\n        time: '',\r\n        frequency: 'daily',\r\n        customDate: '',\r\n        isActive: false,\r\n        scheduleId: null\r\n      });\r\n      \r\n      setConnectionStatus('Successfully disconnected from Facebook');\r\n      \r\n      setTimeout(() => {\r\n        setConnectionStatus('Ready to connect your Facebook account');\r\n      }, 3000);\r\n      \r\n    } catch (error) {\r\n      console.error('Error logging out from Facebook:', error);\r\n      setConnectionStatus('Failed to disconnect from Facebook: ' + error.message);\r\n    } finally {\r\n      setIsLoggingOut(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const fetchPages = async (accessToken) => {\r\n    if (!accessToken) {\r\n      setConnectionStatus('No Facebook access token found. Please try reconnecting.');\r\n      setIsConnecting(false);\r\n      setFacebookConnected(false);\r\n      return { mappedPages: [], userInfo: null };\r\n    }\r\n    \r\n    try {\r\n      const permissionsResponse = await new Promise((resolve, reject) => {\r\n        window.FB.api('/me/permissions', { access_token: accessToken }, (response) => {\r\n          if (response.error) reject(new Error(response.error.message));\r\n          else resolve(response);\r\n        });\r\n      });\r\n      \r\n      const grantedPermissions = permissionsResponse.data?.filter(p => p.status === 'granted').map(p => p.permission) || [];\r\n      const requiredPermissions = ['pages_show_list', 'pages_manage_posts'];\r\n      const missingPermissions = requiredPermissions.filter(p => !grantedPermissions.includes(p));\r\n      \r\n      if (missingPermissions.length > 0) {\r\n        setConnectionStatus(`Missing permissions: ${missingPermissions.join(', ')}. Your app needs \"Pages API\" permissions.`);\r\n      }\r\n      \r\n      const userInfo = await new Promise((resolve, reject) => {\r\n        window.FB.api('/me', { access_token: accessToken, fields: 'id,name,email' }, (response) => {\r\n          if (response.error) reject(new Error(response.error.message));\r\n          else resolve(response);\r\n        });\r\n      });\r\n      \r\n      const pagesResponse = await new Promise((resolve, reject) => {\r\n        window.FB.api('/me/accounts', {\r\n          access_token: accessToken,\r\n          fields: 'id,name,category,access_token,picture,fan_count,tasks'\r\n        }, (response) => {\r\n          if (response.error) {\r\n            reject(new Error(`${response.error.message} (Code: ${response.error.code})`));\r\n          } else {\r\n            resolve(response);\r\n          }\r\n        });\r\n      });\r\n\r\n      const pages = pagesResponse.data || [];\r\n      const mappedPages = pages.map(page => {\r\n        const tasks = page.tasks || [];\r\n        const canPost = tasks.includes('CREATE_CONTENT') || tasks.includes('MANAGE');\r\n        const canComment = tasks.includes('MODERATE') || tasks.includes('MANAGE');\r\n        \r\n        return {\r\n          id: page.id,\r\n          internalId: null,\r\n          name: page.name,\r\n          category: page.category || 'Page',\r\n          access_token: page.access_token,\r\n          profilePicture: page.picture?.data?.url || '',\r\n          canPost: canPost,\r\n          canComment: canComment,\r\n          followerCount: page.fan_count || 0\r\n        };\r\n      });\r\n\r\n      setAvailablePages(mappedPages);\r\n      \r\n      if (mappedPages.length === 1) {\r\n        setSelectedPage(mappedPages[0]);\r\n        setConnectionStatus(`Connected successfully! 1 page found.`);\r\n        // Load auto-reply settings for the single page\r\n        setTimeout(() => loadAutoReplySettings(), 500);\r\n      } else if (mappedPages.length > 1) {\r\n        setSelectedPage(null);\r\n        setConnectionStatus(`Connected successfully! ${mappedPages.length} pages found. Please select a page below.`);\r\n      } else {\r\n        setSelectedPage({\r\n          id: userInfo.id,\r\n          internalId: null,\r\n          name: userInfo.name,\r\n          access_token: accessToken,\r\n          category: 'Personal Profile',\r\n          profilePicture: '',\r\n          canPost: true,\r\n          canComment: true,\r\n          followerCount: 0\r\n        });\r\n        setConnectionStatus('Connected as personal profile (no pages found).');\r\n        // Load auto-reply settings for personal profile\r\n        setTimeout(() => loadAutoReplySettings(), 500);\r\n      }\r\n      setFacebookConnected(true);\r\n      setIsConnecting(false);\r\n      return { mappedPages, userInfo };\r\n    } catch (error) {\r\n      console.error('Facebook API error:', error);\r\n      setConnectionStatus('Failed to get Facebook data: ' + (error.message || 'Unknown error'));\r\n      setIsConnecting(false);\r\n      setFacebookConnected(false);\r\n      return { mappedPages: [], userInfo: null };\r\n    }\r\n  };\r\n\r\n  const connectToBackend = async (accessToken, userInfo, pages) => {\r\n    try {\r\n      const response = await apiClient.connectFacebook(accessToken, userInfo.id, pages);\r\n      \r\n      if (response.data?.data?.token_type === 'long_lived_user_token') {\r\n        const expiresAt = response.data.data.token_expires_at;\r\n        if (expiresAt) {\r\n          const expiryDate = new Date(expiresAt);\r\n          setConnectionStatus(`Connected with long-lived token (expires: ${expiryDate.toLocaleDateString()})`);\r\n        } else {\r\n          setConnectionStatus('Connected with long-lived token');\r\n        }\r\n      }\r\n      \r\n      setTimeout(async () => {\r\n        try {\r\n          const socialAccounts = await apiClient.getSocialAccounts();\r\n          const facebookAccounts = socialAccounts.filter(acc => \r\n            acc.platform === 'facebook' && acc.is_connected\r\n          );\r\n          \r\n          const updatedPages = availablePages.map(page => {\r\n            const matchingAccount = facebookAccounts.find(acc => \r\n              acc.platform_user_id === page.id\r\n            );\r\n            return {\r\n              ...page,\r\n              internalId: matchingAccount?.id\r\n            };\r\n          });\r\n          \r\n          setAvailablePages(updatedPages);\r\n          \r\n          if (selectedPage) {\r\n            const matchingAccount = facebookAccounts.find(acc => \r\n              acc.platform_user_id === selectedPage.id\r\n            );\r\n            if (matchingAccount) {\r\n              setSelectedPage(prev => ({\r\n                ...prev,\r\n                internalId: matchingAccount.id\r\n              }));\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating page data with internal IDs:', error);\r\n          setConnectionStatus('Warning: Unable to get account details. You may need to reconnect Facebook for scheduling to work.');\r\n        }\r\n      }, 2000);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Backend connection error:', error);\r\n      \r\n      if (error.response?.status === 401) {\r\n        setConnectionStatus('Your session has expired. Please log out and log back in to connect Facebook.');\r\n        setTimeout(() => {\r\n          logout();\r\n          navigate('/');\r\n        }, 3000);\r\n      } else if (error.response?.data?.detail?.includes('long-lived token')) {\r\n        setConnectionStatus('Failed to get long-lived Facebook token. Please try reconnecting.');\r\n      } else {\r\n        setConnectionStatus('Failed to connect to backend: ' + (error.response?.data?.detail || error.message));\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleAutoInputChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    setAutoFormData(prev => ({\r\n      ...prev,\r\n      [name]: files ? files[0] : value\r\n    }));\r\n  };\r\n\r\n  const handleManualInputChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    setManualFormData(prev => ({\r\n      ...prev,\r\n      [name]: files ? files[0] : value\r\n    }));\r\n  };\r\n\r\n  const handleMediaTypeChange = (type, formType) => {\r\n    // If it's a file upload type, open the file picker\r\n    if (type === 'photo' || type === 'video') {\r\n      openFilePicker(type, formType);\r\n      return;\r\n    }\r\n    \r\n    // For other types (none, ai_image), set directly\r\n    if (formType === 'auto') {\r\n      setAutoFormData(prev => ({\r\n        ...prev,\r\n        mediaType: type,\r\n        mediaFile: null,\r\n        generatedImageUrl: type === 'ai_image' ? prev.generatedImageUrl : null,\r\n        generatedImageFilename: type === 'ai_image' ? prev.generatedImageFilename : null,\r\n        imagePrompt: type === 'ai_image' ? prev.imagePrompt : ''\r\n      }));\r\n    } else {\r\n      setManualFormData(prev => ({\r\n        ...prev,\r\n        mediaType: type,\r\n        mediaFile: null,\r\n        generatedImageUrl: type === 'ai_image' ? prev.generatedImageUrl : null,\r\n        generatedImageFilename: type === 'ai_image' ? prev.generatedImageFilename : null,\r\n        imagePrompt: type === 'ai_image' ? prev.imagePrompt : ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  // File picker functions\r\n  const openFilePicker = (type, formType) => {\r\n    setFilePickerType(type);\r\n    setFilePickerFormType(formType);\r\n    setShowFilePicker(true);\r\n  };\r\n\r\n  const closeFilePicker = () => {\r\n    setShowFilePicker(false);\r\n    setFilePickerType('');\r\n    setFilePickerFormType('');\r\n    setIsLoadingGoogleDrive(false);\r\n  };\r\n\r\n  const handleLocalFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const setFormData = filePickerFormType === 'auto' ? setAutoFormData : setManualFormData;\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        mediaFile: file,\r\n        mediaType: filePickerType // Set the media type based on what was selected\r\n      }));\r\n      closeFilePicker();\r\n    }\r\n  };\r\n\r\n  const handleGoogleDriveSelect = async () => {\r\n    setIsLoadingGoogleDrive(true);\r\n    try {\r\n      // 1️⃣ Check if already authenticated\r\n      const status = await apiClient.getGoogleDriveStatus();\r\n      if (!status.authenticated) {\r\n        // 2️⃣ Get consent URL for popup\r\n        const authResponse = await apiClient.getGoogleDriveAuthorizeUrl();\r\n        if (authResponse.consent_url) {\r\n          // 3️⃣ Open popup and wait for completion\r\n          await openDriveAuthPopup(authResponse.consent_url);\r\n          \r\n          // 4️⃣ Wait a bit for the OAuth callback to complete\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n        }\r\n      }\r\n\r\n      // 5️⃣ After popup closes, re-check authentication status with retries\r\n      let finalStatus = null;\r\n      let retries = 3;\r\n      \r\n      while (retries > 0) {\r\n        finalStatus = await apiClient.getGoogleDriveStatus();\r\n        if (finalStatus.authenticated) {\r\n          break;\r\n        }\r\n        \r\n        retries--;\r\n        if (retries > 0) {\r\n          // Wait before retrying\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n      \r\n      if (!finalStatus.authenticated) {\r\n        throw new Error('Authentication was not completed successfully. Please try again.');\r\n      }\r\n\r\n      // 6️⃣ Update state and proceed with Google Drive picker\r\n      setGoogleDriveAvailable(true);\r\n\r\n      // Initialize Google Drive API\r\n      await loadGoogleDriveAPI();\r\n      \r\n      // Check if google object is available\r\n      if (typeof window.google === 'undefined' || !window.google.picker) {\r\n        throw new Error('Google Picker API failed to load');\r\n      }\r\n      \r\n      // Get fresh token for picker\r\n      const tokenResponse = await apiClient.getGoogleDriveToken();\r\n      if (!tokenResponse.access_token) {\r\n        throw new Error('Failed to get Google Drive access token');\r\n      }\r\n      \r\n      // Configure MIME types based on file picker type\r\n      const mimeTypes = filePickerType === 'photo' \r\n        ? ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/bmp']\r\n        : ['video/mp4', 'video/avi', 'video/mov', 'video/wmv', 'video/flv', 'video/webm'];\r\n      \r\n      // Create the main view for Drive files\r\n      const docsView = new window.google.picker.DocsView(window.google.picker.ViewId.DOCS)\r\n        .setIncludeFolders(false)\r\n        .setSelectFolderEnabled(false)\r\n        .setMode(window.google.picker.DocsViewMode.LIST);\r\n      \r\n      // Set MIME types for filtering\r\n      if (filePickerType === 'photo') {\r\n        docsView.setMimeTypes('image/jpeg,image/png,image/gif,image/webp,image/bmp');\r\n      } else {\r\n        docsView.setMimeTypes('video/mp4,video/avi,video/mov,video/wmv,video/flv,video/webm');\r\n      }\r\n      \r\n      // Create picker with proper configuration\r\n      const picker = new window.google.picker.PickerBuilder()\r\n        .addView(docsView)\r\n        .setOAuthToken(tokenResponse.access_token)\r\n        .setDeveloperKey(process.env.REACT_APP_GOOGLE_DEVELOPER_KEY || '')\r\n        .setCallback(handleGoogleDriveCallback)\r\n        .setTitle(`Select a ${filePickerType === 'photo' ? 'photo' : 'video'} from Google Drive`)\r\n        .setOrigin(window.location.origin)\r\n        .setSize(1051, 650)  // Set a reasonable size\r\n        .build();\r\n      \r\n      console.log('🔍 Google Picker configuration:', {\r\n        mimeTypes: filePickerType === 'photo' ? 'image/*' : 'video/*',\r\n        accessToken: tokenResponse.access_token ? 'Present' : 'Missing',\r\n        developerKey: process.env.REACT_APP_GOOGLE_DEVELOPER_KEY ? 'Present' : 'Missing'\r\n      });\r\n      \r\n      picker.setVisible(true);\r\n      \r\n    } catch (error) {\r\n      console.error('Error with Google Drive selection:', error);\r\n      \r\n      // Handle scope conflicts specifically\r\n      if (error.message && error.message.includes('Scope has changed')) {\r\n        setConnectionStatus('Google Drive scope conflict detected. Clearing tokens and retrying...');\r\n        try {\r\n          await apiClient.clearGoogleDriveTokens();\r\n          setGoogleDriveAvailable(false);\r\n          setConnectionStatus('Google Drive tokens cleared. Please try connecting again.');\r\n        } catch (clearError) {\r\n          console.error('Error clearing tokens:', clearError);\r\n          setConnectionStatus('Failed to clear Google Drive tokens. Please disconnect and reconnect.');\r\n        }\r\n      } else {\r\n        setConnectionStatus(`Google Drive error: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setIsLoadingGoogleDrive(false);\r\n    }\r\n  };\r\n\r\n  const loadGoogleDriveAPI = () => {\r\n    return new Promise((resolve, reject) => {\r\n      // Check if Google Picker is already loaded\r\n      if (window.google && window.google.picker && window.google.picker.PickerBuilder) {\r\n        console.log('Google Picker API already loaded');\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      console.log('Loading Google Picker API...');\r\n      \r\n      // Load the Google API script\r\n      const script = document.createElement('script');\r\n      script.src = 'https://apis.google.com/js/api.js';\r\n      script.onload = () => {\r\n        if (window.gapi) {\r\n          console.log('Google API loaded, loading picker...');\r\n          window.gapi.load('picker', {\r\n            callback: () => {\r\n              if (window.google && window.google.picker) {\r\n                console.log('Google Picker loaded successfully');\r\n                resolve();\r\n              } else {\r\n                reject(new Error('Google Picker failed to initialize'));\r\n              }\r\n            },\r\n            onerror: () => {\r\n              reject(new Error('Failed to load Google Picker'));\r\n            }\r\n          });\r\n        } else {\r\n          reject(new Error('Google API (gapi) failed to load'));\r\n        }\r\n      };\r\n      script.onerror = () => {\r\n        reject(new Error('Failed to load Google API script'));\r\n      };\r\n      \r\n      // Only add script if it doesn't already exist\r\n      if (!document.querySelector('script[src=\"https://apis.google.com/js/api.js\"]')) {\r\n        document.head.appendChild(script);\r\n      } else {\r\n        // Script exists but API might not be loaded yet\r\n        setTimeout(() => {\r\n          if (window.gapi) {\r\n            window.gapi.load('picker', {\r\n              callback: resolve,\r\n              onerror: () => reject(new Error('Failed to load Google Picker'))\r\n            });\r\n          } else {\r\n            reject(new Error('Google API script loaded but gapi not available'));\r\n          }\r\n        }, 100);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const handleGoogleDriveCallback = async (data) => {\r\n    console.log('🔍 Google Drive Picker Callback:', data);\r\n    \r\n    if (data.action === window.google.picker.Action.PICKED) {\r\n      const file = data.docs[0];\r\n      console.log('📁 Selected file:', {\r\n        id: file.id,\r\n        name: file.name,\r\n        mimeType: file.mimeType,\r\n        size: file.sizeBytes,\r\n        url: file.url\r\n      });\r\n      \r\n      try {\r\n        setConnectionStatus('Downloading file from Google Drive...');\r\n        \r\n        // Download the file from Google Drive\r\n        const fileResponse = await downloadGoogleDriveFile(file.id);\r\n        console.log('📥 File download response:', {\r\n          success: fileResponse.success,\r\n          fileName: fileResponse.fileName,\r\n          mimeType: fileResponse.mimeType,\r\n          size: fileResponse.size\r\n        });\r\n        \r\n        if (!fileResponse.success || !fileResponse.fileContent) {\r\n          throw new Error('Invalid file response from server');\r\n        }\r\n        \r\n        // Decode base64 content\r\n        const binaryString = atob(fileResponse.fileContent);\r\n        const bytes = new Uint8Array(binaryString.length);\r\n        for (let i = 0; i < binaryString.length; i++) {\r\n          bytes[i] = binaryString.charCodeAt(i);\r\n        }\r\n        \r\n        // Create a File object from the downloaded content\r\n        const blob = new Blob([bytes], { \r\n          type: fileResponse.mimeType || file.mimeType \r\n        });\r\n        const fileObj = new File([blob], fileResponse.fileName || file.name, { \r\n          type: fileResponse.mimeType || file.mimeType \r\n        });\r\n        \r\n        console.log('📄 Created file object:', {\r\n          name: fileObj.name,\r\n          type: fileObj.type,\r\n          size: fileObj.size\r\n        });\r\n        \r\n        // Update the form data\r\n        const setFormData = filePickerFormType === 'auto' ? setAutoFormData : setManualFormData;\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          mediaFile: fileObj,\r\n          mediaType: filePickerType // Set the media type based on what was selected\r\n        }));\r\n        \r\n        closeFilePicker();\r\n        setConnectionStatus(`File \"${fileObj.name}\" selected from Google Drive successfully!`);\r\n      } catch (error) {\r\n        console.error('❌ Error downloading file from Google Drive:', error);\r\n        setConnectionStatus('Failed to download file from Google Drive: ' + error.message);\r\n      }\r\n    } else if (data.action === window.google.picker.Action.CANCEL) {\r\n      console.log('❌ Google Drive Picker cancelled');\r\n      closeFilePicker();\r\n    } else if (data.action === window.google.picker.Action.LOADED) {\r\n      console.log('✅ Google Drive Picker loaded');\r\n    } else {\r\n      console.log('🔍 Google Drive Picker action:', data.action);\r\n    }\r\n  };\r\n\r\n  const downloadGoogleDriveFile = async (fileId) => {\r\n    // This would typically be handled by your backend\r\n    // For now, we'll use a placeholder implementation\r\n    try {\r\n      const response = await apiClient.downloadGoogleDriveFile(fileId);\r\n      return response.fileContent;\r\n    } catch (error) {\r\n      throw new Error('Failed to download file from Google Drive');\r\n    }\r\n  };\r\n\r\n  const generatePostContent = async () => {\r\n    if (!autoFormData.prompt.trim()) {\r\n      setConnectionStatus('Please enter a prompt for AI generation');\r\n      return;\r\n    }\r\n\r\n    setAutoFormData(prev => ({ ...prev, isGenerating: true }));\r\n    setConnectionStatus('Generating content with AI...');\r\n\r\n    try {\r\n      const response = await apiClient.generateContent(autoFormData.prompt);\r\n      setAutoFormData(prev => ({\r\n        ...prev,\r\n        generatedContent: response.content,\r\n        isGenerating: false\r\n      }));\r\n      setConnectionStatus('Content generated successfully!');\r\n    } catch (error) {\r\n      console.error('Content generation error:', error);\r\n      setConnectionStatus('Failed to generate content: ' + (error.message || 'Unknown error'));\r\n      setAutoFormData(prev => ({ ...prev, isGenerating: false }));\r\n    }\r\n  };\r\n\r\n  const generateImage = async (formType) => {\r\n    const currentData = formType === 'auto' ? autoFormData : manualFormData;\r\n    const setFormData = formType === 'auto' ? setAutoFormData : setManualFormData;\r\n    \r\n    const imagePrompt = currentData.imagePrompt || currentData.prompt || (formType === 'manual' ? currentData.message : '');\r\n    \r\n    if (!imagePrompt.trim()) {\r\n      setConnectionStatus('Please enter an image prompt or description');\r\n      return;\r\n    }\r\n\r\n    setFormData(prev => ({ ...prev, isGeneratingImage: true }));\r\n    setConnectionStatus('Generating image with AI...');\r\n\r\n    try {\r\n      const response = await apiClient.generateFacebookImage(imagePrompt, 'feed');\r\n      \r\n      if (response.success) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          generatedImageUrl: response.data.image_url,\r\n          generatedImageFilename: response.data.filename,\r\n          isGeneratingImage: false\r\n        }));\r\n        setConnectionStatus('Image generated successfully!');\r\n      } else {\r\n        throw new Error(response.error || 'Image generation failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Image generation error:', error);\r\n      setConnectionStatus('Failed to generate image: ' + (error.message || 'Unknown error'));\r\n      setFormData(prev => ({ ...prev, isGeneratingImage: false }));\r\n    }\r\n  };\r\n\r\n  const generateImageWithCaption = async () => {\r\n    if (!autoFormData.prompt.trim()) {\r\n      setConnectionStatus('Please enter a prompt for generation');\r\n      return;\r\n    }\r\n\r\n    setAutoFormData(prev => ({ ...prev, isGenerating: true, isGeneratingImage: true }));\r\n    setConnectionStatus('Generating image and caption with AI...');\r\n\r\n    try {\r\n      const textResponse = await apiClient.generateContent(autoFormData.prompt);\r\n      \r\n      if (!textResponse.content) {\r\n        throw new Error('Failed to generate text content');\r\n      }\r\n\r\n      const imagePrompt = autoFormData.imagePrompt || autoFormData.prompt;\r\n      const imageResponse = await apiClient.generateFacebookImage(imagePrompt, 'feed');\r\n      \r\n      if (!imageResponse.success) {\r\n        throw new Error(imageResponse.error || 'Image generation failed');\r\n      }\r\n\r\n      setAutoFormData(prev => ({\r\n        ...prev,\r\n        generatedContent: textResponse.content,\r\n        generatedImageUrl: imageResponse.data.image_url,\r\n        generatedImageFilename: imageResponse.data.filename,\r\n        isGenerating: false,\r\n        isGeneratingImage: false\r\n      }));\r\n      \r\n      setConnectionStatus('Image and caption generated successfully!');\r\n    } catch (error) {\r\n      console.error('Image with caption generation error:', error);\r\n      setConnectionStatus('Failed to generate image and caption: ' + (error.message || 'Unknown error'));\r\n      setAutoFormData(prev => ({ ...prev, isGenerating: false, isGeneratingImage: false }));\r\n    }\r\n  };\r\n\r\n  const publishPost = async () => {\r\n    if (!selectedPage) {\r\n      setConnectionStatus('Please select a page first');\r\n      return;\r\n    }\r\n\r\n    const isAutoMode = activeTab === 'auto';\r\n    const content = isAutoMode ? autoFormData.generatedContent : manualFormData.message;\r\n    const mediaType = isAutoMode ? autoFormData.mediaType : manualFormData.mediaType;\r\n    const mediaFile = isAutoMode ? autoFormData.mediaFile : manualFormData.mediaFile;\r\n    const generatedImageUrl = isAutoMode ? autoFormData.generatedImageUrl : manualFormData.generatedImageUrl;\r\n    const generatedImageFilename = isAutoMode ? autoFormData.generatedImageFilename : manualFormData.generatedImageFilename;\r\n\r\n          // Debug: Log key info\r\n      console.log('Publish attempt - Tab:', activeTab, 'Content:', content?.substring(0, 50) + '...');\r\n      console.log('Media type:', mediaType);\r\n      console.log('Media file:', mediaFile);\r\n      console.log('Selected page:', selectedPage);\r\n\r\n    // Allow video-only posts (no text required for video posts)\r\n    if (!content || content.trim() === '') {\r\n      if (mediaType !== 'video') {\r\n        setConnectionStatus('Please enter some content for your post');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (mediaType === 'photo' && !mediaFile) {\r\n      setConnectionStatus('Please select a media file to upload');\r\n      return;\r\n    }\r\n\r\n    if (mediaType === 'video' && !mediaFile) {\r\n      setConnectionStatus('Please select a video file to upload');\r\n      return;\r\n    }\r\n\r\n    if (mediaType === 'ai_image' && (!generatedImageUrl || !generatedImageFilename)) {\r\n      setConnectionStatus('Please generate an image first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsPublishing(true);\r\n      setConnectionStatus('Publishing post to Facebook...');\r\n      \r\n      let postResult;\r\n      \r\n      // Use the unified Facebook post creation endpoint\r\n      const postOptions = {\r\n        postType: 'feed'\r\n      };\r\n\r\n      // Handle content based on mode\r\n      if (isAutoMode) {\r\n        // In auto mode, we might want to use AI generation\r\n        if (autoFormData.generatedContent) {\r\n          // Use pre-generated content\r\n          postOptions.textContent = autoFormData.generatedContent;\r\n        } else if (autoFormData.prompt) {\r\n          // Use prompt for AI generation\r\n          postOptions.contentPrompt = autoFormData.prompt;\r\n          postOptions.useAIText = true;\r\n        } else {\r\n          // Fallback to any content we have\r\n          postOptions.textContent = content;\r\n        }\r\n      } else {\r\n        // In manual mode, use the provided text content if available\r\n        if (content && content.trim()) {\r\n          postOptions.textContent = content;\r\n        }\r\n      }\r\n\r\n      // Debug: Log what we're sending\r\n      console.log('Post options:', { ...postOptions, textContent: postOptions.textContent?.substring(0, 50) + '...' });\r\n\r\n      if (mediaType === 'ai_image' && generatedImageUrl && generatedImageFilename) {\r\n        // Post with pre-generated image\r\n        postOptions.imageUrl = generatedImageUrl;\r\n        postOptions.imageFilename = generatedImageFilename;\r\n      } else if (mediaType === 'ai_image' && (autoFormData.imagePrompt || manualFormData.imagePrompt)) {\r\n        // Generate image using AI\r\n        const imagePrompt = isAutoMode ? autoFormData.imagePrompt : manualFormData.imagePrompt;\r\n        postOptions.imagePrompt = imagePrompt;\r\n        postOptions.useAIImage = true;\r\n      } else if (mediaType === 'photo' && mediaFile) {\r\n        // Post with uploaded image (convert to base64)\r\n        const imageData = await fileToBase64(mediaFile);\r\n        postOptions.imageUrl = imageData;\r\n      } else if (mediaType === 'video' && mediaFile) {\r\n        // Post with uploaded video (convert to base64)\r\n        try {\r\n          console.log('Converting video to base64...');\r\n          const videoData = await fileToBase64(mediaFile);\r\n          console.log('Video converted successfully, length:', videoData.length);\r\n          postOptions.videoUrl = videoData;\r\n          postOptions.videoFilename = mediaFile.name;\r\n        } catch (error) {\r\n          console.error('Error converting video to base64:', error);\r\n          throw new Error('Failed to process video file: ' + error.message);\r\n        }\r\n      }\r\n\r\n      // Validate that we have at least one required field\r\n      if (!postOptions.textContent && !postOptions.contentPrompt && !postOptions.imageUrl && !postOptions.imagePrompt && !postOptions.videoUrl) {\r\n        throw new Error('No content provided. Please add text content, generate content, or add media.');\r\n      }\r\n\r\n      // Debug: Log final options being sent to API\r\n      console.log('Final post options being sent to API:', postOptions);\r\n      console.log('Selected page ID:', selectedPage.id);\r\n      console.log('Post options keys:', Object.keys(postOptions));\r\n      console.log('Has video URL:', !!postOptions.videoUrl);\r\n      console.log('Has image URL:', !!postOptions.imageUrl);\r\n      console.log('Has text content:', !!postOptions.textContent);\r\n\r\n      console.log('Calling API with page ID:', selectedPage.id);\r\n      postResult = await apiClient.createFacebookPost(selectedPage.id, postOptions);\r\n      console.log('API response:', postResult);\r\n      \r\n      if (!postResult.success) {\r\n        throw new Error(postResult.error || 'Failed to create post via backend');\r\n      }\r\n\r\n      setConnectionStatus('Post published successfully!');\r\n      \r\n      setTimeout(() => {\r\n        loadPostHistory();\r\n      }, 1000);\r\n      \r\n      if (isAutoMode) {\r\n        setAutoFormData(prev => ({\r\n          ...prev,\r\n          prompt: '',\r\n          generatedContent: '',\r\n          mediaFile: null,\r\n          mediaType: 'none',\r\n          imagePrompt: '',\r\n          generatedImageUrl: null,\r\n          generatedImageFilename: null\r\n        }));\r\n      } else {\r\n        setManualFormData(prev => ({\r\n          ...prev,\r\n          message: '',\r\n          mediaFile: null,\r\n          mediaType: 'none',\r\n          imagePrompt: '',\r\n          generatedImageUrl: null,\r\n          generatedImageFilename: null\r\n        }));\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Post publishing error:', error);\r\n      setConnectionStatus('Failed to publish post: ' + (error.message || 'Unknown error'));\r\n    } finally {\r\n      setIsPublishing(false);\r\n    }\r\n  };\r\n\r\n  const loginWithFacebook = async () => {\r\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\r\n      setConnectionStatus('Facebook login requires HTTPS. Please use https://localhost:3001 or deploy with HTTPS');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await apiClient.getCurrentUser();\r\n    } catch (error) {\r\n      setConnectionStatus('Your session has expired. Please log out and log back in to connect Facebook.');\r\n      setTimeout(() => {\r\n        logout();\r\n        navigate('/');\r\n      }, 3000);\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n    setConnectionStatus('Loading Facebook SDK...');\r\n\r\n    try {\r\n      await loadFacebookSDK(FACEBOOK_APP_ID);\r\n\r\n      if (!window.FB || typeof window.FB.login !== 'function') {\r\n        setConnectionStatus('Facebook SDK failed to load. Please refresh the page and try again.');\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n\r\n      setConnectionStatus('Connecting to Facebook...');\r\n      \r\n      window.FB.login((response) => {\r\n        if (response.authResponse && response.authResponse.accessToken) {\r\n          setConnectionStatus('Facebook login successful! Fetching pages...');\r\n          \r\n          (async () => {\r\n            try {\r\n              const { mappedPages, userInfo } = await fetchPages(response.authResponse.accessToken);\r\n              \r\n              if (mappedPages.length > 0) {\r\n                setConnectionStatus('Connecting to backend...');\r\n                const backendResponse = await connectToBackend(response.authResponse.accessToken, userInfo, mappedPages);\r\n                \r\n                if (backendResponse?.data?.pages) {\r\n                  setAvailablePages(mappedPages);\r\n                  setConnectionStatus(`Connected successfully! ${backendResponse.data.pages_connected} pages synchronized with backend.`);\r\n                }\r\n              } else {\r\n                setConnectionStatus('No pages found in Facebook API. Connecting to backend to check for existing connections...');\r\n                \r\n                try {\r\n                  await connectToBackend(response.authResponse.accessToken, userInfo, []);\r\n                  \r\n                  const existingAccounts = await apiClient.getSocialAccounts();\r\n                  const facebookPages = existingAccounts.filter(acc => \r\n                    acc.platform === 'facebook' && acc.account_type === 'page' && acc.is_connected\r\n                  );\r\n                  \r\n                  if (facebookPages.length > 0) {\r\n                    const backendMappedPages = facebookPages.map(page => ({\r\n                      id: page.platform_user_id,\r\n                      internalId: page.id,\r\n                      name: page.display_name,\r\n                      category: page.platform_data?.category || 'Page',\r\n                      access_token: page.access_token || response.authResponse.accessToken,\r\n                      profilePicture: page.profile_picture_url || '',\r\n                      canPost: page.platform_data?.can_post !== false,\r\n                      canComment: page.platform_data?.can_comment !== false,\r\n                      followerCount: page.follower_count || 0\r\n                    }));\r\n                    \r\n                    setAvailablePages(backendMappedPages);\r\n                    setConnectionStatus(`Found ${facebookPages.length} existing page(s) from previous connections!`);\r\n                  } else {\r\n                    setConnectionStatus('No pages found. You may need to grant page permissions or create a Facebook page first.');\r\n                  }\r\n                } catch (backendError) {\r\n                  console.error('[FB.login] Backend check failed:', backendError);\r\n                  setConnectionStatus('No pages found. You may need to grant page permissions or create a Facebook page first.');\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.error('[FB.login] Error in page fetching or backend connection:', error);\r\n              setConnectionStatus('Error during setup: ' + (error.message || 'Unknown error'));\r\n              setIsConnecting(false);\r\n              setFacebookConnected(false);\r\n            }\r\n          })();\r\n        } else {\r\n          if (response.status === 'not_authorized') {\r\n            setConnectionStatus('Please authorize the app to continue and select at least one page.');\r\n          } else {\r\n            setConnectionStatus('Facebook login cancelled or failed');\r\n          }\r\n          setIsConnecting(false);\r\n        }\r\n      }, {\r\n        scope: [\r\n          'public_profile',\r\n          'pages_show_list',\r\n          'pages_read_engagement', \r\n          'pages_manage_posts',\r\n          'pages_manage_engagement',\r\n          'pages_read_user_content',\r\n          'pages_manage_metadata'\r\n        ].join(','),\r\n        enable_profile_selector: true,\r\n        return_scopes: true,\r\n        auth_type: 'rerequest',\r\n        display: 'popup'\r\n      });\r\n    } catch (error) {\r\n      console.error('Facebook login error:', error);\r\n      setConnectionStatus('Facebook login failed: ' + error.message);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getStatusCardClass = () => {\r\n    if (connectionStatus.includes('Failed') || connectionStatus.includes('error') || connectionStatus.includes('Error')) {\r\n      return 'status-card error';\r\n    } else if (connectionStatus.includes('successful') || connectionStatus.includes('Connected') || connectionStatus.includes('completed')) {\r\n      return 'status-card success';\r\n    } else {\r\n      return 'status-card info';\r\n    }\r\n  };\r\n\r\n  // Fetch AUTO_REPLY_MESSAGE rule for selected page\r\n  const loadAutoReplyMessageRule = useCallback(async () => {\r\n    if (!selectedPage) return;\r\n    setAutoReplyMessagesLoading(true);\r\n    setAutoReplyMessagesError(null);\r\n    try {\r\n      const rules = await apiClient.getAutomationRules('facebook', 'AUTO_REPLY_MESSAGE');\r\n      // Find the rule for this page\r\n      const socialAccounts = await apiClient.getSocialAccounts();\r\n      const matchingAccount = socialAccounts.find(acc => acc.platform === 'facebook' && acc.platform_user_id === selectedPage.id);\r\n      const rule = rules.find(r => r.social_account_id === matchingAccount?.id);\r\n      if (rule) {\r\n        setAutoReplyMessageRule(rule);\r\n        setAutoReplyMessagesEnabled(rule.is_active !== false); // Default ON if undefined\r\n      } else {\r\n        setAutoReplyMessageRule(null);\r\n        setAutoReplyMessagesEnabled(true); // Default ON if no rule\r\n      }\r\n    } catch (err) {\r\n      setAutoReplyMessagesError('Failed to load auto-reply message rule.');\r\n    } finally {\r\n      setAutoReplyMessagesLoading(false);\r\n    }\r\n  }, [selectedPage]);\r\n\r\n  // Call on page load and when selectedPage changes\r\n  useEffect(() => {\r\n    loadAutoReplyMessageRule();\r\n  }, [selectedPage, loadAutoReplyMessageRule]);\r\n\r\n  // Handler for toggling auto-reply messages\r\n  const handleAutoReplyMessagesToggle = async () => {\r\n    if (!autoReplyMessageRule) return;\r\n    setAutoReplyMessagesLoading(true);\r\n    setAutoReplyMessagesError(null);\r\n    try {\r\n      const updated = await apiClient.updateAutomationRule(autoReplyMessageRule.id, {\r\n        is_active: !autoReplyMessagesEnabled\r\n      });\r\n      setAutoReplyMessagesEnabled(updated.is_active);\r\n      setAutoReplyMessageRule(updated);\r\n    } catch (err) {\r\n      setAutoReplyMessagesError('Failed to update auto-reply message rule.');\r\n    } finally {\r\n      setAutoReplyMessagesLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"facebook-page-container\">\r\n      {/* Navigation Header */}\r\n      <div className=\"facebook-header\">\r\n        <div className=\"facebook-header-left\">\r\n          <div className={`facebook-icon-container ${facebookConnected ? 'connected' : ''}`}>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#1877f2\">\r\n              <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <h1 className=\"facebook-title\">\r\n              {facebookConnected ? \r\n                (selectedPage ? `${selectedPage.name}` : 'Facebook Manager') : \r\n                'Facebook Manager'\r\n              }\r\n            </h1>\r\n            <div className=\"facebook-subtitle\">\r\n              {facebookConnected ? (\r\n                selectedPage ? (\r\n                  <>\r\n                    <div className=\"status-indicator connected\" />\r\n                    <span>\r\n                      {selectedPage.category} • {selectedPage.followerCount || 0} followers\r\n                    </span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"status-indicator connecting\" />\r\n                    <span>Connected • Select a page to continue</span>\r\n                  </>\r\n                )\r\n              ) : (\r\n                <>\r\n                  <div className=\"status-indicator disconnected\" />\r\n                  <span>Not connected • Ready to link your account</span>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"facebook-header-right\">\r\n          {facebookConnected && (\r\n            <button \r\n              onClick={handleFacebookLogout}\r\n              disabled={isLoggingOut}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"/>\r\n                <polyline points=\"16,17 21,12 16,7\"/>\r\n                <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"/>\r\n              </svg>\r\n              {isLoggingOut ? 'Disconnecting...' : 'Disconnect'}\r\n            </button>\r\n          )}\r\n          \r\n          <button\r\n            onClick={() => navigate('/')}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"m12 19-7-7 7-7\"/>\r\n              <path d=\"M19 12H5\"/>\r\n            </svg>\r\n            Dashboard\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Container */}\r\n      <div className={`facebook-main-content ${!facebookConnected ? 'centered' : ''}`}>\r\n        {/* Status Card */}\r\n        {connectionStatus && (\r\n          <div className={getStatusCardClass()}>\r\n            {connectionStatus}\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Card */}\r\n        <div className={`facebook-main-card ${!facebookConnected ? 'connect-mode' : ''}`}>\r\n          {!facebookConnected ? (\r\n            /* Connect Card */\r\n            <div className=\"connect-card\">\r\n              <div className=\"connect-icon\">\r\n                <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"#1877f2\">\r\n                  <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\r\n                </svg>\r\n              </div>\r\n              \r\n              <h3 className=\"connect-title\">\r\n                Connect Your Facebook\r\n              </h3>\r\n              \r\n              <button \r\n                onClick={loginWithFacebook} \r\n                disabled={isConnecting || isCheckingStatus}\r\n                className=\"connect-button\"\r\n              >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"white\">\r\n                  <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\r\n                </svg>\r\n                {isCheckingStatus ? 'Checking Connection...' : (isConnecting ? 'Connecting...' : 'Connect Facebook')}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            /* Connected Content */\r\n            <div className=\"facebook-connected-content\">\r\n              {/* Page Selection */}\r\n              {availablePages.length > 1 && (\r\n                <div className=\"page-selector-enhanced\">\r\n                  <div className=\"page-selector-header\">\r\n                    <div className=\"page-avatar\">\r\n                      {selectedPage && selectedPage.profilePicture ? (\r\n                        <img \r\n                          src={selectedPage.profilePicture} \r\n                          alt={selectedPage.name} \r\n                          className=\"page-avatar-image\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"page-avatar-placeholder\">\r\n                          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                            <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                          </svg>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"page-selector-content\">\r\n                      <h3 className=\"page-selector-title\">Select a Page</h3>\r\n                      <p className=\"page-selector-subtitle\">Choose which Facebook page to manage</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"page-selector-dropdown-container\">\r\n                    <select\r\n                      id=\"page-dropdown\"\r\n                      className=\"page-dropdown-enhanced\"\r\n                      value={selectedPage?.id || ''}\r\n                      onChange={e => {\r\n                        const page = availablePages.find(p => p.id === e.target.value);\r\n                        if (page && selectedPage?.id !== page.id) {\r\n                          setSelectedPage(page);\r\n                          setAutoPostHistory([]);\r\n                          setManualPostHistory([]);\r\n                          setShowBulkComposer(false);\r\n                          setActiveTab('auto');\r\n                          setConnectionStatus('');\r\n                          setScheduleData({\r\n                            prompt: '',\r\n                            time: '',\r\n                            frequency: 'daily',\r\n                            customDate: '',\r\n                            isActive: false,\r\n                            scheduleId: null\r\n                          });\r\n                          setAutoReplyMessagesEnabled(true);\r\n                          setAutoReplyMessagesLoading(false);\r\n                          setAutoReplyMessagesError(null);\r\n                          setTimeout(() => {\r\n                            loadAutoReplySettings();\r\n                            loadPostHistory();\r\n                          }, 100);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <option value=\"\" disabled>Choose a page...</option>\r\n                      {availablePages.map(page => (\r\n                        <option key={page.id} value={page.id}>\r\n                          {page.name} ({page.category})\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    \r\n                    <div className=\"page-selector-icon\">\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <polyline points=\"6,9 12,15 18,9\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {selectedPage && (\r\n                    <div className=\"page-selector-info\">\r\n                      <div className=\"page-info-item\">\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                          <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\r\n                          <circle cx=\"9\" cy=\"7\" r=\"4\"/>\r\n                          <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\r\n                          <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\r\n                        </svg>\r\n                        <span>{selectedPage.followerCount?.toLocaleString() || 0} followers</span>\r\n                      </div>\r\n                      <div className=\"page-info-item\">\r\n                        <div className=\"status-dot connected\"></div>\r\n                        <span>Connected & Ready</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Main Content Area */}\r\n              {selectedPage && (\r\n                <div className=\"facebook-content-area\">\r\n\r\n                  <div className=\"tab-navigation\">\r\n                    <button\r\n                      className={`tab-button ${activeTab === 'auto' ? 'active' : ''}`}\r\n                      onClick={() => {\r\n                        setActiveTab('auto');\r\n                        setShowAutomate(false);\r\n                      }}\r\n                    >\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                      </svg>\r\n                      {isMobile() ? 'AI' : 'AI Generate'}\r\n                    </button>\r\n                    <button\r\n                      className={`tab-button ${activeTab === 'manual' ? 'active' : ''}`}\r\n                      onClick={() => {\r\n                        setActiveTab('manual');\r\n                        setShowAutomate(false);\r\n                      }}\r\n                    >\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\r\n                        <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\r\n                      </svg>\r\n                      {isMobile() ? 'Manual' : 'Manual Post'}\r\n                    </button>\r\n                    <button\r\n                      className={`tab-button ${activeTab === 'bulk' ? 'active' : ''}`}\r\n                      onClick={() => {\r\n                        setActiveTab('bulk');\r\n                        setShowBulkComposer(true);\r\n                        setShowAutomate(false);\r\n                      }}\r\n                    >\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <path d=\"M3 3h18v18H3z\"/>\r\n                        <path d=\"M9 9h6v6H9z\"/>\r\n                        <path d=\"M15 3v18\"/>\r\n                        <path d=\"M9 3v18\"/>\r\n                      </svg>\r\n                      {isMobile() ? 'Bulk' : 'Bulk Composer'}\r\n                    </button>\r\n                    <button\r\n                      className={`tab-button ${activeTab === 'automate' ? 'active' : ''}`}\r\n                      onClick={() => {\r\n                        setActiveTab('automate');\r\n                        setShowAutomate(true);\r\n                      }}\r\n                    >\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                      </svg>\r\n                      {isMobile() ? 'Automate' : 'Automate'}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Tab Content */}\r\n                  <div className=\"tab-content\">\r\n                    {/* Automate Tab */}\r\n                    {activeTab === 'automate' && showAutomate && (\r\n                      <div className=\"automate-section\">\r\n                        <h3>Automate</h3>\r\n                        <div className=\"automate-toggles\">\r\n                          <div className=\"automate-toggle\" style={{ alignItems: 'center', gap: 8 }}>\r\n                            <label htmlFor=\"auto-reply-comments-toggle\" style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                              Auto-Reply Comments\r\n                              <span\r\n                                title=\"Auto-reply to comments is always enabled for all posts. Every new post will automatically have AI-powered comment replies.\"\r\n                                aria-label=\"Info: Auto-reply to comments is always enabled for all posts.\"\r\n                                style={{ cursor: 'pointer', display: 'inline-flex', alignItems: 'center' }}\r\n                              >\r\n                                <svg style={{ marginLeft: 2, verticalAlign: 'middle' }} width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#888\" strokeWidth=\"2\">\r\n                                  <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n                                  <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"/>\r\n                                  <circle cx=\"12\" cy=\"16\" r=\"1\"/>\r\n                                </svg>\r\n                              </span>\r\n                            </label>\r\n                            <input\r\n                              id=\"auto-reply-comments-toggle\"\r\n                              type=\"checkbox\"\r\n                              checked={true}\r\n                              disabled\r\n                              style={{ accentColor: '#28a745', cursor: 'not-allowed' }}\r\n                              aria-label=\"Auto-Reply Comments Always On\"\r\n                            />\r\n                            <span className=\"automate-toggle-status enabled\" style={{ color: '#28a745', fontWeight: 600 }}>Always On</span>\r\n                          </div>\r\n                          <div className=\"automate-toggle-row\" style={{ marginTop: 16 }}>\r\n                            <label htmlFor=\"auto-reply-messages-toggle\">Auto-Reply Messages</label>\r\n                            <input\r\n                              id=\"auto-reply-messages-toggle\"\r\n                              type=\"checkbox\"\r\n                              checked={autoReplyMessagesEnabled}\r\n                              disabled={autoReplyMessagesLoading || !autoReplyMessageRule}\r\n                              onChange={handleAutoReplyMessagesToggle}\r\n                              aria-label=\"Toggle Auto-Reply Messages\"\r\n                            />\r\n                            <span className={`automate-toggle-status ${autoReplyMessagesEnabled ? 'enabled' : 'disabled'}`}>{autoReplyMessagesEnabled ? 'On' : 'Off'}</span>\r\n                            {autoReplyMessagesLoading && <span className=\"automate-loading\">Loading...</span>}\r\n                            {autoReplyMessagesError && <span className=\"automate-error\">{autoReplyMessagesError}</span>}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"automate-info\" style={{ background: '#f5f7fa', borderRadius: 6, padding: 12, marginTop: 16, display: 'flex', alignItems: 'flex-start', gap: 8 }}>\r\n                          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#1877f2\" strokeWidth=\"2\" style={{ verticalAlign: 'middle', marginTop: 2 }}>\r\n                            <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n                            <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"/>\r\n                            <circle cx=\"12\" cy=\"16\" r=\"1\"/>\r\n                          </svg>\r\n                          <span>\r\n                            <strong>Auto-reply to comments is always enabled for all posts.</strong> Every new post will automatically have AI-powered comment replies.\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"automate-message-template\" style={{ marginTop: 16 }}>\r\n                          <label>Message Template:</label>\r\n                          <div className=\"automate-message-template-box\" style={{ background: '#f5f7fa', borderRadius: 4, padding: 8, color: '#888', fontStyle: 'italic' }}>\r\n                            {autoReplyMessageRule?.actions?.message_template || \"Thank you for your message! We'll get back to you soon.\"}\r\n                          </div>\r\n                          <div style={{ color: '#888', fontSize: '0.95em', marginTop: 4 }}>\r\n                            (To change the auto-reply template or logic, contact your admin.)\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {/* AI Generate Tab */}\r\n                    {activeTab === 'auto' && (\r\n                      <>\r\n                        <div className=\"auto-post-form\">\r\n                          <h3>AI Content Generation</h3>\r\n                          \r\n                          {/* AI Prompt Input */}\r\n                          <div className=\"form-group\">\r\n                            <label>Content Prompt</label>\r\n                            <textarea\r\n                              name=\"prompt\"\r\n                              value={autoFormData.prompt}\r\n                              onChange={handleAutoInputChange}\r\n                              placeholder=\"Describe what you want to post about...\"\r\n                              className=\"form-textarea\"\r\n                              rows=\"3\"\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Generate Content Button */}\r\n                          <div className=\"form-group\">\r\n                            <button\r\n                              onClick={generatePostContent}\r\n                              disabled={!autoFormData.prompt.trim() || autoFormData.isGenerating}\r\n                              className=\"btn btn-primary\"\r\n                            >\r\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                              </svg>\r\n                              {autoFormData.isGenerating ? 'Generating...' : 'Generate Content'}\r\n                            </button>\r\n                          </div>\r\n\r\n                          {/* Generated Content Display */}\r\n                          {autoFormData.generatedContent && (\r\n                            <div className=\"form-group\">\r\n                              <label>Generated Content</label>\r\n                              <textarea\r\n                                value={autoFormData.generatedContent}\r\n                                readOnly\r\n                                className=\"form-textarea generated-content\"\r\n                                rows=\"4\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Media Options */}\r\n                          <div className=\"form-group\">\r\n                            <label>Media Options</label>\r\n                            <div className=\"media-options\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className={`media-option ${autoFormData.mediaType === 'none' ? 'active' : ''}`}\r\n                                onClick={() => handleMediaTypeChange('none', 'auto')}\r\n                              >\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\r\n                                  <polyline points=\"14,2 14,8 20,8\"/>\r\n                                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\r\n                                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\r\n                                  <polyline points=\"10,9 9,9 8,9\"/>\r\n                                </svg>\r\n                                Text Only\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className={`media-option ${autoFormData.mediaType === 'ai_image' ? 'active' : ''}`}\r\n                                onClick={() => handleMediaTypeChange('ai_image', 'auto')}\r\n                              >\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                                </svg>\r\n                                AI Image\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* AI Image Generation */}\r\n                          {autoFormData.mediaType === 'ai_image' && (\r\n                            <div className=\"ai-image-section\">\r\n                              <div className=\"form-group\">\r\n                                <label>Image Prompt</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"imagePrompt\"\r\n                                  value={autoFormData.imagePrompt}\r\n                                  onChange={handleAutoInputChange}\r\n                                  placeholder=\"Describe the image you want to generate...\"\r\n                                  className=\"form-input\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                <button\r\n                                  onClick={() => generateImage('auto')}\r\n                                  disabled={!autoFormData.imagePrompt.trim() || autoFormData.isGeneratingImage}\r\n                                  className=\"btn btn-secondary\"\r\n                                >\r\n                                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                    <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\r\n                                    <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"/>\r\n                                    <polyline points=\"21,15 16,10 5,21\"/>\r\n                                  </svg>\r\n                                  {autoFormData.isGeneratingImage ? 'Generating...' : 'Generate Image'}\r\n                                </button>\r\n                              </div>\r\n                              {autoFormData.generatedImageUrl && (\r\n                                <div className=\"form-group\">\r\n                                  <label>Generated Image</label>\r\n                                  <div className=\"image-preview\">\r\n                                    <img \r\n                                      src={autoFormData.generatedImageUrl} \r\n                                      alt=\"Generated\" \r\n                                      className=\"preview-image\"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Generate Both Button */}\r\n                          <div className=\"form-group\">\r\n                            <button\r\n                              onClick={generateImageWithCaption}\r\n                              disabled={!autoFormData.prompt.trim() || autoFormData.isGenerating || autoFormData.isGeneratingImage}\r\n                              className=\"btn btn-success\"\r\n                            >\r\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                              </svg>\r\n                              Generate Content + Image\r\n                            </button>\r\n                          </div>\r\n\r\n                          {/* Publish Button */}\r\n                          <div className=\"form-group\">\r\n                            <button\r\n                              onClick={publishPost}\r\n                              disabled={!autoFormData.generatedContent || isPublishing}\r\n                              className=\"btn btn-primary btn-large\"\r\n                            >\r\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M22 2L11 13\"/>\r\n                                <polygon points=\"22,2 15,22 11,13 2,9\"/>\r\n                              </svg>\r\n                              {isPublishing ? 'Publishing...' : 'Publish Post'}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {/* AI Generate Post History */}\r\n                        <div className=\"post-history\">\r\n                          <div className=\"post-history-header\">\r\n                            <h3>AI Generated Posts ({autoPostHistory.length})</h3>\r\n                            <button\r\n                              onClick={loadPostHistory}\r\n                              disabled={isLoadingPosts}\r\n                              className=\"btn btn-secondary btn-small\"\r\n                            >\r\n                              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M23 4v6h-6\"/>\r\n                                <path d=\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"/>\r\n                              </svg>\r\n                              Refresh\r\n                            </button>\r\n                          </div>\r\n                          {isLoadingPosts ? (\r\n                            <div className=\"loading-posts\">\r\n                              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M21 12a9 9 0 11-6.219-8.56\"/>\r\n                              </svg>\r\n                              Loading posts...\r\n                            </div>\r\n                          ) : autoPostHistory.length > 0 ? (\r\n                            <div className=\"posts-list\">\r\n                              {autoPostHistory.map((post, index) => (\r\n                                <div key={index} className=\"post-item\">\r\n                                  <div className=\"post-content\">\r\n                                    <p>{post.content}</p>\r\n                                    {post.media_urls && post.media_urls.length > 0 && (\r\n                                      <div className=\"post-media\">\r\n                                        <img src={post.media_urls[0]} alt=\"Post media\" className=\"post-image\" />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"post-meta\">\r\n                                    <span className=\"post-date\">\r\n                                      {new Date(post.created_at || post.next_execution).toLocaleDateString()}\r\n                                    </span>\r\n                                    <span className={`post-status ${post.status}`}>{post.status}</span>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"no-posts\">\r\n                              <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\">\r\n                                <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\r\n                              </svg>\r\n                              <p>No AI generated posts yet. Create your first post!</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    {/* Manual Post Tab */}\r\n                    {activeTab === 'manual' && (\r\n                      <>\r\n                        <div className=\"manual-post-form\">\r\n                          <h3>Manual Post</h3>\r\n                          \r\n                          {/* Message Input */}\r\n                          <div className=\"form-group\">\r\n                            <label>Post Message</label>\r\n                            <textarea\r\n                              name=\"message\"\r\n                              value={manualFormData.message}\r\n                              onChange={handleManualInputChange}\r\n                              placeholder=\"What's on your mind?\"\r\n                              className=\"form-textarea\"\r\n                              rows=\"4\"\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Media Options */}\r\n                          <div className=\"form-group\">\r\n                            <label>Media Options</label>\r\n                            <div className=\"media-options\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className={`media-option ${manualFormData.mediaType === 'none' ? 'active' : ''}`}\r\n                                onClick={() => handleMediaTypeChange('none', 'manual')}\r\n                              >\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\r\n                                  <polyline points=\"14,2 14,8 20,8\"/>\r\n                                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\r\n                                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\r\n                                  <polyline points=\"10,9 9,9 8,9\"/>\r\n                                </svg>\r\n                                Text Only\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className={`media-option ${manualFormData.mediaType === 'photo' ? 'active' : ''}`}\r\n                                onClick={() => handleMediaTypeChange('photo', 'manual')}\r\n                              >\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\r\n                                  <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"/>\r\n                                  <polyline points=\"21,15 16,10 5,21\"/>\r\n                                </svg>\r\n                                Upload Photo\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className={`media-option ${manualFormData.mediaType === 'video' ? 'active' : ''}`}\r\n                                onClick={() => handleMediaTypeChange('video', 'manual')}\r\n                              >\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                  <polygon points=\"23,7 16,12 23,17 23,7\"/>\r\n                                  <rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"/>\r\n                                </svg>\r\n                                Upload Video\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Photo Upload */}\r\n                          {manualFormData.mediaType === 'photo' && (\r\n                            <div className=\"form-group\">\r\n                              <label>Upload Photo</label>\r\n                              <input\r\n                                type=\"file\"\r\n                                name=\"mediaFile\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleManualInputChange}\r\n                                className=\"form-file-input\"\r\n                              />\r\n                              {manualFormData.mediaFile && (\r\n                                <div className=\"image-preview\">\r\n                                  <img \r\n                                    src={URL.createObjectURL(manualFormData.mediaFile)} \r\n                                    alt=\"Preview\" \r\n                                    className=\"preview-image\"\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Video Upload */}\r\n                          {manualFormData.mediaType === 'video' && (\r\n                            <div className=\"form-group\">\r\n                              <label>Upload Video</label>\r\n                              <input\r\n                                type=\"file\"\r\n                                name=\"mediaFile\"\r\n                                accept=\"video/*\"\r\n                                onChange={handleManualInputChange}\r\n                                className=\"form-file-input\"\r\n                              />\r\n                              {manualFormData.mediaFile && (\r\n                                <div className=\"video-preview\">\r\n                                  <video \r\n                                    src={URL.createObjectURL(manualFormData.mediaFile)} \r\n                                    controls\r\n                                    className=\"preview-video\"\r\n                                    style={{ maxWidth: '100%', maxHeight: '300px' }}\r\n                                  />\r\n                                  <div className=\"video-info\">\r\n                                    <p>File: {manualFormData.mediaFile.name}</p>\r\n                                    <p>Size: {(manualFormData.mediaFile.size / (1024 * 1024)).toFixed(2)} MB</p>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Publish Button */}\r\n                          <div className=\"form-group\">\r\n                            <button\r\n                              onClick={publishPost}\r\n                              disabled={!manualFormData.message.trim() || isPublishing}\r\n                              className=\"btn btn-primary btn-large\"\r\n                            >\r\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M22 2L11 13\"/>\r\n                                <polygon points=\"22,2 15,22 11,13 2,9\"/>\r\n                              </svg>\r\n                              {isPublishing ? 'Publishing...' : 'Publish Post'}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {/* Manual Post History */}\r\n                        <div className=\"post-history\">\r\n                          <div className=\"post-history-header\">\r\n                            <h3>Manual Posts ({manualPostHistory.length})</h3>\r\n                            <button\r\n                              onClick={loadPostHistory}\r\n                              disabled={isLoadingPosts}\r\n                              className=\"btn btn-secondary btn-small\"\r\n                            >\r\n                              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M23 4v6h-6\"/>\r\n                                <path d=\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"/>\r\n                              </svg>\r\n                              Refresh\r\n                            </button>\r\n                          </div>\r\n                          {isLoadingPosts ? (\r\n                            <div className=\"loading-posts\">\r\n                              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M21 12a9 9 0 11-6.219-8.56\"/>\r\n                              </svg>\r\n                              Loading posts...\r\n                            </div>\r\n                          ) : manualPostHistory.length > 0 ? (\r\n                            <div className=\"posts-list\">\r\n                              {manualPostHistory.map((post, index) => (\r\n                                <div key={index} className=\"post-item\">\r\n                                  <div className=\"post-content\">\r\n                                    <p>{post.content}</p>\r\n                                    {post.media_urls && post.media_urls.length > 0 && (\r\n                                      <div className=\"post-media\">\r\n                                        <img src={post.media_urls[0]} alt=\"Post media\" className=\"post-image\" />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"post-meta\">\r\n                                    <span className=\"post-date\">\r\n                                      {new Date(post.created_at || post.next_execution).toLocaleDateString()}\r\n                                    </span>\r\n                                    <span className={`post-status ${post.status}`}>{post.status}</span>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"no-posts\">\r\n                              <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\">\r\n                                <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\r\n                              </svg>\r\n                              <p>No manual posts yet. Create your first post!</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    {/* Bulk Composer Tab */}\r\n                    {activeTab === 'bulk' && showBulkComposer && (\r\n                      <BulkComposer \r\n                        selectedPage={selectedPage}\r\n                        availablePages={availablePages}\r\n                        onPageChange={setSelectedPage}\r\n                        onClose={() => {\r\n                          setShowBulkComposer(false);\r\n                          setActiveTab('auto');\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* File Picker Modal */}\r\n      {showFilePicker && (\r\n        <div className=\"modal-overlay\" onClick={closeFilePicker}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h3>Select {filePickerType === 'photo' ? 'Photo' : 'Video'}</h3>\r\n              <button onClick={closeFilePicker} className=\"modal-close\">\r\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\r\n                  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"file-picker-options\">\r\n                <div \r\n                  className=\"file-option\" \r\n                  onClick={() => document.getElementById('local-file-input').click()}\r\n                  onTouchStart={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"file-option-icon\">\r\n                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                      <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\r\n                      <polyline points=\"14,2 14,8 20,8\"/>\r\n                      <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\r\n                      <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\r\n                      <polyline points=\"10,9 9,9 8,9\"/>\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"file-option-content\">\r\n                    <h4>Local System</h4>\r\n                    <p>Select a file from your computer</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div \r\n                  className={`file-option ${!googleDriveAvailable ? 'disabled' : ''}`} \r\n                  onClick={handleGoogleDriveSelect}\r\n                  onTouchStart={(e) => {\r\n                    if (!googleDriveAvailable) {\r\n                      e.preventDefault();\r\n                      return;\r\n                    }\r\n                    e.preventDefault();\r\n                    handleGoogleDriveSelect();\r\n                  }}\r\n                >\r\n                  <div className=\"file-option-icon\">\r\n                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                      <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\r\n                      <polyline points=\"9,22 9,12 15,12 15,22\"/>\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"file-option-content\">\r\n                    <h4>Google Drive</h4>\r\n                    <p>\r\n                      {googleDriveAvailable \r\n                        ? 'Select a file from your Google Drive' \r\n                        : 'Google Drive not configured. See setup guide.'\r\n                      }\r\n                    </p>\r\n                    {isLoadingGoogleDrive && (\r\n                      <div className=\"loading-indicator\">\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                          <path d=\"M21 12a9 9 0 11-6.219-8.56\"/>\r\n                        </svg>\r\n                        Loading...\r\n                      </div>\r\n                    )}\r\n                    {!googleDriveAvailable && (\r\n                      <div className=\"unavailable-indicator\">\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                          <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n                          <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"/>\r\n                          <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"/>\r\n                        </svg>\r\n                        Not Available\r\n                      </div>\r\n                    )}\r\n                    {googleDriveAvailable && (\r\n                      <div className=\"drive-actions\">\r\n                        <button \r\n                          className=\"debug-drive-btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            debugGoogleDrive();\r\n                          }}\r\n                          title=\"Debug Google Drive\"\r\n                        >\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n                            <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"/>\r\n                            <circle cx=\"12\" cy=\"16\" r=\"1\"/>\r\n                          </svg>\r\n                          Debug\r\n                        </button>\r\n                        <button \r\n                          className=\"test-images-btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            testGoogleDriveImages();\r\n                          }}\r\n                          title=\"Test Images/Videos\"\r\n                        >\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\r\n                            <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"/>\r\n                            <polyline points=\"21,15 16,10 5,21\"/>\r\n                          </svg>\r\n                          Test Images\r\n                        </button>\r\n                        <button \r\n                          className=\"clear-tokens-btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            clearGoogleDriveTokens();\r\n                          }}\r\n                          title=\"Clear Google Drive Tokens\"\r\n                        >\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <path d=\"M3 6h18\"/>\r\n                            <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"/>\r\n                            <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"/>\r\n                          </svg>\r\n                          Clear\r\n                        </button>\r\n                        <button \r\n                          className=\"disconnect-drive-btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            disconnectGoogleDrive();\r\n                          }}\r\n                          title=\"Disconnect Google Drive\"\r\n                        >\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\r\n                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\r\n                          </svg>\r\n                          Disconnect\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Hidden file input for local file selection */}\r\n              <input\r\n                id=\"local-file-input\"\r\n                type=\"file\"\r\n                accept={filePickerType === 'photo' ? 'image/*' : 'video/*'}\r\n                onChange={handleLocalFileSelect}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FacebookPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}