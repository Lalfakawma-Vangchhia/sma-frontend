{"version":3,"file":"static/js/525.d17e4489.chunk.js","mappings":"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","sources":["components/SchedulerDebug.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiClient from '../services/apiClient';\r\n\r\nconst SchedulerDebug = () => {\r\n  const [debugInfo, setDebugInfo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const fetchDebugInfo = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await apiClient.request('/social/debug/scheduled-posts-status');\r\n      setDebugInfo(response);\r\n      setMessage('Debug info loaded successfully');\r\n    } catch (error) {\r\n      console.error('Error fetching debug info:', error);\r\n      setMessage('Failed to load debug info: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const triggerScheduler = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await apiClient.request('/social/debug/trigger-scheduler', {\r\n        method: 'POST'\r\n      });\r\n      setMessage('Scheduler triggered successfully: ' + response.message);\r\n      // Refresh debug info after triggering\r\n      setTimeout(fetchDebugInfo, 2000);\r\n    } catch (error) {\r\n      console.error('Error triggering scheduler:', error);\r\n      setMessage('Failed to trigger scheduler: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDebugInfo();\r\n  }, []);\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'scheduled': return '#007bff';\r\n      case 'posted': return '#28a745';\r\n      case 'failed': return '#dc3545';\r\n      default: return '#6c757d';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h2>Instagram Scheduler Debug</h2>\r\n      \r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button \r\n          onClick={fetchDebugInfo} \r\n          disabled={loading}\r\n          style={{ marginRight: '10px', padding: '8px 16px' }}\r\n        >\r\n          {loading ? 'Loading...' : 'Refresh Debug Info'}\r\n        </button>\r\n        <button \r\n          onClick={triggerScheduler} \r\n          disabled={loading}\r\n          style={{ padding: '8px 16px', backgroundColor: '#007bff', color: 'white', border: 'none' }}\r\n        >\r\n          {loading ? 'Triggering...' : 'Trigger Scheduler'}\r\n        </button>\r\n      </div>\r\n\r\n      {message && (\r\n        <div style={{ \r\n          padding: '10px', \r\n          marginBottom: '20px', \r\n          backgroundColor: message.includes('Failed') ? '#f8d7da' : '#d4edda',\r\n          border: `1px solid ${message.includes('Failed') ? '#f5c6cb' : '#c3e6cb'}`,\r\n          borderRadius: '4px'\r\n        }}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {debugInfo && (\r\n        <div>\r\n          <h3>System Status</h3>\r\n          <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '4px' }}>\r\n            <p><strong>Current Time (UTC):</strong> {new Date(debugInfo.current_time_utc).toLocaleString()}</p>\r\n            <p><strong>Current Time (IST):</strong> {new Date(debugInfo.current_time_ist).toLocaleString()}</p>\r\n            <p><strong>Total Posts:</strong> {debugInfo.total_posts}</p>\r\n            <p><strong>Due Posts:</strong> {debugInfo.due_posts_count}</p>\r\n          </div>\r\n\r\n          {debugInfo.due_posts_count > 0 && (\r\n            <div style={{ marginBottom: '20px' }}>\r\n              <h4>Posts Due for Execution</h4>\r\n              <div style={{ backgroundColor: '#fff3cd', padding: '10px', borderRadius: '4px', border: '1px solid #ffeaa7' }}>\r\n                {debugInfo.due_posts.map(post => (\r\n                  <div key={post.id} style={{ marginBottom: '5px' }}>\r\n                    <strong>Post {post.id}:</strong> {post.caption} \r\n                    <span style={{ color: '#666', fontSize: '0.9em' }}>\r\n                      ({post.post_type} - {new Date(post.scheduled_datetime).toLocaleString()})\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <h3>All Scheduled Posts</h3>\r\n          <div style={{ overflowX: 'auto' }}>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\r\n              <thead>\r\n                <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>ID</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Caption</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Type</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Status</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Active</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Scheduled Time</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Due</th>\r\n                  <th style={{ padding: '8px', border: '1px solid #ddd' }}>Has Media</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {debugInfo.posts.map(post => (\r\n                  <tr key={post.id}>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd' }}>{post.id}</td>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd', maxWidth: '200px' }}>\r\n                      {post.caption}\r\n                    </td>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd' }}>{post.post_type}</td>\r\n                    <td style={{ \r\n                      padding: '8px', \r\n                      border: '1px solid #ddd',\r\n                      color: getStatusColor(post.status),\r\n                      fontWeight: 'bold'\r\n                    }}>\r\n                      {post.status}\r\n                    </td>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n                      {post.is_active ? '✅' : '❌'}\r\n                    </td>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n                      {post.scheduled_datetime ? new Date(post.scheduled_datetime).toLocaleString() : 'N/A'}\r\n                    </td>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n                      {post.is_due ? '🔔' : '⏳'}\r\n                    </td>\r\n                    <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n                      {post.has_media ? '✅' : '❌'}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchedulerDebug;"],"names":["SchedulerDebug","debugInfo","setDebugInfo","useState","loading","setLoading","message","setMessage","fetchDebugInfo","async","response","apiClient","request","error","console","useEffect","getStatusColor","status","_jsxs","style","padding","fontFamily","children","_jsx","marginBottom","onClick","disabled","marginRight","method","setTimeout","backgroundColor","color","border","includes","borderRadius","Date","current_time_utc","toLocaleString","current_time_ist","total_posts","due_posts_count","due_posts","map","post","id","caption","fontSize","post_type","scheduled_datetime","overflowX","width","borderCollapse","posts","maxWidth","fontWeight","is_active","is_due","has_media"],"sourceRoot":""}