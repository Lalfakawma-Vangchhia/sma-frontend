{"version":3,"file":"static/js/665.d0f6a0bd.chunk.js","mappings":"gNAoLA,QA9KA,WACE,MAAOA,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,MACzCC,GAAWC,EAAAA,EAAAA,OACX,OAAEC,EAAM,KAAEC,IAASC,EAAAA,EAAAA,MACnB,gBAAEC,IAAoBC,EAAAA,EAAAA,KAEtBC,EAAoB,CACxB,CACEC,GAAI,EACJC,MAAO,sBACPC,YAAa,uFACbC,KAAM,YACNC,MACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,eAAcC,UACjEL,EAAAA,EAAAA,KAAA,QAAMM,EAAE,sSAId,CACEX,GAAI,EACJC,MAAO,uBACPC,YAAa,uFACbC,KAAM,aACNC,MACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,eAAcC,UACjEL,EAAAA,EAAAA,KAAA,QAAMM,EAAE,sjCAId,CACEX,GAAI,EACJC,MAAO,mBACPC,YAAa,gFACbC,KAAM,4DACNC,MACEQ,EAAAA,EAAAA,MAAA,OAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOI,OAAO,eAAeC,YAAY,MAAKJ,SAAA,EACjGL,EAAAA,EAAAA,KAAA,QAAMM,EAAE,iFACRN,EAAAA,EAAAA,KAAA,YAAUU,OAAO,uBAIvB,CACEf,GAAI,EACJC,MAAO,uBACPC,YAAa,uDACbC,KAAM,YACNC,MACEQ,EAAAA,EAAAA,MAAA,OAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOI,OAAO,eAAeC,YAAY,MAAKJ,SAAA,EACjGL,EAAAA,EAAAA,KAAA,QAAMM,EAAE,oFACRN,EAAAA,EAAAA,KAAA,QAAMW,EAAE,IAAIC,EAAE,IAAIX,MAAM,IAAIC,OAAO,QACnCF,EAAAA,EAAAA,KAAA,UAAQa,GAAG,IAAIC,GAAG,IAAIC,EAAE,UAI9B,CACEpB,GAAI,EACJC,MAAO,qBACPC,YAAa,2BACbC,KAAM,uCACNC,MACEQ,EAAAA,EAAAA,MAAA,OAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOI,OAAO,eAAeC,YAAY,IAAGJ,SAAA,EAC/FL,EAAAA,EAAAA,KAAA,QAAMW,EAAE,IAAIC,EAAE,KAAKX,MAAM,KAAKC,OAAO,KAAKc,GAAG,KAAKZ,KAAK,UAAUI,OAAO,kBACxER,EAAAA,EAAAA,KAAA,WAASa,GAAG,KAAKC,GAAG,KAAKE,GAAG,IAAIC,GAAG,IAAIb,KAAK,UAAUI,OAAO,kBAC7DR,EAAAA,EAAAA,KAAA,UAAQa,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAAMX,KAAK,kBACrCJ,EAAAA,EAAAA,KAAA,UAAQa,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAAMX,KAAK,kBACrCJ,EAAAA,EAAAA,KAAA,QAAMW,EAAE,KAAKC,EAAE,KAAKX,MAAM,IAAIC,OAAO,IAAIc,GAAG,IAAIZ,KAAK,kBACrDJ,EAAAA,EAAAA,KAAA,QAAMW,EAAE,KAAKC,EAAE,KAAKX,MAAM,IAAIC,OAAO,IAAIc,GAAG,IAAIZ,KAAK,UAAUI,OAAO,kBACtER,EAAAA,EAAAA,KAAA,QAAMW,EAAE,KAAKC,EAAE,IAAIX,MAAM,IAAIC,OAAO,IAAIc,GAAG,IAAIZ,KAAK,UAAUI,OAAO,kBACrER,EAAAA,EAAAA,KAAA,QAAMW,EAAE,KAAKC,EAAE,IAAIX,MAAM,IAAIC,OAAO,IAAIc,GAAG,IAAIZ,KAAK,UAAUI,OAAO,sBAkD7E,OACED,EAAAA,EAAAA,MAAA,QAAMW,UAAU,iBAAgBb,SAAA,EAC9BE,EAAAA,EAAAA,MAAA,OAAKW,UAAU,mBAAkBb,SAAA,EAC/BE,EAAAA,EAAAA,MAAA,OAAKW,UAAU,eAAcb,SAAA,EAC3BL,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,cAAab,UAC1BE,EAAAA,EAAAA,MAAA,OAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOI,OAAO,eAAeC,YAAY,IAAGJ,SAAA,EAC/FL,EAAAA,EAAAA,KAAA,QAAMM,EAAE,+CACRN,EAAAA,EAAAA,KAAA,UAAQa,GAAG,KAAKC,GAAG,IAAIC,EAAE,YAG7Bf,EAAAA,EAAAA,KAAA,QAAMkB,UAAU,YAAWb,UAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,YAAa,aAElDnB,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAASjB,UAC3CE,EAAAA,EAAAA,MAAA,UAAQW,UAAU,aAAaK,QAjDlBC,UACnB,UACQnC,IACNF,EAAS,SACX,CAAE,MAAOsC,GACPC,QAAQD,MAAM,iBAAkBA,EAClC,GA2C2DpB,SAAA,EACnDE,EAAAA,EAAAA,MAAA,OAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,UAAUC,KAAK,OAAOI,OAAO,eAAeC,YAAY,IAAGJ,SAAA,EAC7FL,EAAAA,EAAAA,KAAA,QAAMM,EAAE,6CACRN,EAAAA,EAAAA,KAAA,YAAUU,OAAO,sBACjBV,EAAAA,EAAAA,KAAA,QAAM2B,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,UAC5B,kBAKZ9B,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,mBAAkBb,SAC9BX,EAAkBqC,IAAKC,IACtBzB,EAAAA,EAAAA,MAAA,OAEEW,UAAW,sBAAqBlC,IAAgBgD,EAAOrC,GAAK,SAAW,IACvEsC,aAAcA,IAAMhD,EAAe+C,EAAOrC,IAC1CuC,aAAcA,IAAMjD,EAAe,MAAMoB,SAAA,EAEzCL,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,cAAab,SAAE2B,EAAOjC,QAErCQ,EAAAA,EAAAA,MAAA,OAAKW,UAAU,iBAAgBb,SAAA,EAC7BL,EAAAA,EAAAA,KAAA,MAAIkB,UAAU,eAAcb,SAAE2B,EAAOpC,SACrCI,EAAAA,EAAAA,KAAA,KAAGkB,UAAU,qBAAoBb,SAAE2B,EAAOnC,kBAG5CG,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,gBAAeb,UAC5BE,EAAAA,EAAAA,MAAA,UACEW,UAAU,aACVK,QAASA,KArFIzB,SAqFoBkC,EAAOlC,MApF3CqC,WAAW,YAAcrC,EAAKqC,WAAW,YAChDC,OAAOC,KAAKvC,EAAM,UAElBX,EAASW,IAiF+CO,SAAA,EAE9CL,EAAAA,EAAAA,KAAA,QAAAK,SAAM,mBACNL,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOI,OAAO,eAAeC,YAAY,IAAGJ,UAC/FL,EAAAA,EAAAA,KAAA,YAAUU,OAAO,4BAnBlBsB,EAAOrC,SA4BxB,C","sources":["components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNotifications } from '../contexts/NotificationContext';\r\nimport apiClient from '../services/apiClient';\r\n\r\nfunction Dashboard() {\r\n  const [hoveredCard, setHoveredCard] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { logout, user } = useAuth();\r\n  const { addNotification } = useNotifications();\r\n\r\n  const automationModules = [\r\n    {\r\n      id: 1,\r\n      title: 'Facebook Automation',\r\n      description: 'Intelligent content scheduling and engagement automation across all social platforms',\r\n      path: '/facebook',\r\n      icon: (\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n          <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Instagram Automation',\r\n      description: 'Intelligent content scheduling and engagement automation across all social platforms',\r\n      path: '/instagram',\r\n      icon: (\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n          <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\" />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Email Automation',\r\n      description: 'Advanced email sequences with behavioral triggers and personalization engines',\r\n      path: 'https://email-automation-dashboard-frontend.onrender.com/',\r\n      icon: (\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\r\n          <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\r\n          <polyline points=\"22,6 12,13 2,6\" />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Linked In Automation',\r\n      description: 'AI-driven network building and engagement automation',\r\n      path: '/linkedin',\r\n      icon: (\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\r\n          <path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\" />\r\n          <rect x=\"2\" y=\"9\" width=\"4\" height=\"12\" />\r\n          <circle cx=\"4\" cy=\"4\" r=\"2\" />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'ThorSignia ChatBot',\r\n      description: 'A chatbot for thorsignia',\r\n      path: 'https://82a99f7c9188.ngrok-free.app/',\r\n      icon: (\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 48 48\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n          <rect x=\"8\" y=\"14\" width=\"32\" height=\"20\" rx=\"10\" fill=\"#f3f4f6\" stroke=\"currentColor\" />\r\n          <ellipse cx=\"24\" cy=\"34\" rx=\"8\" ry=\"4\" fill=\"#f3f4f6\" stroke=\"currentColor\" />\r\n          <circle cx=\"18\" cy=\"24\" r=\"2.5\" fill=\"currentColor\" />\r\n          <circle cx=\"30\" cy=\"24\" r=\"2.5\" fill=\"currentColor\" />\r\n          <rect x=\"22\" y=\"28\" width=\"4\" height=\"2\" rx=\"1\" fill=\"currentColor\" />\r\n          <rect x=\"20\" y=\"10\" width=\"8\" height=\"4\" rx=\"2\" fill=\"#f3f4f6\" stroke=\"currentColor\" />\r\n          <rect x=\"12\" y=\"8\" width=\"4\" height=\"4\" rx=\"2\" fill=\"#f3f4f6\" stroke=\"currentColor\" />\r\n          <rect x=\"32\" y=\"8\" width=\"4\" height=\"4\" rx=\"2\" fill=\"#f3f4f6\" stroke=\"currentColor\" />\r\n        </svg>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const handleModuleClick = (path) => {\r\n    if (path.startsWith('http://') || path.startsWith('https://')) {\r\n      window.open(path, '_blank');\r\n    } else {\r\n      navigate(path);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  // Test notification function\r\n  const testNotification = async () => {\r\n    try {\r\n      // Test backend notification creation\r\n      const response = await apiClient.testNotification();\r\n      \r\n      if (response.success) {\r\n        console.log('✅ Backend test notification created successfully');\r\n        alert('✅ Backend test notification created! Check the notification bell.');\r\n      } else {\r\n        console.error('❌ Backend test notification failed');\r\n        alert('❌ Backend test notification failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error creating backend test notification:', error);\r\n      alert('❌ Error creating backend test notification: ' + error.message);\r\n    }\r\n    \r\n    // Also add a frontend test notification\r\n    addNotification({\r\n      type: 'pre_posting',\r\n      platform: 'instagram',\r\n      strategyName: 'Frontend Test',\r\n      message: 'This is a frontend test notification to verify the UI is working properly.'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"dashboard-main\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"user-profile\">\r\n          <div className=\"user-avatar\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n              <circle cx=\"12\" cy=\"7\" r=\"4\" />\r\n            </svg>\r\n          </div>\r\n          <span className=\"user-name\">{user?.full_name || 'User'}</span>\r\n        </div>\r\n        <div style={{ display: 'flex', gap: '10px' }}>\r\n          <button className=\"logout-btn\" onClick={handleLogout}>\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 0 0\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\r\n              <polyline points=\"16,17 21,12 16,7\" />\r\n              <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\" />\r\n            </svg>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"automation-suite\">\r\n        {automationModules.map((module) => (\r\n          <div\r\n            key={module.id}\r\n            className={`automation-module ${hoveredCard === module.id ? 'active' : ''}`}\r\n            onMouseEnter={() => setHoveredCard(module.id)}\r\n            onMouseLeave={() => setHoveredCard(null)}\r\n          >\r\n            <div className=\"module-icon\">{module.icon}</div>\r\n\r\n            <div className=\"module-content\">\r\n              <h3 className=\"module-title\">{module.title}</h3>\r\n              <p className=\"module-description\">{module.description}</p>\r\n            </div>\r\n\r\n            <div className=\"module-action\">\r\n              <button\r\n                className=\"access-btn\"\r\n                onClick={() => handleModuleClick(module.path)}\r\n              >\r\n                <span>Launch Module</span>\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                  <polyline points=\"9,18 15,12 9,6\"></polyline>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </main >\r\n  );\r\n}\r\n\r\nexport default Dashboard; "],"names":["hoveredCard","setHoveredCard","useState","navigate","useNavigate","logout","user","useAuth","addNotification","useNotifications","automationModules","id","title","description","path","icon","_jsx","width","height","viewBox","fill","children","d","_jsxs","stroke","strokeWidth","points","x","y","cx","cy","r","rx","ry","className","full_name","style","display","gap","onClick","async","error","console","x1","y1","x2","y2","map","module","onMouseEnter","onMouseLeave","startsWith","window","open"],"sourceRoot":""}